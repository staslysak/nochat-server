{"version":3,"sources":["../../src/data/OperationData.ts","../../src/data/QueryData.ts","../../src/utils/useBaseQuery.ts","../../src/utils/useDeepMemo.ts","../../src/useQuery.ts","../../src/useLazyQuery.ts","../../src/data/MutationData.ts","../../src/useMutation.ts","../../src/data/SubscriptionData.ts","../../src/ssr/RenderPromises.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/graphql-tag/src/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/graphql/jsutils/devAssert.mjs","../node_modules/graphql/jsutils/isObjectLike.mjs","../node_modules/graphql/polyfills/symbols.mjs","../node_modules/graphql/language/location.mjs","../node_modules/graphql/language/printLocation.mjs","../node_modules/graphql/error/GraphQLError.mjs","../node_modules/graphql/error/syntaxError.mjs","../node_modules/graphql/language/source.mjs","../node_modules/graphql/language/directiveLocation.mjs","../node_modules/graphql/language/tokenKind.mjs","../node_modules/graphql/language/lexer.mjs","../node_modules/graphql/language/parser.mjs"],"names":["options","context","isMounted","previousOptions","this","getOptions","setOptions","newOptions","storePrevious","isEqual","unmount","refreshClient","client","isNew","cleanup","verifyDocumentType","document","type","operation","onNewData","previousData","currentObservable","runLazy","runLazyQuery","lazyOptions","getExecuteResult","result","getQueryResult","startQuerySubscription","obsRefetch","variables","query","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","skip","removeQuerySubscription","updateObservableQuery","getExecuteSsrResult","executeLazy","loading","networkStatus","ready","called","data","undefined","fetchData","ssr","obs","getCurrentResult","afterExecute","lazy","handleErrorOrCompleted","setTimeout","resetQueryStoreErrors","bind","ssrInitiated","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","addQueryPromise","prepareObservableQueryOptions","Query","displayName","fetchPolicy","metadata","reactComponent","initializeObservableQuery","getSSRObservable","observableQueryOptions","children","watchQuery","registerSSRObservable","newObservableQueryOptions","catch","subscription","obsQuery","subscribe","next","previousResult","error","resubscribeToQuery","hasOwnProperty","lastError","getLastError","lastResult","getLastResult","resetLastResults","Object","assign","observableQueryFields","currentResult","partial","errors","length","graphQLErrors","partialRefetch","onCompleted","onError","unsubscribe","OperationData","useBaseQuery","tick","forceUpdate","updatedOptions","isRendering","isRenderScheduled","queryDataRef","queryData","current","QueryData","memoFn","key","ref","value","useDeepMemo","queryResult","useQuery","useLazyQuery","setResult","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","then","response","onMutationCompleted","onMutationError","mutation","Mutation","mostRecentMutationId","optimisticResponse","update","awaitRefetchQueries","mutateOptions","mutateVariables","refetchQueries","mutationContext","ignoreResults","updateResult","isMostRecentMutation","useMutation","mutationDataRef","mutationData","MutationData","initialize","getLoadingResult","shouldResubscribe","keys","startSubscription","endSubscription","updateCurrentData","updateError","complete","completeSubscription","onSubscriptionData","subscriptionData","onSubscriptionComplete","queryPromises","Map","queryInfoTrie","observable","props","lookupQueryInfo","queryInstance","finish","seen","set","Promise","resolve","hasPromises","size","consumeAndAwaitPromises","promises","forEach","promise","push","clear","all","varMap","get","has","variablesString","JSON","stringify","info","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","done","err","unsupportedIterableToArray","TypeError","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","parse","require","normalize","string","replace","trim","docCache","fragmentSourceMap","printFragmentWarnings","experimentalFragmentVariables","parseDocument","doc","cacheKey","parsed","kind","Error","stripLoc","removeLocAtThisLevel","docType","prototype","toString","call","map","d","loc","startToken","endToken","valueType","ast","astFragmentMap","definitions","fragmentDefinition","fragmentName","name","sourceKey","source","body","substring","start","end","console","warn","processFragments","gql","args","arguments","literals","default","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","module","exports","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","n","constructor","from","test","devAssert","condition","message","Boolean","_typeof","obj","asyncIterator","SYMBOL_TO_STRING_TAG","toStringTag","getLocation","position","match","lineRegexp","line","column","exec","index","printLocation","location","printSourceLocation","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","concat","lines","split","locationLine","subLineIndex","Math","floor","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","filter","_ref","padLen","max","apply","_ref2","_ref3","str","prefix","join","_defineProperties","target","descriptor","enumerable","configurable","writable","defineProperty","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","fn","Function","indexOf","Wrapper","_construct","_getPrototypeOf","create","_setPrototypeOf","Parent","_isNativeReflectConstruct","Reflect","construct","a","instance","sham","Proxy","Date","e","p","setPrototypeOf","__proto__","getPrototypeOf","GraphQLError","_Error","subClass","superClass","_inherits","Derived","Constructor","protoProps","staticProps","_super","Super","NewTarget","nodes","positions","path","originalError","extensions","_locations2","_source2","_positions2","_extensions2","_this","_classCallCheck","_nodes$0$loc","_nodes","_source","_locations","_positions","reduce","list","node","pos","_extensions","originalExtensions","locations","stack","captureStackTrace","output","_i2","_error$nodes2","_i4","_error$locations2","printError","syntaxError","description","Source","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","FIELD","FRAGMENT_DEFINITION","FRAGMENT_SPREAD","INLINE_FRAGMENT","VARIABLE_DEFINITION","SCHEMA","SCALAR","OBJECT","FIELD_DEFINITION","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","TokenKind","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","NAME","INT","FLOAT","STRING","BLOCK_STRING","COMMENT","Lexer","startOfFileToken","Token","lastToken","token","lineStart","_proto","advance","lookahead","_token$next","readToken","printCharCode","code","isNaN","String","fromCharCode","toUpperCase","lexer","prev","bodyLength","startPosition","charCodeAt","positionAfterWhitespace","col","readComment","readName","firstCode","isFloat","readDigits","isNameStart","readNumber","chunkStart","rawValue","dedentBlockStringValue","readBlockString","charCode","b","c","char2hex","invalidSequence","readString","unexpectedCharacterMessage","Parser","parseValue","parser","expectToken","parseValueLiteral","parseType","parseTypeReference","sourceObj","inspect","_lexer","_options","parseName","Kind","DOCUMENT","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","OPERATION_DEFINITION","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","defaultValue","expectOptionalToken","VARIABLE","SELECTION_SET","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","item","parseConstArgument","parseArgument","ARGUMENT","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","_this$_options","expectKeyword","parseList","parseObject","parseStringLiteral","BOOLEAN","NULL","block","LIST","values","any","_this2","fields","parseObjectField","OBJECT_FIELD","parseDirective","DIRECTIVE","LIST_TYPE","NON_NULL_TYPE","NAMED_TYPE","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","interfaces","parseImplementsInterfaces","parseFieldsDefinition","OBJECT_TYPE_DEFINITION","types","_this$_options2","allowLegacySDLImplementsInterfaces","_this$_options3","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","parseUnionMemberTypes","UNION_TYPE_DEFINITION","parseEnumValuesDefinition","ENUM_TYPE_DEFINITION","parseEnumValueDefinition","ENUM_VALUE_DEFINITION","parseInputFieldsDefinition","INPUT_OBJECT_TYPE_DEFINITION","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","repeatable","parseDirectiveLocations","DIRECTIVE_DEFINITION","parseDirectiveLocation","_this$_options4","noLocation","Location","getTokenKindDesc","getTokenDesc","atToken","openKind","parseFn","closeKind","isPunctuatorTokenKind"],"mappings":"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","file":"static/js/0.8ae591e5.chunk.js","sourcesContent":["import { ApolloClient } from 'apollo-client';\nimport { equal as isEqual } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\nimport {\n  ApolloContextValue,\n  parser,\n  DocumentType,\n  operationName\n} from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { CommonOptions } from '../types';\n\nexport abstract class OperationData<TOptions = any> {\n  public isMounted: boolean = false;\n  public previousOptions: CommonOptions<TOptions> = {} as CommonOptions<\n    TOptions\n  >;\n  public context: ApolloContextValue = {};\n  public client: ApolloClient<object> | undefined;\n\n  private options: CommonOptions<TOptions> = {} as CommonOptions<TOptions>;\n\n  constructor(options?: CommonOptions<TOptions>, context?: ApolloContextValue) {\n    this.options = options || ({} as CommonOptions<TOptions>);\n    this.context = context || {};\n  }\n\n  public getOptions(): CommonOptions<TOptions> {\n    return this.options;\n  }\n\n  public setOptions(\n    newOptions: CommonOptions<TOptions>,\n    storePrevious: boolean = false\n  ) {\n    if (storePrevious && !isEqual(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n    this.options = newOptions;\n  }\n\n  public abstract execute(...args: any): any;\n  public abstract afterExecute(...args: any): void | (() => void);\n  public abstract cleanup(): void;\n\n  protected unmount() {\n    this.isMounted = false;\n  }\n\n  protected refreshClient() {\n    const client =\n      (this.options && this.options.client) ||\n      (this.context && this.context.client);\n\n    invariant(\n      !!client,\n      'Could not find \"client\" in the context or passed in as an option. ' +\n        'Wrap the root component in an <ApolloProvider>, or pass an ' +\n        'ApolloClient instance in via options.'\n    );\n\n    let isNew = false;\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n    return {\n      client: this.client as ApolloClient<object>,\n      isNew\n    };\n  }\n\n  protected verifyDocumentType(document: DocumentNode, type: DocumentType) {\n    const operation = parser(document);\n    const requiredOperationName = operationName(type);\n    const usedOperationName = operationName(operation.type);\n    invariant(\n      operation.type === type,\n      `Running a ${requiredOperationName} requires a graphql ` +\n        `${requiredOperationName}, but a ${usedOperationName} was used instead.`\n    );\n  }\n}\n","import {\n  ApolloQueryResult,\n  ApolloError,\n  NetworkStatus,\n  FetchMoreOptions,\n  FetchMoreQueryOptions,\n  UpdateQueryOptions,\n  SubscribeToMoreOptions\n} from 'apollo-client';\nimport { equal as isEqual } from '@wry/equality';\nimport {\n  ApolloContextValue,\n  DocumentType,\n  QueryResult,\n  ObservableQueryFields\n} from '@apollo/react-common';\n\nimport {\n  QueryPreviousData,\n  QueryOptions,\n  QueryCurrentObservable,\n  QueryTuple,\n  QueryLazyOptions\n} from '../types';\nimport { OperationData } from './OperationData';\n\nexport class QueryData<TData, TVariables> extends OperationData {\n  public onNewData: () => void;\n\n  private previousData: QueryPreviousData<TData, TVariables> = {};\n  private currentObservable: QueryCurrentObservable<TData, TVariables> = {};\n  private runLazy: boolean = false;\n  private lazyOptions?: QueryLazyOptions<TVariables>;\n\n  constructor({\n    options,\n    context,\n    onNewData\n  }: {\n    options: QueryOptions<TData, TVariables>;\n    context: ApolloContextValue;\n    onNewData: () => void;\n  }) {\n    super(options, context);\n    this.onNewData = onNewData;\n  }\n\n  public execute(): QueryResult<TData, TVariables> {\n    this.refreshClient();\n\n    const { skip, query } = this.getOptions();\n    if (skip || query !== this.previousData.query) {\n      this.removeQuerySubscription();\n      this.previousData.query = query;\n    }\n\n    this.updateObservableQuery();\n\n    if (this.isMounted) this.startQuerySubscription();\n\n    return this.getExecuteSsrResult() || this.getExecuteResult();\n  }\n\n  public executeLazy(): QueryTuple<TData, TVariables> {\n    return !this.runLazy\n      ? [\n          this.runLazyQuery,\n          {\n            loading: false,\n            networkStatus: NetworkStatus.ready,\n            called: false,\n            data: undefined\n          } as QueryResult<TData, TVariables>\n        ]\n      : [this.runLazyQuery, this.execute()];\n  }\n\n  // For server-side rendering\n  public fetchData(): Promise<ApolloQueryResult<any>> | boolean {\n    const options = this.getOptions();\n    if (options.skip || options.ssr === false) return false;\n\n    // currentObservable.query is already assigned the registered SSR observable in initializeObservableQuery.\n    const obs = this.currentObservable.query!;\n    const currentResult = obs.getCurrentResult();\n    return currentResult.loading ? obs.result() : false;\n  }\n\n  public afterExecute({ lazy = false }: { lazy?: boolean } = {}) {\n    this.isMounted = true;\n\n    if (!lazy || this.runLazy) {\n      this.handleErrorOrCompleted();\n\n      // When the component is done rendering stored query errors, we'll\n      // remove those errors from the `ObservableQuery` query store, so they\n      // aren't re-displayed on subsequent (potentially error free)\n      // requests/responses.\n      setTimeout(() => {\n        this.currentObservable.query &&\n          this.currentObservable.query.resetQueryStoreErrors();\n      });\n    }\n\n    this.previousOptions = this.getOptions();\n    return this.unmount.bind(this);\n  }\n\n  public cleanup() {\n    this.removeQuerySubscription();\n    delete this.currentObservable.query;\n    delete this.previousData.result;\n  }\n\n  public getOptions() {\n    const options = super.getOptions();\n\n    if (this.lazyOptions) {\n      options.variables = {\n        ...options.variables,\n        ...this.lazyOptions.variables\n      };\n      options.context = {\n        ...options.context,\n        ...this.lazyOptions.context\n      };\n    }\n\n    // skip is not supported when using lazy query execution.\n    if (this.runLazy) {\n      delete options.skip;\n    }\n\n    return options;\n  }\n\n  public ssrInitiated() {\n    return this.context && this.context.renderPromises;\n  }\n\n  private runLazyQuery = (options?: QueryLazyOptions<TVariables>) => {\n    this.cleanup();\n    this.runLazy = true;\n    this.lazyOptions = options;\n    this.onNewData();\n  };\n\n  private getExecuteResult = (): QueryResult<TData, TVariables> => {\n    const result = this.getQueryResult();\n    this.startQuerySubscription();\n    return result;\n  };\n\n  private getExecuteSsrResult() {\n    const ssrDisabled = this.getOptions().ssr === false;\n    const fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n\n    const ssrLoading = {\n      loading: true,\n      networkStatus: NetworkStatus.loading,\n      called: true,\n      data: undefined\n    } as QueryResult<TData, TVariables>;\n\n    // If SSR has been explicitly disabled, and this function has been called\n    // on the server side, return the default loading state.\n    if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n      return ssrLoading;\n    }\n\n    let result;\n    if (this.ssrInitiated()) {\n      result =\n        this.context.renderPromises!.addQueryPromise(\n          this,\n          this.getExecuteResult\n        ) || ssrLoading;\n    }\n\n    return result;\n  }\n\n  private prepareObservableQueryOptions() {\n    const options = this.getOptions();\n    this.verifyDocumentType(options.query, DocumentType.Query);\n    const displayName = options.displayName || 'Query';\n\n    // Set the fetchPolicy to cache-first for network-only and cache-and-network\n    // fetches for server side renders.\n    if (\n      this.ssrInitiated() &&\n      (options.fetchPolicy === 'network-only' ||\n        options.fetchPolicy === 'cache-and-network')\n    ) {\n      options.fetchPolicy = 'cache-first';\n    }\n\n    return {\n      ...options,\n      displayName,\n      context: options.context,\n      metadata: { reactComponent: { displayName } }\n    };\n  }\n\n  private initializeObservableQuery() {\n    // See if there is an existing observable that was used to fetch the same\n    // data and if so, use it instead since it will contain the proper queryId\n    // to fetch the result set. This is used during SSR.\n    if (this.ssrInitiated()) {\n      this.currentObservable.query = this.context!.renderPromises!.getSSRObservable(\n        this.getOptions()\n      );\n    }\n\n    if (!this.currentObservable.query) {\n      const observableQueryOptions = this.prepareObservableQueryOptions();\n\n      this.previousData.observableQueryOptions = {\n        ...observableQueryOptions,\n        children: null\n      };\n      this.currentObservable.query = this.refreshClient().client.watchQuery({\n        ...observableQueryOptions\n      });\n\n      if (this.ssrInitiated()) {\n        this.context?.renderPromises?.registerSSRObservable(\n          this.currentObservable.query,\n          observableQueryOptions\n        );\n      }\n    }\n  }\n\n  private updateObservableQuery() {\n    // If we skipped initially, we may not have yet created the observable\n    if (!this.currentObservable.query) {\n      this.initializeObservableQuery();\n      return;\n    }\n\n    const newObservableQueryOptions = {\n      ...this.prepareObservableQueryOptions(),\n      children: null\n    };\n\n    if (\n      !isEqual(\n        newObservableQueryOptions,\n        this.previousData.observableQueryOptions\n      )\n    ) {\n      this.previousData.observableQueryOptions = newObservableQueryOptions;\n      this.currentObservable\n        .query!.setOptions(newObservableQueryOptions)\n        // The error will be passed to the child container, so we don't\n        // need to log it here. We could conceivably log something if\n        // an option was set. OTOH we don't log errors w/ the original\n        // query. See https://github.com/apollostack/react-apollo/issues/404\n        .catch(() => {});\n    }\n  }\n\n  private startQuerySubscription() {\n    if (this.currentObservable.subscription || this.getOptions().skip) return;\n\n    const obsQuery = this.currentObservable.query!;\n    this.currentObservable.subscription = obsQuery.subscribe({\n      next: ({ loading, networkStatus, data }) => {\n        const previousResult = this.previousData.result;\n\n        // Make sure we're not attempting to re-render similar results\n        if (\n          previousResult &&\n          previousResult.loading === loading &&\n          previousResult.networkStatus === networkStatus &&\n          isEqual(previousResult.data, data)\n        ) {\n          return;\n        }\n\n        this.onNewData();\n      },\n      error: error => {\n        this.resubscribeToQuery();\n        if (!error.hasOwnProperty('graphQLErrors')) throw error;\n\n        const previousResult = this.previousData.result;\n        if (\n          (previousResult && previousResult.loading) ||\n          !isEqual(error, this.previousData.error)\n        ) {\n          this.previousData.error = error;\n          this.onNewData();\n        }\n      }\n    });\n  }\n\n  private resubscribeToQuery() {\n    this.removeQuerySubscription();\n\n    // Unfortunately, if `lastError` is set in the current\n    // `observableQuery` when the subscription is re-created,\n    // the subscription will immediately receive the error, which will\n    // cause it to terminate again. To avoid this, we first clear\n    // the last error/result from the `observableQuery` before re-starting\n    // the subscription, and restore it afterwards (so the subscription\n    // has a chance to stay open).\n    const lastError = this.currentObservable.query!.getLastError();\n    const lastResult = this.currentObservable.query!.getLastResult();\n    this.currentObservable.query!.resetLastResults();\n    this.startQuerySubscription();\n    Object.assign(this.currentObservable.query!, {\n      lastError,\n      lastResult\n    });\n  }\n\n  private getQueryResult(): QueryResult<TData, TVariables> {\n    let result: any = this.observableQueryFields();\n    const options = this.getOptions();\n\n    // When skipping a query (ie. we're not querying for data but still want\n    // to render children), make sure the `data` is cleared out and\n    // `loading` is set to `false` (since we aren't loading anything).\n    if (options.skip) {\n      result = {\n        ...result,\n        data: undefined,\n        error: undefined,\n        loading: false,\n        called: true\n      };\n    } else {\n      // Fetch the current result (if any) from the store.\n      const currentResult = this.currentObservable.query!.getCurrentResult();\n      const { loading, partial, networkStatus, errors } = currentResult;\n      let { error, data } = currentResult;\n\n      // Until a set naming convention for networkError and graphQLErrors is\n      // decided upon, we map errors (graphQLErrors) to the error options.\n      if (errors && errors.length > 0) {\n        error = new ApolloError({ graphQLErrors: errors });\n      }\n\n      result = {\n        ...result,\n        loading,\n        networkStatus,\n        error,\n        called: true\n      };\n\n      if (loading) {\n        const previousData =\n          this.previousData.result && this.previousData.result.data;\n        result.data =\n          previousData && data\n            ? {\n                ...previousData,\n                ...data\n              }\n            : previousData || data;\n      } else if (error) {\n        Object.assign(result, {\n          data: (this.currentObservable.query!.getLastResult() || ({} as any))\n            .data\n        });\n      } else {\n        const { fetchPolicy } = this.currentObservable.query!.options;\n        const { partialRefetch } = options;\n        if (\n          partialRefetch &&\n          !data &&\n          partial &&\n          fetchPolicy !== 'cache-only'\n        ) {\n          // When a `Query` component is mounted, and a mutation is executed\n          // that returns the same ID as the mounted `Query`, but has less\n          // fields in its result, Apollo Client's `QueryManager` returns the\n          // data as `undefined` since a hit can't be found in the cache.\n          // This can lead to application errors when the UI elements rendered by\n          // the original `Query` component are expecting certain data values to\n          // exist, and they're all of a sudden stripped away. To help avoid\n          // this we'll attempt to refetch the `Query` data.\n          Object.assign(result, {\n            loading: true,\n            networkStatus: NetworkStatus.loading\n          });\n          result.refetch();\n          return result;\n        }\n\n        result.data = data;\n      }\n    }\n\n    result.client = this.client;\n    this.previousData.loading =\n      (this.previousData.result && this.previousData.result.loading) || false;\n    this.previousData.result = result;\n    return result;\n  }\n\n  private handleErrorOrCompleted() {\n    const obsQuery = this.currentObservable.query;\n    if (!obsQuery) return;\n\n    const { data, loading, error } = obsQuery.getCurrentResult();\n\n    if (!loading) {\n      const { query, variables, onCompleted, onError } = this.getOptions();\n\n      // No changes, so we won't call onError/onCompleted.\n      if (\n        this.previousOptions &&\n        !this.previousData.loading &&\n        isEqual(this.previousOptions.query, query) &&\n        isEqual(this.previousOptions.variables, variables)\n      ) {\n        return;\n      }\n\n      if (onCompleted && !error) {\n        onCompleted(data);\n      } else if (onError && error) {\n        onError(error);\n      }\n    }\n  }\n\n  private removeQuerySubscription() {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  }\n\n  private obsRefetch = (variables?: TVariables) =>\n    this.currentObservable.query!.refetch(variables);\n\n  private obsFetchMore = <K extends keyof TVariables>(\n    fetchMoreOptions: FetchMoreQueryOptions<TVariables, K> &\n      FetchMoreOptions<TData, TVariables>\n  ) => this.currentObservable.query!.fetchMore(fetchMoreOptions);\n\n  private obsUpdateQuery = <TVars = TVariables>(\n    mapFn: (\n      previousQueryResult: TData,\n      options: UpdateQueryOptions<TVars>\n    ) => TData\n  ) => this.currentObservable.query!.updateQuery(mapFn);\n\n  private obsStartPolling = (pollInterval: number) => {\n    this.currentObservable &&\n      this.currentObservable.query! &&\n      this.currentObservable.query!.startPolling(pollInterval);\n  };\n\n  private obsStopPolling = () => {\n    this.currentObservable &&\n      this.currentObservable.query! &&\n      this.currentObservable.query!.stopPolling();\n  };\n\n  private obsSubscribeToMore = <\n    TSubscriptionData = TData,\n    TSubscriptionVariables = TVariables\n  >(\n    options: SubscribeToMoreOptions<\n      TData,\n      TSubscriptionVariables,\n      TSubscriptionData\n    >\n  ) => this.currentObservable.query!.subscribeToMore(options);\n\n  private observableQueryFields() {\n    const observable = this.currentObservable.query!;\n    return {\n      variables: observable.variables,\n      refetch: this.obsRefetch,\n      fetchMore: this.obsFetchMore,\n      updateQuery: this.obsUpdateQuery,\n      startPolling: this.obsStartPolling,\n      stopPolling: this.obsStopPolling,\n      subscribeToMore: this.obsSubscribeToMore\n    } as ObservableQueryFields<TData, TVariables>;\n  }\n}\n","import { useContext, useEffect, useReducer, useRef } from 'react';\nimport {\n  getApolloContext,\n  OperationVariables,\n  QueryResult\n} from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { QueryHookOptions, QueryOptions, QueryTuple } from '../types';\nimport { QueryData } from '../data/QueryData';\nimport { useDeepMemo } from './useDeepMemo';\n\nexport function useBaseQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode,\n  options?: QueryHookOptions<TData, TVariables>,\n  lazy = false\n) {\n  const context = useContext(getApolloContext());\n  const [tick, forceUpdate] = useReducer(x => x + 1, 0);\n  const updatedOptions = options ? { ...options, query } : { query };\n  const isRendering = useRef(true);\n  const isRenderScheduled = useRef(false);\n\n  const queryDataRef = useRef<QueryData<TData, TVariables>>();\n  const queryData =\n    queryDataRef.current ||\n    new QueryData<TData, TVariables>({\n      options: updatedOptions as QueryOptions<TData, TVariables>,\n      context,\n      onNewData() {\n        // When new data is received from the `QueryData` object, we want to\n        // force a re-render to make sure the new data is displayed. We can't\n        // force that re-render if we're already rendering however, so in that\n        // case we'll defer triggering a re-render until we're inside an effect\n        // hook.\n        if (!queryData.ssrInitiated() && isRendering.current) {\n          isRenderScheduled.current = true;\n        } else {\n          forceUpdate();\n        }\n      }\n    });\n\n  queryData.setOptions(updatedOptions);\n  queryData.context = context;\n\n  // SSR won't trigger the effect hook below that stores the current\n  // `QueryData` instance for future renders, so we'll handle that here if\n  // the current render is happening server side.\n  if (queryData.ssrInitiated() && !queryDataRef.current) {\n    queryDataRef.current = queryData;\n  }\n\n  // `onError` and `onCompleted` callback functions will not always have a\n  // stable identity, so we'll exclude them from the memoization key to\n  // prevent `afterExecute` from being triggered un-necessarily.\n  const memo = {\n    options: { ...updatedOptions, onError: undefined, onCompleted: undefined },\n    context,\n    tick\n  };\n\n  const result = useDeepMemo(\n    () => (lazy ? queryData.executeLazy() : queryData.execute()),\n    memo\n  );\n\n  const queryResult = lazy\n    ? (result as QueryTuple<TData, TVariables>)[1]\n    : (result as QueryResult<TData, TVariables>);\n\n  useEffect(() => {\n    // We only need one instance of the `QueryData` class, so we'll store it\n    // as a ref to make it available on subsequent renders.\n    if (!queryDataRef.current) {\n      queryDataRef.current = queryData;\n    }\n\n    // If `QueryData` requested a re-render to show new data while we were\n    // in a render phase, let's handle the re-render here where it's safe to do\n    // so.\n    isRendering.current = false;\n    if (isRenderScheduled.current) {\n      isRenderScheduled.current = false;\n      forceUpdate();\n    }\n  });\n\n  useEffect(() => queryData.afterExecute({ lazy }), [\n    queryResult.loading,\n    queryResult.networkStatus,\n    queryResult.error,\n    queryResult.data\n  ]);\n\n  useEffect(() => {\n    return () => queryData.cleanup();\n  }, []);\n\n  return result;\n}\n","import { useRef } from 'react';\nimport { equal as isEqual } from '@wry/equality';\n\n/**\n * Memoize a result using deep equality. This hook has two advantages over\n * React.useMemo: it uses deep equality to compare memo keys, and it guarantees\n * that the memo function will only be called if the keys are unequal.\n * React.useMemo cannot be relied on to do this, since it is only a performance\n * optimization (see https://reactjs.org/docs/hooks-reference.html#usememo).\n */\nexport function useDeepMemo<TKey, TValue>(\n  memoFn: () => TValue,\n  key: TKey\n): TValue {\n  const ref = useRef<{ key: TKey; value: TValue }>();\n\n  if (!ref.current || !isEqual(key, ref.current.key)) {\n    ref.current = { key, value: memoFn() };\n  }\n\n  return ref.current.value;\n}\n","import { OperationVariables, QueryResult } from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { QueryHookOptions } from './types';\nimport { useBaseQuery } from './utils/useBaseQuery';\n\nexport function useQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode,\n  options?: QueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, false) as QueryResult<\n    TData,\n    TVariables\n  >;\n}\n","import { OperationVariables } from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { LazyQueryHookOptions, QueryTuple } from './types';\nimport { useBaseQuery } from './utils/useBaseQuery';\n\nexport function useLazyQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode,\n  options?: LazyQueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, true) as QueryTuple<\n    TData,\n    TVariables\n  >;\n}\n","import { ApolloError } from 'apollo-client';\nimport { equal as isEqual } from '@wry/equality';\nimport {\n  ApolloContextValue,\n  DocumentType,\n  OperationVariables,\n  ExecutionResult,\n  MutationFunctionOptions,\n  MutationResult\n} from '@apollo/react-common';\n\nimport { MutationOptions, MutationTuple } from '../types';\nimport { OperationData } from './OperationData';\n\nexport class MutationData<\n  TData = any,\n  TVariables = OperationVariables\n> extends OperationData {\n  private mostRecentMutationId: number;\n  private result: MutationResult<TData>;\n  private previousResult?: MutationResult<TData>;\n  private setResult: (result: MutationResult<TData>) => any;\n\n  constructor({\n    options,\n    context,\n    result,\n    setResult\n  }: {\n    options: MutationOptions<TData, TVariables>;\n    context: ApolloContextValue;\n    result: MutationResult<TData>;\n    setResult: (result: MutationResult<TData>) => any;\n  }) {\n    super(options, context);\n    this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n    this.result = result;\n    this.setResult = setResult;\n    this.mostRecentMutationId = 0;\n  }\n\n  public execute(result: MutationResult<TData>) {\n    this.isMounted = true;\n    this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n    result.client = this.refreshClient().client;\n    return [this.runMutation, result] as MutationTuple<TData, TVariables>;\n  }\n\n  public afterExecute() {\n    this.isMounted = true;\n    return this.unmount.bind(this);\n  }\n\n  public cleanup() {\n    // No cleanup required.\n  }\n\n  private runMutation = (\n    mutationFunctionOptions: MutationFunctionOptions<\n      TData,\n      TVariables\n    > = {} as MutationFunctionOptions<TData, TVariables>\n  ) => {\n    this.onMutationStart();\n    const mutationId = this.generateNewMutationId();\n\n    return this.mutate(mutationFunctionOptions)\n      .then((response: ExecutionResult<TData>) => {\n        this.onMutationCompleted(response, mutationId);\n        return response;\n      })\n      .catch((error: ApolloError) => {\n        this.onMutationError(error, mutationId);\n        if (!this.getOptions().onError) throw error;\n      });\n  };\n\n  private mutate(\n    mutationFunctionOptions: MutationFunctionOptions<TData, TVariables>\n  ) {\n    const {\n      mutation,\n      variables,\n      optimisticResponse,\n      update,\n      context: mutationContext = {},\n      awaitRefetchQueries = false,\n      fetchPolicy\n    } = this.getOptions();\n    const mutateOptions = { ...mutationFunctionOptions };\n\n    const mutateVariables = Object.assign(\n      {},\n      variables,\n      mutateOptions.variables\n    );\n    delete mutateOptions.variables;\n\n    return this.refreshClient().client.mutate({\n      mutation,\n      optimisticResponse,\n      refetchQueries:\n        mutateOptions.refetchQueries || this.getOptions().refetchQueries,\n      awaitRefetchQueries,\n      update,\n      context: mutationContext,\n      fetchPolicy,\n      variables: mutateVariables,\n      ...mutateOptions\n    });\n  }\n\n  private onMutationStart() {\n    if (!this.result.loading && !this.getOptions().ignoreResults) {\n      this.updateResult({\n        loading: true,\n        error: undefined,\n        data: undefined,\n        called: true\n      });\n    }\n  }\n\n  private onMutationCompleted(\n    response: ExecutionResult<TData>,\n    mutationId: number\n  ) {\n    const { onCompleted, ignoreResults } = this.getOptions();\n\n    const { data, errors } = response;\n    const error =\n      errors && errors.length > 0\n        ? new ApolloError({ graphQLErrors: errors })\n        : undefined;\n\n    const callOncomplete = () =>\n      onCompleted ? onCompleted(data as TData) : null;\n\n    if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n      this.updateResult({\n        called: true,\n        loading: false,\n        data,\n        error\n      });\n    }\n    callOncomplete();\n  }\n\n  private onMutationError(error: ApolloError, mutationId: number) {\n    const { onError } = this.getOptions();\n\n    if (this.isMostRecentMutation(mutationId)) {\n      this.updateResult({\n        loading: false,\n        error,\n        data: undefined,\n        called: true\n      });\n    }\n\n    if (onError) {\n      onError(error);\n    }\n  }\n\n  private generateNewMutationId(): number {\n    return ++this.mostRecentMutationId;\n  }\n\n  private isMostRecentMutation(mutationId: number) {\n    return this.mostRecentMutationId === mutationId;\n  }\n\n  private updateResult(result: MutationResult<TData>) {\n    if (\n      this.isMounted &&\n      (!this.previousResult || !isEqual(this.previousResult, result))\n    ) {\n      this.setResult(result);\n      this.previousResult = result;\n    }\n  }\n}\n","import { useContext, useState, useRef, useEffect } from 'react';\nimport { getApolloContext, OperationVariables } from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { MutationHookOptions, MutationTuple } from './types';\nimport { MutationData } from './data/MutationData';\n\nexport function useMutation<TData = any, TVariables = OperationVariables>(\n  mutation: DocumentNode,\n  options?: MutationHookOptions<TData, TVariables>\n): MutationTuple<TData, TVariables> {\n  const context = useContext(getApolloContext());\n  const [result, setResult] = useState({ called: false, loading: false });\n  const updatedOptions = options ? { ...options, mutation } : { mutation };\n\n  const mutationDataRef = useRef<MutationData<TData, TVariables>>();\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData<TData, TVariables>({\n        options: updatedOptions,\n        context,\n        result,\n        setResult\n      });\n    }\n    return mutationDataRef.current;\n  }\n\n  const mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n\n  useEffect(() => mutationData.afterExecute());\n\n  return mutationData.execute(result);\n}\n","import { equal as isEqual } from '@wry/equality';\nimport { ApolloContextValue, SubscriptionResult } from '@apollo/react-common';\n\nimport { OperationData } from './OperationData';\nimport { SubscriptionCurrentObservable, SubscriptionOptions } from '../types';\n\nexport class SubscriptionData<\n  TData = any,\n  TVariables = any\n> extends OperationData<SubscriptionOptions<TData, TVariables>> {\n  private setResult: any;\n  private currentObservable: SubscriptionCurrentObservable = {};\n\n  constructor({\n    options,\n    context,\n    setResult\n  }: {\n    options: SubscriptionOptions<TData, TVariables>;\n    context: ApolloContextValue;\n    setResult: any;\n  }) {\n    super(options, context);\n    this.setResult = setResult;\n    this.initialize(options);\n  }\n\n  public execute(result: SubscriptionResult<TData>) {\n    if (this.getOptions().skip === true) {\n      this.cleanup();\n      return {\n        loading: false,\n        error: undefined,\n        data: undefined,\n        variables: this.getOptions().variables\n      };\n    }\n\n    let currentResult = result;\n    if (this.refreshClient().isNew) {\n      currentResult = this.getLoadingResult();\n    }\n\n    let { shouldResubscribe } = this.getOptions();\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(this.getOptions());\n    }\n\n    if (\n      shouldResubscribe !== false &&\n      this.previousOptions &&\n      Object.keys(this.previousOptions).length > 0 &&\n      (this.previousOptions.subscription !== this.getOptions().subscription ||\n        !isEqual(this.previousOptions.variables, this.getOptions().variables) ||\n        this.previousOptions.skip !== this.getOptions().skip)\n    ) {\n      this.cleanup();\n      currentResult = this.getLoadingResult();\n    }\n\n    this.initialize(this.getOptions());\n    this.startSubscription();\n\n    this.previousOptions = this.getOptions();\n    return { ...currentResult, variables: this.getOptions().variables };\n  }\n\n  public afterExecute() {\n    this.isMounted = true;\n  }\n\n  public cleanup() {\n    this.endSubscription();\n    delete this.currentObservable.query;\n  }\n\n  private initialize(options: SubscriptionOptions<TData, TVariables>) {\n    if (this.currentObservable.query || this.getOptions().skip === true) return;\n    this.currentObservable.query = this.refreshClient().client.subscribe({\n      query: options.subscription,\n      variables: options.variables,\n      fetchPolicy: options.fetchPolicy\n    });\n  }\n\n  private startSubscription() {\n    if (this.currentObservable.subscription) return;\n    this.currentObservable.subscription = this.currentObservable.query!.subscribe(\n      {\n        next: this.updateCurrentData.bind(this),\n        error: this.updateError.bind(this),\n        complete: this.completeSubscription.bind(this)\n      }\n    );\n  }\n\n  private getLoadingResult() {\n    return {\n      loading: true,\n      error: undefined,\n      data: undefined\n    };\n  }\n\n  private updateResult(result: SubscriptionResult) {\n    if (this.isMounted) {\n      this.setResult(result);\n    }\n  }\n\n  private updateCurrentData(result: SubscriptionResult<TData>) {\n    const { onSubscriptionData } = this.getOptions();\n\n    this.updateResult({\n      data: result.data,\n      loading: false,\n      error: undefined\n    });\n\n    if (onSubscriptionData) {\n      onSubscriptionData({\n        client: this.refreshClient().client,\n        subscriptionData: result\n      });\n    }\n  }\n\n  private updateError(error: any) {\n    this.updateResult({\n      error,\n      loading: false\n    });\n  }\n\n  private completeSubscription() {\n    const { onSubscriptionComplete } = this.getOptions();\n    if (onSubscriptionComplete) onSubscriptionComplete();\n    this.endSubscription();\n  }\n\n  private endSubscription() {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  }\n}\n","import { ObservableQuery } from 'apollo-client';\nimport { QueryOptions } from '../types';\nimport { DocumentNode } from 'graphql';\nimport { QueryData } from '../data/QueryData';\n\ntype QueryInfo = {\n  seen: boolean;\n  observable: ObservableQuery<any, any> | null;\n};\n\nfunction makeDefaultQueryInfo(): QueryInfo {\n  return {\n    seen: false,\n    observable: null\n  };\n}\n\nexport class RenderPromises {\n  // Map from Query component instances to pending fetchData promises.\n  private queryPromises = new Map<QueryOptions<any, any>, Promise<any>>();\n\n  // Two-layered map from (query document, stringified variables) to QueryInfo\n  // objects. These QueryInfo objects are intended to survive through the whole\n  // getMarkupFromTree process, whereas specific Query instances do not survive\n  // beyond a single call to renderToStaticMarkup.\n  private queryInfoTrie = new Map<DocumentNode, Map<string, QueryInfo>>();\n\n  // Registers the server side rendered observable.\n  public registerSSRObservable<TData, TVariables>(\n    observable: ObservableQuery<any, TVariables>,\n    props: QueryOptions<TData, TVariables>\n  ) {\n    this.lookupQueryInfo(props).observable = observable;\n  }\n\n  // Get's the cached observable that matches the SSR Query instances query and variables.\n  public getSSRObservable<TData, TVariables>(\n    props: QueryOptions<TData, TVariables>\n  ) {\n    return this.lookupQueryInfo(props).observable;\n  }\n\n  public addQueryPromise<TData, TVariables>(\n    queryInstance: QueryData<TData, TVariables>,\n    finish: () => React.ReactNode\n  ): React.ReactNode {\n    const info = this.lookupQueryInfo(queryInstance.getOptions());\n    if (!info.seen) {\n      this.queryPromises.set(\n        queryInstance.getOptions(),\n        new Promise(resolve => {\n          resolve(queryInstance.fetchData());\n        })\n      );\n      // Render null to abandon this subtree for this rendering, so that we\n      // can wait for the data to arrive.\n      return null;\n    }\n    return finish();\n  }\n\n  public hasPromises() {\n    return this.queryPromises.size > 0;\n  }\n\n  public consumeAndAwaitPromises() {\n    const promises: Promise<any>[] = [];\n    this.queryPromises.forEach((promise, queryInstance) => {\n      // Make sure we never try to call fetchData for this query document and\n      // these variables again. Since the queryInstance objects change with\n      // every rendering, deduplicating them by query and variables is the\n      // best we can do. If a different Query component happens to have the\n      // same query document and variables, it will be immediately rendered\n      // by calling finish() in addQueryPromise, which could result in the\n      // rendering of an unwanted loading state, but that's not nearly as bad\n      // as getting stuck in an infinite rendering loop because we kept calling\n      // queryInstance.fetchData for the same Query component indefinitely.\n      this.lookupQueryInfo(queryInstance).seen = true;\n      promises.push(promise);\n    });\n    this.queryPromises.clear();\n    return Promise.all(promises);\n  }\n\n  private lookupQueryInfo<TData, TVariables>(\n    props: QueryOptions<TData, TVariables>\n  ): QueryInfo {\n    const { queryInfoTrie } = this;\n    const { query, variables } = props;\n    const varMap = queryInfoTrie.get(query) || new Map<string, QueryInfo>();\n    if (!queryInfoTrie.has(query)) queryInfoTrie.set(query, varMap);\n    const variablesString = JSON.stringify(variables);\n    const info = varMap.get(variablesString) || makeDefaultQueryInfo();\n    if (!varMap.has(variablesString)) varMap.set(variablesString, info);\n    return info;\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","var parser = require('graphql/language/parser');\n\nvar parse = parser.parse;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\n// A map docString -> graphql document\nvar docCache = {};\n\n// A map fragmentName -> [normalized source]\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// For testing.\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nvar printFragmentWarnings = true;\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n\n      // We know something about this fragment\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  }\n\n  // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  }\n\n  // https://github.com/apollographql/graphql-tag/issues/40\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, { experimentalFragmentVariables: experimentalFragmentVariables });\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  }\n\n  // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nfunction gql(/* arguments */) {\n  var args = Array.prototype.slice.call(arguments);\n\n  var literals = args[0];\n\n  // We always get literals[0] and then matching post literals for each arg given\n  var result = (typeof(literals) === \"string\") ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n}\n\n// Support typescript, which isn't as nice as Babel about default exports\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\n\nmodule.exports = gql;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition);\n  /* istanbul ignore else (see transformation done in './resources/inlineInvariant.js') */\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\n\n/* istanbul ignore next (See: https://github.com/graphql/graphql-js/issues/2317) */\nexport var SYMBOL_ITERATOR = typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'; // In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\n\n/* istanbul ignore next (See: https://github.com/graphql/graphql-js/issues/2317) */\n\nexport var SYMBOL_ASYNC_ITERATOR = // $FlowFixMe Flow doesn't define `Symbol.asyncIterator` yet\ntypeof Symbol === 'function' ? Symbol.asyncIterator : '@@asyncIterator';\n/* istanbul ignore next (See: https://github.com/graphql/graphql-js/issues/2317) */\n\nexport var SYMBOL_TO_STRING_TAG = // $FlowFixMe Flow doesn't define `Symbol.toStringTag` yet\ntypeof Symbol === 'function' ? Symbol.toStringTag : '@@toStringTag';\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// FIXME:\n// flowlint uninitialized-instance-property:off\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport { getLocation } from \"../language/location.mjs\";\nimport { printLocation, printSourceLocation } from \"../language/printLocation.mjs\";\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport var GraphQLError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphQLError, _Error);\n\n  var _super = _createSuper(GraphQLError);\n\n  /**\n   * A message describing the Error for debugging purposes.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   *\n   * Note: should be treated as readonly, despite invariant usage.\n   */\n\n  /**\n   * An array of { line, column } locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {\n    var _locations2, _source2, _positions2, _extensions2;\n\n    var _this;\n\n    _classCallCheck(this, GraphQLError);\n\n    _this = _super.call(this, message); // Compute list of blame nodes.\n\n    var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n    var _source = source;\n\n    if (!_source && _nodes) {\n      var _nodes$0$loc;\n\n      _source = (_nodes$0$loc = _nodes[0].loc) === null || _nodes$0$loc === void 0 ? void 0 : _nodes$0$loc.source;\n    }\n\n    var _positions = positions;\n\n    if (!_positions && _nodes) {\n      _positions = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(node.loc.start);\n        }\n\n        return list;\n      }, []);\n    }\n\n    if (_positions && _positions.length === 0) {\n      _positions = undefined;\n    }\n\n    var _locations;\n\n    if (positions && source) {\n      _locations = positions.map(function (pos) {\n        return getLocation(source, pos);\n      });\n    } else if (_nodes) {\n      _locations = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(getLocation(node.loc.source, node.loc.start));\n        }\n\n        return list;\n      }, []);\n    }\n\n    var _extensions = extensions;\n\n    if (_extensions == null && originalError != null) {\n      var originalExtensions = originalError.extensions;\n\n      if (isObjectLike(originalExtensions)) {\n        _extensions = originalExtensions;\n      }\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      name: {\n        value: 'GraphQLError'\n      },\n      message: {\n        value: message,\n        // By being enumerable, JSON.stringify will include `message` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: true,\n        writable: true\n      },\n      locations: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_locations2 = _locations) !== null && _locations2 !== void 0 ? _locations2 : undefined,\n        // By being enumerable, JSON.stringify will include `locations` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _locations != null\n      },\n      path: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: path !== null && path !== void 0 ? path : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: path != null\n      },\n      nodes: {\n        value: _nodes !== null && _nodes !== void 0 ? _nodes : undefined\n      },\n      source: {\n        value: (_source2 = _source) !== null && _source2 !== void 0 ? _source2 : undefined\n      },\n      positions: {\n        value: (_positions2 = _positions) !== null && _positions2 !== void 0 ? _positions2 : undefined\n      },\n      originalError: {\n        value: originalError\n      },\n      extensions: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_extensions2 = _extensions) !== null && _extensions2 !== void 0 ? _extensions2 : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _extensions != null\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    if (originalError === null || originalError === void 0 ? void 0 : originalError.stack) {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n      return _possibleConstructorReturn(_this);\n    }\n    /* istanbul ignore next (See: https://github.com/graphql/graphql-js/issues/2317) */\n\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);\n    } else {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(GraphQLError, [{\n    key: \"toString\",\n    value: function toString() {\n      return printError(this);\n    } // FIXME: workaround to not break chai comparisons, should be remove in v16\n    // $FlowFixMe Flow doesn't support computed properties yet\n\n  }, {\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Object';\n    }\n  }]);\n\n  return GraphQLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","import { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\n\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\nexport var Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = body.charCodeAt(pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new Token(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new Token(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new Token(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new Token(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new Token(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n        return new Token(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new Token(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new Token(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new Token(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new Token(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new Token(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new Token(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new Token(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new Token(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = body.charCodeAt(position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n","import inspect from \"../jsutils/inspect.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Kind } from \"./kinds.mjs\";\nimport { Source } from \"./source.mjs\";\nimport { DirectiveLocation } from \"./directiveLocation.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"./lexer.mjs\";\nimport { Location } from \"./ast.mjs\";\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = typeof source === 'string' ? new Source(source) : source;\n    sourceObj instanceof Source || devAssert(0, \"Must provide Source. Received: \".concat(inspect(sourceObj), \".\"));\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var types = [];\n\n    if (this.expectOptionalKeyword('implements')) {\n      // Optional leading ampersand\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        var _this$_options2;\n\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || // Legacy support for the SDL?\n      ((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true && this.peek(TokenKind.NAME));\n    }\n\n    return types;\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    var types = [];\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      // Optional leading pipe\n      this.expectOptionalToken(TokenKind.PIPE);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.PIPE));\n    }\n\n    return types;\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    // Optional leading pipe\n    this.expectOptionalToken(TokenKind.PIPE);\n    var locations = [];\n\n    do {\n      locations.push(this.parseDirectiveLocation());\n    } while (this.expectOptionalToken(TokenKind.PIPE));\n\n    return locations;\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in\n   * the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing\n   * the lexer. Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token\n   * is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always\n   * return non-empty list that begins with a lex token of openKind and ends\n   * with a lex token of closeKind. Advances the parser to the next lex token\n   * after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging\n */\n\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n"],"sourceRoot":""}