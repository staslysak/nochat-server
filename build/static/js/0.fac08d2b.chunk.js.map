{"version":3,"sources":["../../src/data/OperationData.ts","../../src/data/QueryData.ts","../../src/utils/useBaseQuery.ts","../../src/utils/useDeepMemo.ts","../../src/useQuery.ts","../../src/useLazyQuery.ts","../../src/data/MutationData.ts","../../src/useMutation.ts","../../src/data/SubscriptionData.ts","../../src/ssr/RenderPromises.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/graphql-tag/src/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime.js","../node_modules/graphql/jsutils/devAssert.mjs","../node_modules/graphql/jsutils/isObjectLike.mjs","../node_modules/graphql/polyfills/symbols.mjs","../node_modules/graphql/language/location.mjs","../node_modules/graphql/language/printLocation.mjs","../node_modules/graphql/error/GraphQLError.mjs","../node_modules/graphql/error/syntaxError.mjs","../node_modules/graphql/language/source.mjs","../node_modules/graphql/language/directiveLocation.mjs","../node_modules/graphql/language/tokenKind.mjs","../node_modules/graphql/language/lexer.mjs","../node_modules/graphql/language/parser.mjs"],"names":["options","context","isMounted","previousOptions","this","getOptions","setOptions","newOptions","storePrevious","isEqual","unmount","refreshClient","client","isNew","cleanup","verifyDocumentType","document","type","operation","onNewData","previousData","currentObservable","runLazy","runLazyQuery","lazyOptions","getExecuteResult","result","getQueryResult","startQuerySubscription","obsRefetch","variables","query","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","skip","removeQuerySubscription","updateObservableQuery","getExecuteSsrResult","executeLazy","loading","networkStatus","ready","called","data","undefined","fetchData","ssr","obs","getCurrentResult","afterExecute","lazy","handleErrorOrCompleted","setTimeout","resetQueryStoreErrors","bind","ssrInitiated","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","addQueryPromise","prepareObservableQueryOptions","Query","displayName","fetchPolicy","metadata","reactComponent","initializeObservableQuery","getSSRObservable","observableQueryOptions","children","watchQuery","registerSSRObservable","newObservableQueryOptions","catch","subscription","obsQuery","subscribe","next","previousResult","error","resubscribeToQuery","hasOwnProperty","lastError","getLastError","lastResult","getLastResult","resetLastResults","Object","assign","observableQueryFields","currentResult","partial","errors","length","graphQLErrors","partialRefetch","onCompleted","onError","unsubscribe","OperationData","useBaseQuery","tick","forceUpdate","updatedOptions","isRendering","isRenderScheduled","queryDataRef","queryData","current","QueryData","memoFn","key","ref","value","useDeepMemo","queryResult","useQuery","useLazyQuery","setResult","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","then","response","onMutationCompleted","onMutationError","mutation","Mutation","mostRecentMutationId","optimisticResponse","update","awaitRefetchQueries","mutateOptions","mutateVariables","refetchQueries","mutationContext","ignoreResults","updateResult","isMostRecentMutation","useMutation","mutationDataRef","mutationData","MutationData","initialize","getLoadingResult","shouldResubscribe","keys","startSubscription","endSubscription","updateCurrentData","updateError","complete","completeSubscription","onSubscriptionData","subscriptionData","onSubscriptionComplete","queryPromises","Map","queryInfoTrie","observable","props","lookupQueryInfo","queryInstance","finish","seen","set","Promise","resolve","hasPromises","size","consumeAndAwaitPromises","promises","forEach","promise","push","clear","all","varMap","get","has","variablesString","JSON","stringify","info","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","done","err","unsupportedIterableToArray","TypeError","module","exports","asyncGeneratorStep","gen","reject","_next","_throw","arg","_asyncToGenerator","fn","self","args","arguments","apply","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","parse","require","normalize","string","replace","trim","docCache","fragmentSourceMap","printFragmentWarnings","experimentalFragmentVariables","parseDocument","doc","cacheKey","parsed","kind","Error","stripLoc","removeLocAtThisLevel","docType","prototype","toString","call","map","d","loc","startToken","endToken","valueType","ast","astFragmentMap","definitions","fragmentDefinition","fragmentName","name","sourceKey","source","body","substring","start","end","console","warn","processFragments","gql","literals","default","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","o","minLen","n","constructor","from","test","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","Context","_invoke","state","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","obj","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","caught","hasCatch","hasFinally","finallyEntry","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","devAssert","condition","message","Boolean","_typeof","SYMBOL_TO_STRING_TAG","getLocation","position","match","lineRegexp","line","column","exec","index","printLocation","location","printSourceLocation","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","concat","lines","split","locationLine","subLineIndex","Math","floor","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","filter","_ref","padLen","max","_ref2","_ref3","str","prefix","join","_defineProperties","target","descriptor","enumerable","configurable","writable","defineProperty","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","indexOf","Wrapper","_construct","_getPrototypeOf","_setPrototypeOf","Parent","_isNativeReflectConstruct","Reflect","construct","a","instance","sham","Proxy","Date","e","p","GraphQLError","_Error","subClass","superClass","_inherits","Derived","Constructor","protoProps","staticProps","_super","Super","NewTarget","nodes","positions","path","originalError","extensions","_locations2","_source2","_positions2","_extensions2","_this","_classCallCheck","_nodes$0$loc","_nodes","_source","_locations","_positions","reduce","list","node","pos","_extensions","originalExtensions","locations","stack","captureStackTrace","output","_i2","_error$nodes2","_i4","_error$locations2","printError","syntaxError","description","Source","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","FIELD","FRAGMENT_DEFINITION","FRAGMENT_SPREAD","INLINE_FRAGMENT","VARIABLE_DEFINITION","SCHEMA","SCALAR","OBJECT","FIELD_DEFINITION","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","TokenKind","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","NAME","INT","FLOAT","STRING","BLOCK_STRING","COMMENT","Lexer","startOfFileToken","Token","lastToken","token","lineStart","_proto","advance","lookahead","_token$next","readToken","printCharCode","code","String","fromCharCode","toUpperCase","lexer","bodyLength","startPosition","charCodeAt","positionAfterWhitespace","col","readComment","readName","firstCode","isFloat","readDigits","isNameStart","readNumber","chunkStart","rawValue","dedentBlockStringValue","readBlockString","charCode","b","c","char2hex","invalidSequence","readString","unexpectedCharacterMessage","Parser","parseValue","parser","expectToken","parseValueLiteral","parseType","parseTypeReference","sourceObj","inspect","_lexer","_options","parseName","Kind","DOCUMENT","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","OPERATION_DEFINITION","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","defaultValue","expectOptionalToken","VARIABLE","SELECTION_SET","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","item","parseConstArgument","parseArgument","ARGUMENT","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","_this$_options","expectKeyword","parseList","parseObject","parseStringLiteral","BOOLEAN","NULL","block","LIST","any","_this2","fields","parseObjectField","OBJECT_FIELD","parseDirective","DIRECTIVE","LIST_TYPE","NON_NULL_TYPE","NAMED_TYPE","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","interfaces","parseImplementsInterfaces","parseFieldsDefinition","OBJECT_TYPE_DEFINITION","types","_this$_options2","allowLegacySDLImplementsInterfaces","_this$_options3","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","parseUnionMemberTypes","UNION_TYPE_DEFINITION","parseEnumValuesDefinition","ENUM_TYPE_DEFINITION","parseEnumValueDefinition","ENUM_VALUE_DEFINITION","parseInputFieldsDefinition","INPUT_OBJECT_TYPE_DEFINITION","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","repeatable","parseDirectiveLocations","DIRECTIVE_DEFINITION","parseDirectiveLocation","_this$_options4","noLocation","Location","getTokenKindDesc","getTokenDesc","atToken","openKind","parseFn","closeKind","isPunctuatorTokenKind"],"mappings":"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","file":"static/js/0.fac08d2b.chunk.js","sourcesContent":["import { ApolloClient } from 'apollo-client';\nimport { equal as isEqual } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\nimport {\n  ApolloContextValue,\n  parser,\n  DocumentType,\n  operationName\n} from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { CommonOptions } from '../types';\n\nexport abstract class OperationData<TOptions = any> {\n  public isMounted: boolean = false;\n  public previousOptions: CommonOptions<TOptions> = {} as CommonOptions<\n    TOptions\n  >;\n  public context: ApolloContextValue = {};\n  public client: ApolloClient<object> | undefined;\n\n  private options: CommonOptions<TOptions> = {} as CommonOptions<TOptions>;\n\n  constructor(options?: CommonOptions<TOptions>, context?: ApolloContextValue) {\n    this.options = options || ({} as CommonOptions<TOptions>);\n    this.context = context || {};\n  }\n\n  public getOptions(): CommonOptions<TOptions> {\n    return this.options;\n  }\n\n  public setOptions(\n    newOptions: CommonOptions<TOptions>,\n    storePrevious: boolean = false\n  ) {\n    if (storePrevious && !isEqual(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n    this.options = newOptions;\n  }\n\n  public abstract execute(...args: any): any;\n  public abstract afterExecute(...args: any): void | (() => void);\n  public abstract cleanup(): void;\n\n  protected unmount() {\n    this.isMounted = false;\n  }\n\n  protected refreshClient() {\n    const client =\n      (this.options && this.options.client) ||\n      (this.context && this.context.client);\n\n    invariant(\n      !!client,\n      'Could not find \"client\" in the context or passed in as an option. ' +\n        'Wrap the root component in an <ApolloProvider>, or pass an ' +\n        'ApolloClient instance in via options.'\n    );\n\n    let isNew = false;\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n    return {\n      client: this.client as ApolloClient<object>,\n      isNew\n    };\n  }\n\n  protected verifyDocumentType(document: DocumentNode, type: DocumentType) {\n    const operation = parser(document);\n    const requiredOperationName = operationName(type);\n    const usedOperationName = operationName(operation.type);\n    invariant(\n      operation.type === type,\n      `Running a ${requiredOperationName} requires a graphql ` +\n        `${requiredOperationName}, but a ${usedOperationName} was used instead.`\n    );\n  }\n}\n","import {\n  ApolloQueryResult,\n  ApolloError,\n  NetworkStatus,\n  FetchMoreOptions,\n  FetchMoreQueryOptions,\n  UpdateQueryOptions,\n  SubscribeToMoreOptions\n} from 'apollo-client';\nimport { equal as isEqual } from '@wry/equality';\nimport {\n  ApolloContextValue,\n  DocumentType,\n  QueryResult,\n  ObservableQueryFields\n} from '@apollo/react-common';\n\nimport {\n  QueryPreviousData,\n  QueryOptions,\n  QueryCurrentObservable,\n  QueryTuple,\n  QueryLazyOptions\n} from '../types';\nimport { OperationData } from './OperationData';\n\nexport class QueryData<TData, TVariables> extends OperationData {\n  public onNewData: () => void;\n\n  private previousData: QueryPreviousData<TData, TVariables> = {};\n  private currentObservable: QueryCurrentObservable<TData, TVariables> = {};\n  private runLazy: boolean = false;\n  private lazyOptions?: QueryLazyOptions<TVariables>;\n\n  constructor({\n    options,\n    context,\n    onNewData\n  }: {\n    options: QueryOptions<TData, TVariables>;\n    context: ApolloContextValue;\n    onNewData: () => void;\n  }) {\n    super(options, context);\n    this.onNewData = onNewData;\n  }\n\n  public execute(): QueryResult<TData, TVariables> {\n    this.refreshClient();\n\n    const { skip, query } = this.getOptions();\n    if (skip || query !== this.previousData.query) {\n      this.removeQuerySubscription();\n      this.previousData.query = query;\n    }\n\n    this.updateObservableQuery();\n\n    if (this.isMounted) this.startQuerySubscription();\n\n    return this.getExecuteSsrResult() || this.getExecuteResult();\n  }\n\n  public executeLazy(): QueryTuple<TData, TVariables> {\n    return !this.runLazy\n      ? [\n          this.runLazyQuery,\n          {\n            loading: false,\n            networkStatus: NetworkStatus.ready,\n            called: false,\n            data: undefined\n          } as QueryResult<TData, TVariables>\n        ]\n      : [this.runLazyQuery, this.execute()];\n  }\n\n  // For server-side rendering\n  public fetchData(): Promise<ApolloQueryResult<any>> | boolean {\n    const options = this.getOptions();\n    if (options.skip || options.ssr === false) return false;\n\n    // currentObservable.query is already assigned the registered SSR observable in initializeObservableQuery.\n    const obs = this.currentObservable.query!;\n    const currentResult = obs.getCurrentResult();\n    return currentResult.loading ? obs.result() : false;\n  }\n\n  public afterExecute({ lazy = false }: { lazy?: boolean } = {}) {\n    this.isMounted = true;\n\n    if (!lazy || this.runLazy) {\n      this.handleErrorOrCompleted();\n\n      // When the component is done rendering stored query errors, we'll\n      // remove those errors from the `ObservableQuery` query store, so they\n      // aren't re-displayed on subsequent (potentially error free)\n      // requests/responses.\n      setTimeout(() => {\n        this.currentObservable.query &&\n          this.currentObservable.query.resetQueryStoreErrors();\n      });\n    }\n\n    this.previousOptions = this.getOptions();\n    return this.unmount.bind(this);\n  }\n\n  public cleanup() {\n    this.removeQuerySubscription();\n    delete this.currentObservable.query;\n    delete this.previousData.result;\n  }\n\n  public getOptions() {\n    const options = super.getOptions();\n\n    if (this.lazyOptions) {\n      options.variables = {\n        ...options.variables,\n        ...this.lazyOptions.variables\n      };\n      options.context = {\n        ...options.context,\n        ...this.lazyOptions.context\n      };\n    }\n\n    // skip is not supported when using lazy query execution.\n    if (this.runLazy) {\n      delete options.skip;\n    }\n\n    return options;\n  }\n\n  public ssrInitiated() {\n    return this.context && this.context.renderPromises;\n  }\n\n  private runLazyQuery = (options?: QueryLazyOptions<TVariables>) => {\n    this.cleanup();\n    this.runLazy = true;\n    this.lazyOptions = options;\n    this.onNewData();\n  };\n\n  private getExecuteResult = (): QueryResult<TData, TVariables> => {\n    const result = this.getQueryResult();\n    this.startQuerySubscription();\n    return result;\n  };\n\n  private getExecuteSsrResult() {\n    const ssrDisabled = this.getOptions().ssr === false;\n    const fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n\n    const ssrLoading = {\n      loading: true,\n      networkStatus: NetworkStatus.loading,\n      called: true,\n      data: undefined\n    } as QueryResult<TData, TVariables>;\n\n    // If SSR has been explicitly disabled, and this function has been called\n    // on the server side, return the default loading state.\n    if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n      return ssrLoading;\n    }\n\n    let result;\n    if (this.ssrInitiated()) {\n      result =\n        this.context.renderPromises!.addQueryPromise(\n          this,\n          this.getExecuteResult\n        ) || ssrLoading;\n    }\n\n    return result;\n  }\n\n  private prepareObservableQueryOptions() {\n    const options = this.getOptions();\n    this.verifyDocumentType(options.query, DocumentType.Query);\n    const displayName = options.displayName || 'Query';\n\n    // Set the fetchPolicy to cache-first for network-only and cache-and-network\n    // fetches for server side renders.\n    if (\n      this.ssrInitiated() &&\n      (options.fetchPolicy === 'network-only' ||\n        options.fetchPolicy === 'cache-and-network')\n    ) {\n      options.fetchPolicy = 'cache-first';\n    }\n\n    return {\n      ...options,\n      displayName,\n      context: options.context,\n      metadata: { reactComponent: { displayName } }\n    };\n  }\n\n  private initializeObservableQuery() {\n    // See if there is an existing observable that was used to fetch the same\n    // data and if so, use it instead since it will contain the proper queryId\n    // to fetch the result set. This is used during SSR.\n    if (this.ssrInitiated()) {\n      this.currentObservable.query = this.context!.renderPromises!.getSSRObservable(\n        this.getOptions()\n      );\n    }\n\n    if (!this.currentObservable.query) {\n      const observableQueryOptions = this.prepareObservableQueryOptions();\n\n      this.previousData.observableQueryOptions = {\n        ...observableQueryOptions,\n        children: null\n      };\n      this.currentObservable.query = this.refreshClient().client.watchQuery({\n        ...observableQueryOptions\n      });\n\n      if (this.ssrInitiated()) {\n        this.context?.renderPromises?.registerSSRObservable(\n          this.currentObservable.query,\n          observableQueryOptions\n        );\n      }\n    }\n  }\n\n  private updateObservableQuery() {\n    // If we skipped initially, we may not have yet created the observable\n    if (!this.currentObservable.query) {\n      this.initializeObservableQuery();\n      return;\n    }\n\n    const newObservableQueryOptions = {\n      ...this.prepareObservableQueryOptions(),\n      children: null\n    };\n\n    if (\n      !isEqual(\n        newObservableQueryOptions,\n        this.previousData.observableQueryOptions\n      )\n    ) {\n      this.previousData.observableQueryOptions = newObservableQueryOptions;\n      this.currentObservable\n        .query!.setOptions(newObservableQueryOptions)\n        // The error will be passed to the child container, so we don't\n        // need to log it here. We could conceivably log something if\n        // an option was set. OTOH we don't log errors w/ the original\n        // query. See https://github.com/apollostack/react-apollo/issues/404\n        .catch(() => {});\n    }\n  }\n\n  private startQuerySubscription() {\n    if (this.currentObservable.subscription || this.getOptions().skip) return;\n\n    const obsQuery = this.currentObservable.query!;\n    this.currentObservable.subscription = obsQuery.subscribe({\n      next: ({ loading, networkStatus, data }) => {\n        const previousResult = this.previousData.result;\n\n        // Make sure we're not attempting to re-render similar results\n        if (\n          previousResult &&\n          previousResult.loading === loading &&\n          previousResult.networkStatus === networkStatus &&\n          isEqual(previousResult.data, data)\n        ) {\n          return;\n        }\n\n        this.onNewData();\n      },\n      error: error => {\n        this.resubscribeToQuery();\n        if (!error.hasOwnProperty('graphQLErrors')) throw error;\n\n        const previousResult = this.previousData.result;\n        if (\n          (previousResult && previousResult.loading) ||\n          !isEqual(error, this.previousData.error)\n        ) {\n          this.previousData.error = error;\n          this.onNewData();\n        }\n      }\n    });\n  }\n\n  private resubscribeToQuery() {\n    this.removeQuerySubscription();\n\n    // Unfortunately, if `lastError` is set in the current\n    // `observableQuery` when the subscription is re-created,\n    // the subscription will immediately receive the error, which will\n    // cause it to terminate again. To avoid this, we first clear\n    // the last error/result from the `observableQuery` before re-starting\n    // the subscription, and restore it afterwards (so the subscription\n    // has a chance to stay open).\n    const lastError = this.currentObservable.query!.getLastError();\n    const lastResult = this.currentObservable.query!.getLastResult();\n    this.currentObservable.query!.resetLastResults();\n    this.startQuerySubscription();\n    Object.assign(this.currentObservable.query!, {\n      lastError,\n      lastResult\n    });\n  }\n\n  private getQueryResult(): QueryResult<TData, TVariables> {\n    let result: any = this.observableQueryFields();\n    const options = this.getOptions();\n\n    // When skipping a query (ie. we're not querying for data but still want\n    // to render children), make sure the `data` is cleared out and\n    // `loading` is set to `false` (since we aren't loading anything).\n    if (options.skip) {\n      result = {\n        ...result,\n        data: undefined,\n        error: undefined,\n        loading: false,\n        called: true\n      };\n    } else {\n      // Fetch the current result (if any) from the store.\n      const currentResult = this.currentObservable.query!.getCurrentResult();\n      const { loading, partial, networkStatus, errors } = currentResult;\n      let { error, data } = currentResult;\n\n      // Until a set naming convention for networkError and graphQLErrors is\n      // decided upon, we map errors (graphQLErrors) to the error options.\n      if (errors && errors.length > 0) {\n        error = new ApolloError({ graphQLErrors: errors });\n      }\n\n      result = {\n        ...result,\n        loading,\n        networkStatus,\n        error,\n        called: true\n      };\n\n      if (loading) {\n        const previousData =\n          this.previousData.result && this.previousData.result.data;\n        result.data =\n          previousData && data\n            ? {\n                ...previousData,\n                ...data\n              }\n            : previousData || data;\n      } else if (error) {\n        Object.assign(result, {\n          data: (this.currentObservable.query!.getLastResult() || ({} as any))\n            .data\n        });\n      } else {\n        const { fetchPolicy } = this.currentObservable.query!.options;\n        const { partialRefetch } = options;\n        if (\n          partialRefetch &&\n          !data &&\n          partial &&\n          fetchPolicy !== 'cache-only'\n        ) {\n          // When a `Query` component is mounted, and a mutation is executed\n          // that returns the same ID as the mounted `Query`, but has less\n          // fields in its result, Apollo Client's `QueryManager` returns the\n          // data as `undefined` since a hit can't be found in the cache.\n          // This can lead to application errors when the UI elements rendered by\n          // the original `Query` component are expecting certain data values to\n          // exist, and they're all of a sudden stripped away. To help avoid\n          // this we'll attempt to refetch the `Query` data.\n          Object.assign(result, {\n            loading: true,\n            networkStatus: NetworkStatus.loading\n          });\n          result.refetch();\n          return result;\n        }\n\n        result.data = data;\n      }\n    }\n\n    result.client = this.client;\n    this.previousData.loading =\n      (this.previousData.result && this.previousData.result.loading) || false;\n    this.previousData.result = result;\n    return result;\n  }\n\n  private handleErrorOrCompleted() {\n    const obsQuery = this.currentObservable.query;\n    if (!obsQuery) return;\n\n    const { data, loading, error } = obsQuery.getCurrentResult();\n\n    if (!loading) {\n      const { query, variables, onCompleted, onError } = this.getOptions();\n\n      // No changes, so we won't call onError/onCompleted.\n      if (\n        this.previousOptions &&\n        !this.previousData.loading &&\n        isEqual(this.previousOptions.query, query) &&\n        isEqual(this.previousOptions.variables, variables)\n      ) {\n        return;\n      }\n\n      if (onCompleted && !error) {\n        onCompleted(data);\n      } else if (onError && error) {\n        onError(error);\n      }\n    }\n  }\n\n  private removeQuerySubscription() {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  }\n\n  private obsRefetch = (variables?: TVariables) =>\n    this.currentObservable.query!.refetch(variables);\n\n  private obsFetchMore = <K extends keyof TVariables>(\n    fetchMoreOptions: FetchMoreQueryOptions<TVariables, K> &\n      FetchMoreOptions<TData, TVariables>\n  ) => this.currentObservable.query!.fetchMore(fetchMoreOptions);\n\n  private obsUpdateQuery = <TVars = TVariables>(\n    mapFn: (\n      previousQueryResult: TData,\n      options: UpdateQueryOptions<TVars>\n    ) => TData\n  ) => this.currentObservable.query!.updateQuery(mapFn);\n\n  private obsStartPolling = (pollInterval: number) => {\n    this.currentObservable &&\n      this.currentObservable.query! &&\n      this.currentObservable.query!.startPolling(pollInterval);\n  };\n\n  private obsStopPolling = () => {\n    this.currentObservable &&\n      this.currentObservable.query! &&\n      this.currentObservable.query!.stopPolling();\n  };\n\n  private obsSubscribeToMore = <\n    TSubscriptionData = TData,\n    TSubscriptionVariables = TVariables\n  >(\n    options: SubscribeToMoreOptions<\n      TData,\n      TSubscriptionVariables,\n      TSubscriptionData\n    >\n  ) => this.currentObservable.query!.subscribeToMore(options);\n\n  private observableQueryFields() {\n    const observable = this.currentObservable.query!;\n    return {\n      variables: observable.variables,\n      refetch: this.obsRefetch,\n      fetchMore: this.obsFetchMore,\n      updateQuery: this.obsUpdateQuery,\n      startPolling: this.obsStartPolling,\n      stopPolling: this.obsStopPolling,\n      subscribeToMore: this.obsSubscribeToMore\n    } as ObservableQueryFields<TData, TVariables>;\n  }\n}\n","import { useContext, useEffect, useReducer, useRef } from 'react';\nimport {\n  getApolloContext,\n  OperationVariables,\n  QueryResult\n} from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { QueryHookOptions, QueryOptions, QueryTuple } from '../types';\nimport { QueryData } from '../data/QueryData';\nimport { useDeepMemo } from './useDeepMemo';\n\nexport function useBaseQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode,\n  options?: QueryHookOptions<TData, TVariables>,\n  lazy = false\n) {\n  const context = useContext(getApolloContext());\n  const [tick, forceUpdate] = useReducer(x => x + 1, 0);\n  const updatedOptions = options ? { ...options, query } : { query };\n  const isRendering = useRef(true);\n  const isRenderScheduled = useRef(false);\n\n  const queryDataRef = useRef<QueryData<TData, TVariables>>();\n  const queryData =\n    queryDataRef.current ||\n    new QueryData<TData, TVariables>({\n      options: updatedOptions as QueryOptions<TData, TVariables>,\n      context,\n      onNewData() {\n        // When new data is received from the `QueryData` object, we want to\n        // force a re-render to make sure the new data is displayed. We can't\n        // force that re-render if we're already rendering however, so in that\n        // case we'll defer triggering a re-render until we're inside an effect\n        // hook.\n        if (!queryData.ssrInitiated() && isRendering.current) {\n          isRenderScheduled.current = true;\n        } else {\n          forceUpdate();\n        }\n      }\n    });\n\n  queryData.setOptions(updatedOptions);\n  queryData.context = context;\n\n  // SSR won't trigger the effect hook below that stores the current\n  // `QueryData` instance for future renders, so we'll handle that here if\n  // the current render is happening server side.\n  if (queryData.ssrInitiated() && !queryDataRef.current) {\n    queryDataRef.current = queryData;\n  }\n\n  // `onError` and `onCompleted` callback functions will not always have a\n  // stable identity, so we'll exclude them from the memoization key to\n  // prevent `afterExecute` from being triggered un-necessarily.\n  const memo = {\n    options: { ...updatedOptions, onError: undefined, onCompleted: undefined },\n    context,\n    tick\n  };\n\n  const result = useDeepMemo(\n    () => (lazy ? queryData.executeLazy() : queryData.execute()),\n    memo\n  );\n\n  const queryResult = lazy\n    ? (result as QueryTuple<TData, TVariables>)[1]\n    : (result as QueryResult<TData, TVariables>);\n\n  useEffect(() => {\n    // We only need one instance of the `QueryData` class, so we'll store it\n    // as a ref to make it available on subsequent renders.\n    if (!queryDataRef.current) {\n      queryDataRef.current = queryData;\n    }\n\n    // If `QueryData` requested a re-render to show new data while we were\n    // in a render phase, let's handle the re-render here where it's safe to do\n    // so.\n    isRendering.current = false;\n    if (isRenderScheduled.current) {\n      isRenderScheduled.current = false;\n      forceUpdate();\n    }\n  });\n\n  useEffect(() => queryData.afterExecute({ lazy }), [\n    queryResult.loading,\n    queryResult.networkStatus,\n    queryResult.error,\n    queryResult.data\n  ]);\n\n  useEffect(() => {\n    return () => queryData.cleanup();\n  }, []);\n\n  return result;\n}\n","import { useRef } from 'react';\nimport { equal as isEqual } from '@wry/equality';\n\n/**\n * Memoize a result using deep equality. This hook has two advantages over\n * React.useMemo: it uses deep equality to compare memo keys, and it guarantees\n * that the memo function will only be called if the keys are unequal.\n * React.useMemo cannot be relied on to do this, since it is only a performance\n * optimization (see https://reactjs.org/docs/hooks-reference.html#usememo).\n */\nexport function useDeepMemo<TKey, TValue>(\n  memoFn: () => TValue,\n  key: TKey\n): TValue {\n  const ref = useRef<{ key: TKey; value: TValue }>();\n\n  if (!ref.current || !isEqual(key, ref.current.key)) {\n    ref.current = { key, value: memoFn() };\n  }\n\n  return ref.current.value;\n}\n","import { OperationVariables, QueryResult } from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { QueryHookOptions } from './types';\nimport { useBaseQuery } from './utils/useBaseQuery';\n\nexport function useQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode,\n  options?: QueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, false) as QueryResult<\n    TData,\n    TVariables\n  >;\n}\n","import { OperationVariables } from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { LazyQueryHookOptions, QueryTuple } from './types';\nimport { useBaseQuery } from './utils/useBaseQuery';\n\nexport function useLazyQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode,\n  options?: LazyQueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, true) as QueryTuple<\n    TData,\n    TVariables\n  >;\n}\n","import { ApolloError } from 'apollo-client';\nimport { equal as isEqual } from '@wry/equality';\nimport {\n  ApolloContextValue,\n  DocumentType,\n  OperationVariables,\n  ExecutionResult,\n  MutationFunctionOptions,\n  MutationResult\n} from '@apollo/react-common';\n\nimport { MutationOptions, MutationTuple } from '../types';\nimport { OperationData } from './OperationData';\n\nexport class MutationData<\n  TData = any,\n  TVariables = OperationVariables\n> extends OperationData {\n  private mostRecentMutationId: number;\n  private result: MutationResult<TData>;\n  private previousResult?: MutationResult<TData>;\n  private setResult: (result: MutationResult<TData>) => any;\n\n  constructor({\n    options,\n    context,\n    result,\n    setResult\n  }: {\n    options: MutationOptions<TData, TVariables>;\n    context: ApolloContextValue;\n    result: MutationResult<TData>;\n    setResult: (result: MutationResult<TData>) => any;\n  }) {\n    super(options, context);\n    this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n    this.result = result;\n    this.setResult = setResult;\n    this.mostRecentMutationId = 0;\n  }\n\n  public execute(result: MutationResult<TData>) {\n    this.isMounted = true;\n    this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n    result.client = this.refreshClient().client;\n    return [this.runMutation, result] as MutationTuple<TData, TVariables>;\n  }\n\n  public afterExecute() {\n    this.isMounted = true;\n    return this.unmount.bind(this);\n  }\n\n  public cleanup() {\n    // No cleanup required.\n  }\n\n  private runMutation = (\n    mutationFunctionOptions: MutationFunctionOptions<\n      TData,\n      TVariables\n    > = {} as MutationFunctionOptions<TData, TVariables>\n  ) => {\n    this.onMutationStart();\n    const mutationId = this.generateNewMutationId();\n\n    return this.mutate(mutationFunctionOptions)\n      .then((response: ExecutionResult<TData>) => {\n        this.onMutationCompleted(response, mutationId);\n        return response;\n      })\n      .catch((error: ApolloError) => {\n        this.onMutationError(error, mutationId);\n        if (!this.getOptions().onError) throw error;\n      });\n  };\n\n  private mutate(\n    mutationFunctionOptions: MutationFunctionOptions<TData, TVariables>\n  ) {\n    const {\n      mutation,\n      variables,\n      optimisticResponse,\n      update,\n      context: mutationContext = {},\n      awaitRefetchQueries = false,\n      fetchPolicy\n    } = this.getOptions();\n    const mutateOptions = { ...mutationFunctionOptions };\n\n    const mutateVariables = Object.assign(\n      {},\n      variables,\n      mutateOptions.variables\n    );\n    delete mutateOptions.variables;\n\n    return this.refreshClient().client.mutate({\n      mutation,\n      optimisticResponse,\n      refetchQueries:\n        mutateOptions.refetchQueries || this.getOptions().refetchQueries,\n      awaitRefetchQueries,\n      update,\n      context: mutationContext,\n      fetchPolicy,\n      variables: mutateVariables,\n      ...mutateOptions\n    });\n  }\n\n  private onMutationStart() {\n    if (!this.result.loading && !this.getOptions().ignoreResults) {\n      this.updateResult({\n        loading: true,\n        error: undefined,\n        data: undefined,\n        called: true\n      });\n    }\n  }\n\n  private onMutationCompleted(\n    response: ExecutionResult<TData>,\n    mutationId: number\n  ) {\n    const { onCompleted, ignoreResults } = this.getOptions();\n\n    const { data, errors } = response;\n    const error =\n      errors && errors.length > 0\n        ? new ApolloError({ graphQLErrors: errors })\n        : undefined;\n\n    const callOncomplete = () =>\n      onCompleted ? onCompleted(data as TData) : null;\n\n    if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n      this.updateResult({\n        called: true,\n        loading: false,\n        data,\n        error\n      });\n    }\n    callOncomplete();\n  }\n\n  private onMutationError(error: ApolloError, mutationId: number) {\n    const { onError } = this.getOptions();\n\n    if (this.isMostRecentMutation(mutationId)) {\n      this.updateResult({\n        loading: false,\n        error,\n        data: undefined,\n        called: true\n      });\n    }\n\n    if (onError) {\n      onError(error);\n    }\n  }\n\n  private generateNewMutationId(): number {\n    return ++this.mostRecentMutationId;\n  }\n\n  private isMostRecentMutation(mutationId: number) {\n    return this.mostRecentMutationId === mutationId;\n  }\n\n  private updateResult(result: MutationResult<TData>) {\n    if (\n      this.isMounted &&\n      (!this.previousResult || !isEqual(this.previousResult, result))\n    ) {\n      this.setResult(result);\n      this.previousResult = result;\n    }\n  }\n}\n","import { useContext, useState, useRef, useEffect } from 'react';\nimport { getApolloContext, OperationVariables } from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { MutationHookOptions, MutationTuple } from './types';\nimport { MutationData } from './data/MutationData';\n\nexport function useMutation<TData = any, TVariables = OperationVariables>(\n  mutation: DocumentNode,\n  options?: MutationHookOptions<TData, TVariables>\n): MutationTuple<TData, TVariables> {\n  const context = useContext(getApolloContext());\n  const [result, setResult] = useState({ called: false, loading: false });\n  const updatedOptions = options ? { ...options, mutation } : { mutation };\n\n  const mutationDataRef = useRef<MutationData<TData, TVariables>>();\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData<TData, TVariables>({\n        options: updatedOptions,\n        context,\n        result,\n        setResult\n      });\n    }\n    return mutationDataRef.current;\n  }\n\n  const mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n\n  useEffect(() => mutationData.afterExecute());\n\n  return mutationData.execute(result);\n}\n","import { equal as isEqual } from '@wry/equality';\nimport { ApolloContextValue, SubscriptionResult } from '@apollo/react-common';\n\nimport { OperationData } from './OperationData';\nimport { SubscriptionCurrentObservable, SubscriptionOptions } from '../types';\n\nexport class SubscriptionData<\n  TData = any,\n  TVariables = any\n> extends OperationData<SubscriptionOptions<TData, TVariables>> {\n  private setResult: any;\n  private currentObservable: SubscriptionCurrentObservable = {};\n\n  constructor({\n    options,\n    context,\n    setResult\n  }: {\n    options: SubscriptionOptions<TData, TVariables>;\n    context: ApolloContextValue;\n    setResult: any;\n  }) {\n    super(options, context);\n    this.setResult = setResult;\n    this.initialize(options);\n  }\n\n  public execute(result: SubscriptionResult<TData>) {\n    if (this.getOptions().skip === true) {\n      this.cleanup();\n      return {\n        loading: false,\n        error: undefined,\n        data: undefined,\n        variables: this.getOptions().variables\n      };\n    }\n\n    let currentResult = result;\n    if (this.refreshClient().isNew) {\n      currentResult = this.getLoadingResult();\n    }\n\n    let { shouldResubscribe } = this.getOptions();\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(this.getOptions());\n    }\n\n    if (\n      shouldResubscribe !== false &&\n      this.previousOptions &&\n      Object.keys(this.previousOptions).length > 0 &&\n      (this.previousOptions.subscription !== this.getOptions().subscription ||\n        !isEqual(this.previousOptions.variables, this.getOptions().variables) ||\n        this.previousOptions.skip !== this.getOptions().skip)\n    ) {\n      this.cleanup();\n      currentResult = this.getLoadingResult();\n    }\n\n    this.initialize(this.getOptions());\n    this.startSubscription();\n\n    this.previousOptions = this.getOptions();\n    return { ...currentResult, variables: this.getOptions().variables };\n  }\n\n  public afterExecute() {\n    this.isMounted = true;\n  }\n\n  public cleanup() {\n    this.endSubscription();\n    delete this.currentObservable.query;\n  }\n\n  private initialize(options: SubscriptionOptions<TData, TVariables>) {\n    if (this.currentObservable.query || this.getOptions().skip === true) return;\n    this.currentObservable.query = this.refreshClient().client.subscribe({\n      query: options.subscription,\n      variables: options.variables,\n      fetchPolicy: options.fetchPolicy\n    });\n  }\n\n  private startSubscription() {\n    if (this.currentObservable.subscription) return;\n    this.currentObservable.subscription = this.currentObservable.query!.subscribe(\n      {\n        next: this.updateCurrentData.bind(this),\n        error: this.updateError.bind(this),\n        complete: this.completeSubscription.bind(this)\n      }\n    );\n  }\n\n  private getLoadingResult() {\n    return {\n      loading: true,\n      error: undefined,\n      data: undefined\n    };\n  }\n\n  private updateResult(result: SubscriptionResult) {\n    if (this.isMounted) {\n      this.setResult(result);\n    }\n  }\n\n  private updateCurrentData(result: SubscriptionResult<TData>) {\n    const { onSubscriptionData } = this.getOptions();\n\n    this.updateResult({\n      data: result.data,\n      loading: false,\n      error: undefined\n    });\n\n    if (onSubscriptionData) {\n      onSubscriptionData({\n        client: this.refreshClient().client,\n        subscriptionData: result\n      });\n    }\n  }\n\n  private updateError(error: any) {\n    this.updateResult({\n      error,\n      loading: false\n    });\n  }\n\n  private completeSubscription() {\n    const { onSubscriptionComplete } = this.getOptions();\n    if (onSubscriptionComplete) onSubscriptionComplete();\n    this.endSubscription();\n  }\n\n  private endSubscription() {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  }\n}\n","import { ObservableQuery } from 'apollo-client';\nimport { QueryOptions } from '../types';\nimport { DocumentNode } from 'graphql';\nimport { QueryData } from '../data/QueryData';\n\ntype QueryInfo = {\n  seen: boolean;\n  observable: ObservableQuery<any, any> | null;\n};\n\nfunction makeDefaultQueryInfo(): QueryInfo {\n  return {\n    seen: false,\n    observable: null\n  };\n}\n\nexport class RenderPromises {\n  // Map from Query component instances to pending fetchData promises.\n  private queryPromises = new Map<QueryOptions<any, any>, Promise<any>>();\n\n  // Two-layered map from (query document, stringified variables) to QueryInfo\n  // objects. These QueryInfo objects are intended to survive through the whole\n  // getMarkupFromTree process, whereas specific Query instances do not survive\n  // beyond a single call to renderToStaticMarkup.\n  private queryInfoTrie = new Map<DocumentNode, Map<string, QueryInfo>>();\n\n  // Registers the server side rendered observable.\n  public registerSSRObservable<TData, TVariables>(\n    observable: ObservableQuery<any, TVariables>,\n    props: QueryOptions<TData, TVariables>\n  ) {\n    this.lookupQueryInfo(props).observable = observable;\n  }\n\n  // Get's the cached observable that matches the SSR Query instances query and variables.\n  public getSSRObservable<TData, TVariables>(\n    props: QueryOptions<TData, TVariables>\n  ) {\n    return this.lookupQueryInfo(props).observable;\n  }\n\n  public addQueryPromise<TData, TVariables>(\n    queryInstance: QueryData<TData, TVariables>,\n    finish: () => React.ReactNode\n  ): React.ReactNode {\n    const info = this.lookupQueryInfo(queryInstance.getOptions());\n    if (!info.seen) {\n      this.queryPromises.set(\n        queryInstance.getOptions(),\n        new Promise(resolve => {\n          resolve(queryInstance.fetchData());\n        })\n      );\n      // Render null to abandon this subtree for this rendering, so that we\n      // can wait for the data to arrive.\n      return null;\n    }\n    return finish();\n  }\n\n  public hasPromises() {\n    return this.queryPromises.size > 0;\n  }\n\n  public consumeAndAwaitPromises() {\n    const promises: Promise<any>[] = [];\n    this.queryPromises.forEach((promise, queryInstance) => {\n      // Make sure we never try to call fetchData for this query document and\n      // these variables again. Since the queryInstance objects change with\n      // every rendering, deduplicating them by query and variables is the\n      // best we can do. If a different Query component happens to have the\n      // same query document and variables, it will be immediately rendered\n      // by calling finish() in addQueryPromise, which could result in the\n      // rendering of an unwanted loading state, but that's not nearly as bad\n      // as getting stuck in an infinite rendering loop because we kept calling\n      // queryInstance.fetchData for the same Query component indefinitely.\n      this.lookupQueryInfo(queryInstance).seen = true;\n      promises.push(promise);\n    });\n    this.queryPromises.clear();\n    return Promise.all(promises);\n  }\n\n  private lookupQueryInfo<TData, TVariables>(\n    props: QueryOptions<TData, TVariables>\n  ): QueryInfo {\n    const { queryInfoTrie } = this;\n    const { query, variables } = props;\n    const varMap = queryInfoTrie.get(query) || new Map<string, QueryInfo>();\n    if (!queryInfoTrie.has(query)) queryInfoTrie.set(query, varMap);\n    const variablesString = JSON.stringify(variables);\n    const info = varMap.get(variablesString) || makeDefaultQueryInfo();\n    if (!varMap.has(variablesString)) varMap.set(variablesString, info);\n    return info;\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","var parser = require('graphql/language/parser');\n\nvar parse = parser.parse;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\n// A map docString -> graphql document\nvar docCache = {};\n\n// A map fragmentName -> [normalized source]\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// For testing.\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nvar printFragmentWarnings = true;\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n\n      // We know something about this fragment\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  }\n\n  // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  }\n\n  // https://github.com/apollographql/graphql-tag/issues/40\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, { experimentalFragmentVariables: experimentalFragmentVariables });\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  }\n\n  // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nfunction gql(/* arguments */) {\n  var args = Array.prototype.slice.call(arguments);\n\n  var literals = args[0];\n\n  // We always get literals[0] and then matching post literals for each arg given\n  var result = (typeof(literals) === \"string\") ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n}\n\n// Support typescript, which isn't as nice as Babel about default exports\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\n\nmodule.exports = gql;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition);\n  /* istanbul ignore else (see transformation done in './resources/inlineInvariant.js') */\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\n\n/* istanbul ignore next (See: https://github.com/graphql/graphql-js/issues/2317) */\nexport var SYMBOL_ITERATOR = typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'; // In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\n\n/* istanbul ignore next (See: https://github.com/graphql/graphql-js/issues/2317) */\n\nexport var SYMBOL_ASYNC_ITERATOR = // $FlowFixMe Flow doesn't define `Symbol.asyncIterator` yet\ntypeof Symbol === 'function' ? Symbol.asyncIterator : '@@asyncIterator';\n/* istanbul ignore next (See: https://github.com/graphql/graphql-js/issues/2317) */\n\nexport var SYMBOL_TO_STRING_TAG = // $FlowFixMe Flow doesn't define `Symbol.toStringTag` yet\ntypeof Symbol === 'function' ? Symbol.toStringTag : '@@toStringTag';\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// FIXME:\n// flowlint uninitialized-instance-property:off\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport { getLocation } from \"../language/location.mjs\";\nimport { printLocation, printSourceLocation } from \"../language/printLocation.mjs\";\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport var GraphQLError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphQLError, _Error);\n\n  var _super = _createSuper(GraphQLError);\n\n  /**\n   * A message describing the Error for debugging purposes.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   *\n   * Note: should be treated as readonly, despite invariant usage.\n   */\n\n  /**\n   * An array of { line, column } locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {\n    var _locations2, _source2, _positions2, _extensions2;\n\n    var _this;\n\n    _classCallCheck(this, GraphQLError);\n\n    _this = _super.call(this, message); // Compute list of blame nodes.\n\n    var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n    var _source = source;\n\n    if (!_source && _nodes) {\n      var _nodes$0$loc;\n\n      _source = (_nodes$0$loc = _nodes[0].loc) === null || _nodes$0$loc === void 0 ? void 0 : _nodes$0$loc.source;\n    }\n\n    var _positions = positions;\n\n    if (!_positions && _nodes) {\n      _positions = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(node.loc.start);\n        }\n\n        return list;\n      }, []);\n    }\n\n    if (_positions && _positions.length === 0) {\n      _positions = undefined;\n    }\n\n    var _locations;\n\n    if (positions && source) {\n      _locations = positions.map(function (pos) {\n        return getLocation(source, pos);\n      });\n    } else if (_nodes) {\n      _locations = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(getLocation(node.loc.source, node.loc.start));\n        }\n\n        return list;\n      }, []);\n    }\n\n    var _extensions = extensions;\n\n    if (_extensions == null && originalError != null) {\n      var originalExtensions = originalError.extensions;\n\n      if (isObjectLike(originalExtensions)) {\n        _extensions = originalExtensions;\n      }\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      name: {\n        value: 'GraphQLError'\n      },\n      message: {\n        value: message,\n        // By being enumerable, JSON.stringify will include `message` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: true,\n        writable: true\n      },\n      locations: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_locations2 = _locations) !== null && _locations2 !== void 0 ? _locations2 : undefined,\n        // By being enumerable, JSON.stringify will include `locations` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _locations != null\n      },\n      path: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: path !== null && path !== void 0 ? path : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: path != null\n      },\n      nodes: {\n        value: _nodes !== null && _nodes !== void 0 ? _nodes : undefined\n      },\n      source: {\n        value: (_source2 = _source) !== null && _source2 !== void 0 ? _source2 : undefined\n      },\n      positions: {\n        value: (_positions2 = _positions) !== null && _positions2 !== void 0 ? _positions2 : undefined\n      },\n      originalError: {\n        value: originalError\n      },\n      extensions: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_extensions2 = _extensions) !== null && _extensions2 !== void 0 ? _extensions2 : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _extensions != null\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    if (originalError === null || originalError === void 0 ? void 0 : originalError.stack) {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n      return _possibleConstructorReturn(_this);\n    }\n    /* istanbul ignore next (See: https://github.com/graphql/graphql-js/issues/2317) */\n\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);\n    } else {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(GraphQLError, [{\n    key: \"toString\",\n    value: function toString() {\n      return printError(this);\n    } // FIXME: workaround to not break chai comparisons, should be remove in v16\n    // $FlowFixMe Flow doesn't support computed properties yet\n\n  }, {\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Object';\n    }\n  }]);\n\n  return GraphQLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","import { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\n\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\nexport var Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = body.charCodeAt(pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new Token(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new Token(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new Token(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new Token(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new Token(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n        return new Token(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new Token(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new Token(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new Token(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new Token(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new Token(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new Token(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new Token(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new Token(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = body.charCodeAt(position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n","import inspect from \"../jsutils/inspect.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Kind } from \"./kinds.mjs\";\nimport { Source } from \"./source.mjs\";\nimport { DirectiveLocation } from \"./directiveLocation.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"./lexer.mjs\";\nimport { Location } from \"./ast.mjs\";\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = typeof source === 'string' ? new Source(source) : source;\n    sourceObj instanceof Source || devAssert(0, \"Must provide Source. Received: \".concat(inspect(sourceObj), \".\"));\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var types = [];\n\n    if (this.expectOptionalKeyword('implements')) {\n      // Optional leading ampersand\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        var _this$_options2;\n\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || // Legacy support for the SDL?\n      ((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true && this.peek(TokenKind.NAME));\n    }\n\n    return types;\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    var types = [];\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      // Optional leading pipe\n      this.expectOptionalToken(TokenKind.PIPE);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.PIPE));\n    }\n\n    return types;\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    // Optional leading pipe\n    this.expectOptionalToken(TokenKind.PIPE);\n    var locations = [];\n\n    do {\n      locations.push(this.parseDirectiveLocation());\n    } while (this.expectOptionalToken(TokenKind.PIPE));\n\n    return locations;\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in\n   * the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing\n   * the lexer. Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token\n   * is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always\n   * return non-empty list that begins with a lex token of openKind and ends\n   * with a lex token of closeKind. Advances the parser to the next lex token\n   * after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging\n */\n\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n"],"sourceRoot":""}