{"version":3,"sources":["pages/Login/index.js"],"names":["useStyles","makeStyles","theme","Login","display","justifyContent","flexDirection","alignItems","height","width","connect","dispatch","dispatchLogin","data","props","classes","React","useState","values","setValues","errors","setErrors","useMutation","REGISTER","register","LOGIN","login","isRegister","test","location","pathname","handleOnChange","target","name","value","prevValues","handleData","a","history","push","onSubmit","e","preventDefault","variables","then","alert","catch","error","graphQLErrors","forEach","err","extensions","validationErrors","wsLink","subscriptionClient","tryReconnect","className","maxWidth","variant","gutterBottom","fullWidth","margin","onChange","username","label","helperText","email","password","type","align","component","Link","to"],"mappings":"oRAgBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,cAAe,SACfC,WAAY,SACZC,OAAQ,QACRC,MAAO,aA8HIC,sBAAQ,MAAM,SAACC,GAAD,MAAe,CAC1CC,cAAe,SAACC,GAAD,OAAUF,EAASC,YAAcC,QADnCH,EA1HD,SAACI,GACb,IAAMC,EAAUf,IADO,EAEKgB,IAAMC,SAAS,IAFpB,mBAEhBC,EAFgB,KAERC,EAFQ,OAGKH,IAAMC,SAAS,IAHpB,mBAGhBG,EAHgB,KAGRC,EAHQ,OAIJC,YAAYC,KAAxBC,EAJgB,sBAKPF,YAAYG,KAArBC,EALgB,oBAMjBC,EAAa,iBAAiBC,KAAKd,EAAMe,SAASC,UAElDC,EAAiB,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACxCf,GAAU,SAACgB,GAAD,sBAAsBA,EAAtB,eAAmCF,EAAOC,QAGhDE,EAAU,uCAAG,WAAOvB,GAAP,SAAAwB,EAAA,0DACbV,EADa,gBAEfb,EAAMwB,QAAQC,KAAK,UAFJ,sCAITzB,EAAMF,cAAcC,GAJX,OAKfC,EAAMwB,QAAQC,KAAK,KALJ,OAOjBlB,EAAU,IAPO,2CAAH,sDAUVmB,EAAQ,uCAAG,WAAOC,GAAP,SAAAJ,EAAA,yDACfI,EAAEC,kBACEf,EAFW,gCAGPH,EAAS,CAAEmB,UAAWzB,IACzB0B,MAAK,gBAAG/B,EAAH,EAAGA,KAAH,OAAcuB,EAAWvB,EAAKW,aACnCoB,MAAK,kBAAMC,MAAM,uBACjBC,OAAM,SAACC,GACFA,EAAMC,eACRD,EAAMC,cAAcC,SAAQ,SAACC,GAAD,OAC1B7B,EAAU6B,EAAIC,WAAWC,wBATpB,6CAcP1B,EAAM,CAAEiB,UAAWzB,IACtB0B,MAAK,YAAe,IAAZ/B,EAAW,EAAXA,KACPuB,EAAWvB,EAAKa,OAChB2B,IAAOC,mBAAmBC,kBAE3BT,OAAM,SAACC,GACFA,EAAMC,eACRD,EAAMC,cAAcC,SAAQ,SAACC,GAAD,OAC1B7B,EAAU6B,EAAIC,WAAWC,wBAtBpB,2CAAH,sDAwEd,OACE,yBAAKI,UAAWzC,EAAQZ,OACtB,kBAAC,IAAD,CAAKsD,SAAU,KACb,kBAAC,IAAD,CAAYC,QAAQ,KAAKC,cAAY,GAClChC,EAAa,OAAS,SAEzB,0BAAMa,SAAUA,GA/ClB,6BACE,kBAAC,IAAD,CACEoB,WAAS,EACTC,OAAO,QACPH,QAAQ,WACRI,SAAU/B,EACVG,MAAOhB,EAAO6C,SACdC,MAAM,WACN/B,KAAK,WACLc,MAAO3B,EAAO2C,SACdE,WAAY7C,EAAO2C,WAEpBpC,GACC,kBAAC,IAAD,CACEiC,WAAS,EACTC,OAAO,QACPH,QAAQ,WACRI,SAAU/B,EACVG,MAAOhB,EAAOgD,MACdF,MAAM,QACN/B,KAAK,QACLc,MAAO3B,EAAO8C,MACdD,WAAY7C,EAAO8C,QAGvB,kBAAC,IAAD,CACEN,WAAS,EACTC,OAAO,QACPH,QAAQ,WACRI,SAAU/B,EACVG,MAAOhB,EAAOiD,SACdH,MAAM,WACN/B,KAAK,WACLmC,KAAK,WACLrB,MAAO3B,EAAO+C,SACdF,WAAY7C,EAAO+C,YAcnB,kBAAC,IAAD,CAAYE,MAAM,SAASX,QAAQ,QAAQC,cAAY,GACpDhC,EACC,kBAAC,IAAD,CAAS0C,MAAM,SAASC,UAAWC,IAAMC,GAAG,KAA5C,4BAIA,kBAAC,IAAD,CAASH,MAAM,SAASC,UAAWC,IAAMC,GAAG,iBAA5C,kBAKJ,kBAAC,IAAD,CAAQJ,KAAK,SAASR,WAAS,GAC5BjC,EAAa,OAAS","file":"static/js/6.a0452e13.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Link as MuiLink,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { REGISTER, LOGIN } from \"graphql/mutations\";\r\nimport { connect } from \"react-redux\";\r\nimport { dispatchLogin } from \"redux/actions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { wsLink } from \"../../client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Login: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({});\r\n  const [errors, setErrors] = React.useState({});\r\n  const [register] = useMutation(REGISTER);\r\n  const [login] = useMutation(LOGIN);\r\n  const isRegister = /\\/registration/.test(props.location.pathname);\r\n\r\n  const handleOnChange = ({ target: { name, value } }) => {\r\n    setValues((prevValues) => ({ ...prevValues, [name]: value }));\r\n  };\r\n\r\n  const handleData = async (data) => {\r\n    if (isRegister) {\r\n      props.history.push(\"/login\");\r\n    } else {\r\n      await props.dispatchLogin(data);\r\n      props.history.push(\"/\");\r\n    }\r\n    setErrors({});\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (isRegister) {\r\n      await register({ variables: values })\r\n        .then(({ data }) => handleData(data.register))\r\n        .then(() => alert(\"Check your email\"))\r\n        .catch((error) => {\r\n          if (error.graphQLErrors) {\r\n            error.graphQLErrors.forEach((err) =>\r\n              setErrors(err.extensions.validationErrors)\r\n            );\r\n          }\r\n        });\r\n    } else {\r\n      await login({ variables: values })\r\n        .then(({ data }) => {\r\n          handleData(data.login);\r\n          wsLink.subscriptionClient.tryReconnect();\r\n        })\r\n        .catch((error) => {\r\n          if (error.graphQLErrors) {\r\n            error.graphQLErrors.forEach((err) =>\r\n              setErrors(err.extensions.validationErrors)\r\n            );\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const renderFields = () => {\r\n    return (\r\n      <div>\r\n        <TextField\r\n          fullWidth\r\n          margin=\"dense\"\r\n          variant=\"outlined\"\r\n          onChange={handleOnChange}\r\n          value={values.username}\r\n          label=\"Username\"\r\n          name=\"username\"\r\n          error={errors.username}\r\n          helperText={errors.username}\r\n        />\r\n        {isRegister && (\r\n          <TextField\r\n            fullWidth\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            onChange={handleOnChange}\r\n            value={values.email}\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            error={errors.email}\r\n            helperText={errors.email}\r\n          />\r\n        )}\r\n        <TextField\r\n          fullWidth\r\n          margin=\"dense\"\r\n          variant=\"outlined\"\r\n          onChange={handleOnChange}\r\n          value={values.password}\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          error={errors.password}\r\n          helperText={errors.password}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Login}>\r\n      <Box maxWidth={300}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          {isRegister ? \"Join\" : \"Login\"}\r\n        </Typography>\r\n        <form onSubmit={onSubmit}>\r\n          {renderFields()}\r\n          <Typography align=\"center\" variant=\"body2\" gutterBottom>\r\n            {isRegister ? (\r\n              <MuiLink align=\"center\" component={Link} to=\"/\">\r\n                Already have an account?\r\n              </MuiLink>\r\n            ) : (\r\n              <MuiLink align=\"center\" component={Link} to=\"/registration\">\r\n                Not a member?\r\n              </MuiLink>\r\n            )}\r\n          </Typography>\r\n          <Button type=\"submit\" fullWidth>\r\n            {isRegister ? \"Join\" : \"Login\"}\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, (dispatch) => ({\r\n  dispatchLogin: (data) => dispatch(dispatchLogin(data)),\r\n}))(Login);\r\n"],"sourceRoot":""}