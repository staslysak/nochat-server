{"version":3,"sources":["graphql/mutations.js","graphql/subscriptions.js","graphql/queries.js","components/Avatar/styles.js","components/Avatar/index.js","components/ChatWindow/styles.js","components/ChatWindow/index.js","components/ChatWindow/ChatInput.js","components/StyledChip/styles.js","components/StyledChip/index.js","components/Message/MessageMenu.js","components/Message/styles.js","components/Message/index.js","components/Fallback/styles.js","components/Fallback/index.js","components/Typing/styles.js","components/Typing/index.js","components/DirectChat/styles.js","components/DirectChat/index.js","containers/DirectChatContainer.js","hooks/index.js","components/Sidebar/styles.js","components/MenuDrawer/styles.js","components/MenuDrawer/index.js","components/UserItem/styles.js","components/UserItem/index.js","components/ChatItem/styles.js","components/ChatItem/index.js","components/DirectItem/DirectItemMenu.js","components/DirectItem/index.js","components/StylesList/styles.js","components/StylesList/index.js","components/Sidebar/index.js","containers/SidebarContainer.js","components/Layout/index.js","pages/Home/index.js"],"names":["REGISTER","gql","LOGIN","VERIFY_USER","CREATE_DIRECT","CREATE_MESSAGE","DELETE_MESSAGE","DELETE_DIRECT","READ_MESSAGE","LOGOUT","USER_TYPING","NEW_MESSAGE_SUBSCRIPTION","DELETE_MESSAGE_SUBSCRIPTION","DELETE_DIRECT_SUBSCRIPTION","NEW_DIRECT_SUBSCRIPTION","ONLINE_USER_SUBSCRIPTION","USER_TYPING_SUBSCRIPTION","USERS","CURRENT_USER","DIRECTS","CURRENT_DIRECT","DIRECT_LAST_MESSAGE","CHAT_MESSAGES","useStyles","makeStyles","theme","Avatar","fontSize","typography","body1","textTransform","color","palette","common","white","Avatar_small","width","height","StyledBadge","withStyles","badge","backgroundColor","boxShadow","background","paper","position","top","left","borderRadius","animation","border","content","transform","opacity","Badge","alt","src","online","props","classes","name","split","slice","map","x","join","isUrl","test","overlap","anchorOrigin","vertical","horizontal","variant","invisible","undefined","className","cx","size","style","ChatWindow","maxHeight","ChatWindow_content","overflow","padding","spacing","action","selected","shape","display","ChatWindow_empty","alignItems","justifyContent","ChatWindow_input_wrapper","minHeight","body2","paddingLeft","ChatWindow_input","chatWindowRef","React","useRef","useEffect","current","scrollTop","scrollHeight","offsetHeight","messages","length","send","handleUpdateView","onScroll","a","onLoadMoreMessages","hasMore","ref","renderMessages","withRouter","inputRef","useState","message","setMessage","focus","location","handleOnSubmit","trim","onSubmit","InputBase","fullWidth","multiline","rowsMax","value","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","placeholder","IconButton","onClick","handleOnClick","disabled","StyledChip","alignSelf","hover","Chip","MessageMenu","anchorEl","onClose","onDelete","onCopy","handleActions","callback","Menu","open","Boolean","MenuItem","dense","Message","maxWidth","bottom","wordWrap","overflowWrap","paddingBottom","minWidth","Message_content","margin","Message_content_receiver","Message_content_sender","Message_receiver","type","lighten","default","darken","borderBottom","borderLeft","Message_sender","secondary","main","getContrastText","right","borderRight","contextMenu","setContextMenu","isOwner","onContextMenu","currentTarget","Typography","text","formatDate","date","menuProps","navigator","clipboard","writeText","DirectFallback","Typing","marginRight","Typing_secondary","DirectChat","DirectChat_header","paddingRight","divider","DirectChat_header_status","DirectChat_content","overflowY","DirectChat_messageWrapper","flexDirection","timeline","renderTimeline","reverse","setSend","handleCreateMessage","onCreateMessage","useCallback","idx","timeDiff","diffTime","createdAt","timelineChip","label","renderDiffTimeLabel","id","userId","user","onDeleteMessage","chatId","recipient","username","ListItem","ListItemText","primary","primaryTypographyProps","component","typingUser","lastSeen","secondaryTypographyProps","avatar","Divider","onTyping","DirectChatContainer","state","setstate","currentUser","useQuery","currentDirect","variables","skip","useMutation","createDirect","createMessage","deleteMessage","deleteDirect","readMessage","userTyping","self","get","chatMessagesData","data","typing","setTyping","setUser","useDebouncedCallback","debounce","useTyping","unsubsribe","subscribeToMore","document","updateQuery","prev","subscriptionData","newMessage","error","subscribeToNewMessage","newDirect","direct","subscribeToNewDirect","filter","subscribeToDeleteMessage","subscribeToDeleteDirect","subscribeToUserTyping","onReadMessage","fetchMore","offset","fetchMoreResult","Sidebar","sidebar","sidebarMin","Sidebar_main","Sidebar_header","Sidebar_searchbar","marginLeft","Sidebar_content","MenuDrawer","zIndex","tooltip","backgroundImage","MenuDrawer_listItem","dark","MenuDrawer_backdrop","Settings","Slide","in","direction","List","email","button","onLogout","align","Backdrop","UserItem_primary","ellipsis","UserItem_secondary","UserItem","to","link","Link","ListItemAvatar","ChatItem_badge_root","ChatItem_badge_badge","ChatItem_primary","ChatItem_secondary","ChatItem_primaryText","ChatItem_secondaryText","ChatItem","unread","max","root","badgeContent","DirectItemMenu","DirectItem","unsubscribes","subscribtions","subscribe","unsubscribe","lastMessage","StyledList","StyledList_subheader","lineHeight","subheader","ListSubheader","setOpen","search","setSearch","renderDirectsList","addProps","disablePadding","typings","onDeleteDirect","directSubscriptions","onSearch","handleMenuToggle","edge","directsMatch","directs","startsWith","directsMatchIds","users","includes","renderDirects","SidebarContainer","subscribeToMoreDirects","client","useLazyQuery","searchUsers","onCompleted","wsLink","subscriptionClient","onclose","resetStore","authTokens","remove","history","push","logout","setTypings","pasreQuery","p","tryReconnect","query","fetchPolicy","then","directLastMessage","writeQuery","concat","sort","sortByLastMessage","container","contentShift","children","Container","Home"],"mappings":"irEAEO,IAAMA,EAAWC,IAAH,KAMRC,EAAQD,IAAH,KASLE,EAAcF,IAAH,KASXG,EAAgBH,IAAH,KAQbI,EAAiBJ,IAAH,KAMdK,EAAiBL,IAAH,KAMdM,EAAgBN,IAAH,KAMbO,EAAeP,IAAH,KAMZQ,EAASR,IAAH,KAMNS,EAAcT,IAAH,M,s6CC9DjB,IAAMU,EAA2BV,IAAH,KAaxBW,EAA8BX,IAAH,KAS3BY,EAA6BZ,IAAH,KAQ1Ba,EAA0Bb,IAAH,KAyBvBc,EAA2Bd,IAAH,KAUxBe,EAA2Bf,IAAH,K,inDCjE9B,IAAMgB,EAAQhB,IAAH,KAcLiB,EAAejB,IAAH,KAaZkB,EAAUlB,IAAH,KAwBPmB,EAAiBnB,IAAH,KAmBdoB,EAAsBpB,IAAH,KAWnBqB,EAAgBrB,IAAH,K,gGCjFbsB,EAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CC,OAAQ,CACNC,SAAUF,EAAMG,WAAWC,MAAMF,SAGjCG,cAAe,YACfC,MAAON,EAAMO,QAAQC,OAAOC,OAE9BC,aAAc,CACZC,MAAO,GACPC,OAAQ,Q,kBCNNC,EAAcC,aAAW,SAACd,GAAD,MAAY,CACzCe,MAAO,CACLC,gBAAiB,UACjBV,MAAO,UACPW,UAAU,aAAD,OAAejB,EAAMO,QAAQW,WAAWC,OACjD,WAAY,CACVC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNX,MAAO,OACPC,OAAQ,OACRW,aAAc,MACdC,UAAW,oCACXC,OAAQ,yBACRC,QAAS,OAGb,oBAAqB,CACnB,KAAM,CACJC,UAAW,YACXC,QAAS,GAEX,OAAQ,CACND,UAAW,aACXC,QAAS,OAxBKd,CA2BhBe,KAqCW5B,GAnCA,SAAC,GAA8C,IAAD,IAA3C6B,WAA2C,MAArC,GAAqC,MAAjCC,WAAiC,MAA3B,GAA2B,EAAvBC,EAAuB,EAAvBA,OAAWC,EAAY,sCACrDC,EAAUpC,IACVqC,EAAOL,EACVM,MAAM,KACNC,MAAM,EAAG,GACTC,KAAI,SAACC,GAAD,OAAOA,EAAE,MACbC,KAAK,IAGFC,EADW,oNACMC,KAAKX,GAE5B,OACE,kBAAClB,EAAD,CACE8B,QAAQ,SACRC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,QAAQ,MACRC,WAAYhB,GAEZ,kBAAC,IAAD,CACED,IAAKU,EAAQV,OAAMkB,EAEnBC,UAAWC,IAAGjB,EAAQjC,OAAT,eACViC,EAAQ,UAAD,OAAWD,EAAMmB,OAAUnB,EAAMmB,OAE3CC,MAAO,CAAEnC,WAAauB,OAAcQ,EAANlB,IAE7BI,KCjBMrC,GA7CGC,aAAW,SAACC,GAAD,MAAY,CACvCsD,WAAY,CACV1C,OAAQ,OACR2C,UAAW,qBAEbC,mBAAoB,CAClB5C,OAAQ,OACR6C,SAAU,OACVC,QAAQ,GAAD,OAAK1D,EAAM2D,QAAQ,GAAnB,MACP,uBAAwB,CACtBhD,MAAO,EACPO,WAAY,cACZ,UAAW,CACTA,WAAYlB,EAAMO,QAAQqD,OAAOC,SACjCtC,aAAyC,EAA3BvB,EAAM8D,MAAMvC,aAC1BwC,QAAS,SAGb,mCAAoC,CAAEA,QAAS,UAEjDC,iBAAkB,CAChBpD,OAAQ,OACRmD,QAAS,OACTE,WAAY,SACZC,eAAgB,UAElBC,yBAA0B,CACxBC,UAAW,GACXL,QAAS,OACTE,WAAY,SACZtD,MAAO,OACP,uBAAwB,CACtBT,SAAUF,EAAMG,WAAWkE,MAAMnE,UAEnCoE,YAAatE,EAAM2D,QAAQ,IAE7BY,iBAAkB,CAChB3D,OAAQ,OACRwD,UAAW,GACX,iCAAkC,CAChC,uBAAwB,CAAEL,QAAS,cCO1BT,GA9CI,SAACrB,GAClB,IAAMC,EAAUpC,KACV0E,EAAgBC,IAAMC,OAAO,MAEnCD,IAAME,WAAU,YACW,WAAO,IAAD,EACqBH,EAAcI,QAAxDC,EADqB,EACrBA,UAAWC,EADU,EACVA,aAAcC,EADJ,EACIA,aAC7B9C,EAAM+C,UAAY/C,EAAM+C,SAASC,QAAU,GAC7CT,EAAcI,QAAQC,UAAYC,GAE5BD,EAAYE,EAAe,IAAMD,GAAkB7C,EAAMiD,OAC7DV,EAAcI,QAAQC,UAAYC,GAGhC7C,EAAMiD,OACRV,EAAcI,QAAQC,UAAYC,IAKxCK,KACC,CAAClD,EAAM+C,WAEV,IAAMI,EAAQ,uCAAG,sBAAAC,EAAA,2DACXb,EAAcI,QAAQC,UAAY,KADvB,gCAEP5C,EAAMqD,qBAFC,OAGTrD,EAAMsD,UACRf,EAAcI,QAAQC,UAAYL,EAAcI,QAAQC,UAAY,IAJzD,2CAAH,qDASd,OACE,yBAAK3B,UAAWhB,EAAQoB,YACtB,yBACEkC,IAAKhB,EACLY,SAAUA,EACVlC,UAAWhB,EAAQsB,oBAGlBvB,EAAMwD,eAAexD,EAAM+C,a,kDC0BrBU,iBA/DG,SAACzD,GACjB,IAAMC,EAAUpC,KACV6F,EAAWlB,IAAMC,SAFI,EAGGD,IAAMmB,SAAS,IAHlB,mBAGpBC,EAHoB,KAGXC,EAHW,KAK3BrB,IAAME,WAAU,WACVgB,EAASf,SACXe,EAASf,QAAQmB,QAGnBD,EAAW,MACV,CAAC7D,EAAM+D,WAEV,IAAMC,EAAiB,WACjBJ,EAAQK,OAAOjB,QACjBhD,EAAMkE,SAASN,GAGjBC,EAAW,KAsBb,OACE,yBAAK5C,UAAWhB,EAAQiC,0BACtB,kBAACiC,GAAA,EAAD,CACEC,WAAS,EACTC,WAAS,EACTC,QAAS,GACTZ,SAAUA,EACVa,MAAOX,EACPY,SAbiB,SAACC,GACtBzE,EAAMwE,WACNX,EAAWY,EAAEC,OAAOH,QAYhBI,WArBiB,SAACF,GACR,UAAVA,EAAEG,KAAoBH,EAAEI,WAC1BJ,EAAEK,iBACFd,MAmBEe,YAAY,qBACZ9D,UAAWhB,EAAQqC,mBAErB,kBAAC0C,GAAA,EAAD,CACEC,QAjCgB,SAACvB,GAAD,OAAc,WAC9BA,EAASf,SACXe,EAASf,QAAQmB,QAEnBE,KA6BakB,CAAcxB,GACvByB,UAAWvB,EAAQK,OAAOjB,QAE1B,kBAAC,KAAD,W,UC7DKnF,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CqH,WAAY,CAEVC,UAAW,SACXpG,WAAYlB,EAAMO,QAAQqD,OAAO2D,MAEjC,mBAAoB,QCCTF,GALI,SAACpF,GAClB,IAAMC,EAAUpC,KAChB,OAAO,kBAAC0H,GAAA,EAAD,eAAMtE,UAAWhB,EAAQmF,WAAYjE,KAAK,SAAYnB,K,8BCqBhDwF,GAxBK,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC5CC,EAAgB,SAACC,GAAD,OAAc,WAClCA,IACAJ,MAGF,OACE,kBAACK,GAAA,EAAD,CAGEN,SAAUA,EACVO,KAAMC,QAAQR,GACdC,QAASA,GAET,kBAACQ,GAAA,EAAD,CAAUC,OAAK,EAAClB,QAASY,EAAcF,IAAvC,kBAGA,kBAACO,GAAA,EAAD,CAAUC,OAAK,EAAClB,QAASY,EAAcD,IAAvC,eClBO/H,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CqI,QAAS,CACPtE,QAAS,OACT3C,SAAU,WACVkH,SAAU,MACV5E,QAAQ,GAAD,OAAK1D,EAAM2D,QAAQ,GAAnB,cAA2B3D,EAAM2D,QAAQ,KAAzC,cAAmD3D,EAAM2D,QAC9D,IADK,MAGPpC,aAAyC,EAA3BvB,EAAM8D,MAAMvC,aAC1B,WAAY,CACVH,SAAU,WACVmH,QAAS,EACT5H,MAAO,GACPC,OAAQ,GACRc,QAAS,MAEX,MAAO,CACL4F,UAAW,WACXkB,SAAU,aACVC,aAAc,aACdC,cAAe1I,EAAM2D,QAAQ,GAC7BgF,SAAU,IAEZ,SAAU,CACRrB,UAAW,WACX1F,QAAS,MAGbgH,gBAAiB,CACf7E,QAAS,OACT8E,OAAO,GAAD,OAAK7I,EAAM2D,QAAQ,GAAnB,SAERmF,yBAA0B,CACxB5E,eAAgB,cAElB6E,uBAAwB,CACtB7E,eAAgB,YAElB8E,iBAAkB,CAChB9H,WACyB,SAAvBlB,EAAMO,QAAQ0I,KACVjJ,EAAMkJ,QAAQlJ,EAAMO,QAAQW,WAAWiI,QAAS,MAChDnJ,EAAMoJ,OAAOpJ,EAAMO,QAAQW,WAAWiI,QAAS,MACrD,WAAY,CACV7H,MAAO,GACPK,UAAW,iBACX0H,aAAa,cAAD,OACa,SAAvBrJ,EAAMO,QAAQ0I,KACVjJ,EAAMkJ,QAAQlJ,EAAMO,QAAQW,WAAWiI,QAAS,MAChDnJ,EAAMoJ,OAAOpJ,EAAMO,QAAQW,WAAWiI,QAAS,OAErDG,WAAY,2BAGhBC,eAAgB,CACdrI,WAAYlB,EAAMO,QAAQiJ,UAAUC,KACpCnJ,MAAON,EAAMO,QAAQmJ,gBAAgB1J,EAAMO,QAAQiJ,UAAUC,MAC7D,WAAY,CACVE,OAAQ,GACRhI,UAAW,gBACX0H,aAAa,cAAD,OAAgBrJ,EAAMO,QAAQiJ,UAAUC,MACpDG,YAAa,+BCTJvB,GA/CC,SAACpG,GAAW,IAAD,IACnBC,EAAUpC,KADS,EAEa2E,IAAMmB,SAAS,MAF5B,mBAElBiE,EAFkB,KAELC,EAFK,KAezB,OACE,yBACE5G,UAAWC,IAAGjB,EAAQ0G,iBAAT,mBACV1G,EAAQ6G,uBAAyB9G,EAAM8H,SAD7B,cAEV7H,EAAQ4G,0BAA4B7G,EAAM8H,SAFhC,KAKb,yBACEC,cAjBa,SAACtD,GAClBA,EAAEK,iBACF+C,EAAepD,EAAEuD,gBAgBb/G,UAAWC,IAAGjB,EAAQmG,SAAT,mBACVnG,EAAQqH,eAAiBtH,EAAM8H,SADrB,cAEV7H,EAAQ8G,kBAAoB/G,EAAM8H,SAFxB,KAKb,kBAACG,GAAA,EAAD,CAAYnH,QAAQ,SACjBd,EAAMkI,MAKT,kBAACD,GAAA,EAAD,CAAYnH,QAAQ,WAAWqH,YAAWnI,EAAMoI,QAElD,kBAAC,GAAD,eACE3C,SAAUmC,EACVlC,QAnCc,kBAAMmC,EAAe,QAoC/B7H,EAAMqI,UAHZ,CAIEzC,OA9BoB,WACxB0C,UAAUC,UAAUC,UAAUxI,EAAMkI,YCjB3BrK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CAC5C0K,eAAgB,CACd9J,OAAQ,OACRmD,QAAS,OACTG,eAAgB,SAChBD,WAAY,cCHHyG,GAAiB,WAC5B,IAAMxI,EAAUpC,KAEhB,OACE,yBAAKoD,UAAWhB,EAAQwI,gBACtB,kBAACR,GAAA,EAAD,CAAYnH,QAAQ,SAApB,6BCPOjD,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9C2K,OAAQ,CACN5G,QAAS,cACTG,eAAgB,gBAChBD,WAAY,SACZ3D,MAAON,EAAMO,QAAQ4J,KAAKX,UAC1B,SAAU,CACR7I,MAAO,EACPC,OAAQ,EACRgK,YAAa,EACb1J,WAAYlB,EAAMO,QAAQ4J,KAAKX,UAC/BjI,aAAc,MACd,iBAAkB,CAChBC,UAAW,yCAEb,iBAAkB,CAChBA,UAAW,2CAEb,iBAAkB,CAChBA,UAAW,6CAIjBqJ,iBAAkB,CAChBvK,MAAON,EAAMO,QAAQiJ,UAAU,KAC/B,SAAU,CACRtI,WAAYlB,EAAMO,QAAQiJ,UAAU,OAGxC,uBAAwB,CACtB,WAAY,CACV7H,UAAW,WACXC,QAAS,GAEX,MAAO,CACLD,UAAW,YACXC,QAAS,SClBA+I,GAhBA,SAAC1I,GACd,IAAMC,EAAUpC,KAChB,OACE,0BACEoD,UAAWC,IAAGjB,EAAQyI,OAAT,eACVzI,EAAQ2I,iBAAqC,cAAlB5I,EAAMc,WAGpC,+BACA,+BACA,+BAPF,WCLSjD,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9C8K,WAAY,CACV1J,SAAU,WACVT,MAAO,OACPC,OAAQ,OACR6C,SAAU,UAGZsH,kBAAmB,CACjB3G,UAAW,GACXE,YAAatE,EAAM2D,QAAQ,GAC3BqH,aAAchL,EAAM2D,QAAQ,GAC5BI,QAAS,OACTE,WAAY,SACZC,eAAgB,gBAChBmF,aAAa,aAAD,OAAerJ,EAAMO,QAAQ0K,UAE3CC,yBAA0B,CACxB5K,MAAON,EAAMO,QAAQiJ,UAAU,MAEjC2B,mBAAoB,CAClBvK,OAAQ,OACR2C,UAAW,oBACX6H,UAAW,SACXhK,SAAU,WACV,uBAAwB,CACtB2C,QAAS,SAIbsH,0BAA2B,CACzBtH,QAAS,OACTuH,cAAe,cCwFJR,GA5FI,SAAC7I,GAClB,IAAMC,EAAUpC,KACVyL,EAAWC,YAAe,YAAIvJ,EAAM+C,UAAUyG,WAFxB,EAGJhH,IAAMmB,UAAS,GAHX,mBAGrBV,EAHqB,KAGfwG,EAHe,KAWtBC,EAAmB,uCAAG,WAAO9F,GAAP,SAAAR,EAAA,6DAC1BqG,GAAQ,GADkB,SAEpBzJ,EAAM2J,gBAAgB/F,GAFF,OAG1B6F,GAAQ,GAHkB,2CAAH,sDAYnBjG,EAAiBhB,IAAMoH,aAC3B,SAAC7G,GAAD,OACEA,EAASC,OACP,YAAID,GAAUyG,UAAUnJ,KAAI,SAACuD,EAASiG,GACpC,IAAMC,EAAWC,YAASnG,EAAQoG,UAAW,QAEvCC,EAAeJ,IAAQP,EAASQ,IACpC,kBAAC,GAAD,CAAYI,MAAOC,YAAoBvG,EAAQoG,aAGjD,OACE,yBAAKpF,IAAKhB,EAAQwG,GAAInJ,UAAWhB,EAAQmJ,2BACtCa,EACD,kBAAC,GAAD,CACE/B,KAAMtE,EAAQsE,KACdE,KAAMxE,EAAQoG,UACdlC,QAASlE,EAAQyG,SAAWrK,EAAMsK,KAAKF,GACvC/B,UAAW,CACT1C,SAAU3F,EAAMuK,gBAAgB3G,EAAQwG,WAOlD,kBAAC,GAAD,QAEJ,CAACpK,EAAMwK,OAAQxK,EAAMsK,KAAKF,GAAIpK,EAAM+C,SAAU/C,EAAMuK,kBAGtD,OACE,yBAAKtJ,UAAWhB,EAAQ4I,YACtB,yBAAK5H,UAAWhB,EAAQ6I,mBACrB9I,EAAMyK,UAAUC,UACf,kBAACC,EAAA,EAAD,CAAUxE,OAAK,GACb,kBAACyE,EAAA,EAAD,CACEC,QAAS7K,EAAMyK,UAAUC,SACzBI,uBAAwB,CAAEC,UAAW,OACrCxD,UA3CNvH,EAAMgL,WAAmB,kBAAC,GAAD,CAAQlK,QAAQ,cACzCd,EAAMyK,UAAU1K,OAAe,SAC7B,gBAAN,OAAuBoI,YAAWnI,EAAMyK,UAAUQ,WA0CxCC,yBAA0B,CACxBpK,QAAS,UACTG,UAAWC,IAAG,eACXjB,EAAQgJ,yBAA2BjJ,EAAMyK,UAAU1K,YAI1D,kBAAC,GAAD,CACED,IAAKE,EAAMyK,UAAUU,OACrBtL,IAAKG,EAAMyK,UAAUC,SACrB3K,OAAQC,EAAMyK,UAAU1K,WAKhC,yBAAKkB,UAAWhB,EAAQiJ,oBACtB,kBAAC,GAAD,CACEjG,KAAMA,EACNK,QAAStD,EAAMsD,QACfP,SAAU/C,EAAM+C,SAChBS,eAAgBA,EAChBH,mBAAoBrD,EAAMqD,qBAE5B,kBAAC+H,EAAA,EAAD,MACA,kBAAC,GAAD,CAAW5G,SAjFI,WACfxE,EAAMwK,QACRxK,EAAMqL,YA+E+BnH,SAAUwF,O,oBCqHtC4B,GAnNa,SAAC,GAAgB,IAAdjB,EAAa,EAAbA,OAAa,EAChB7H,IAAMmB,SAAS,CACvCL,SAAS,IAF+B,mBACnCiI,EADmC,KAC5BC,EAD4B,KAKpCC,EAAcC,aAASlO,GACvBmO,EAAgBD,aAAShO,EAAgB,CAC7CkO,UAAW,CAAEvB,UACbwB,MAAOxB,IARiC,EAUnByB,aAAYpP,KAA5BqP,EAVmC,sBAWlBD,aAAYnP,KAA7BqP,EAXmC,sBAYlBF,aAAYlP,KAA7BqP,EAZmC,sBAanBH,aAAYjP,KAA5BqP,EAbmC,sBAcpBJ,aAAYhP,KAA3BqP,EAdmC,sBAerBL,aAAY9O,KAA1BoP,EAfmC,oBAiBpCC,EAAOC,YAAIb,EAAa,mBAAoB,IAC5ChB,EAAY6B,YAAIX,EAAe,+BAAgC,IAC/DnB,EAAS8B,YAAIX,EAAe,gCAE5BY,EAAmBb,aAAS9N,EAAe,CAC/CgO,UAAW,CAAEpB,UACbqB,MAAOrB,IAGHzH,EAAWyH,EAAS8B,YAAIC,EAAkB,iBAAmB,GA1BzB,ECnBnB,SAACC,EAAM1G,GAAc,IAAD,EACftD,IAAMmB,UAAS,GADA,mBACpC8I,EADoC,KAC5BC,EAD4B,OAEnBlK,IAAMmB,SAAS,IAFI,mBAEpC2G,EAFoC,KAE9BqC,EAF8B,OAGxBC,aAAoB,uCAAC,WAAOrI,GAAP,SAAAnB,EAAA,6DACtCsJ,GAAU,GAD4B,SAEhC5G,EAASvB,GAFuB,2CAAD,sDAGpC,KAHIsI,EAHoC,oBAgB3C,MAAO,CAAC,CAAEvC,OAAMqC,WARF,uCAAG,sBAAAvJ,EAAA,yDACfsJ,GAAU,GAELD,EAHU,gCAGI3G,EAAS0G,GAHb,OAKfK,EAAS,eAAKL,EAAN,CAAY9B,SAAU,MALf,2CAAH,sDDuCiBoC,CAC7B,CAAEtC,SAAQE,SAAU2B,EAAK3B,WACzB,SAACkB,GAAD,OAAeQ,EAAW,CAAER,iBA9BY,mBA4BnCZ,EA5BmC,KA4BvBK,EA5BuB,KAsD1C7I,IAAME,WAAU,WACd,IAiBMqK,EAjBwB,WAC5B,IACE,OAAOR,EAAiBS,gBAAgB,CACtCC,SAAUhQ,EACV2O,UAAW,CAAEpB,UACb0C,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,OAAKA,EAAiBZ,KAGf,CAAEzJ,SAAS,CAFKqK,EAAiBZ,KAAhCa,YAES,mBAAkBF,EAAKpK,YAHLoK,KAMvC,MAAOG,GACP,OAAO,cAIQC,GACnB,OAAO,kBAAMR,OACZ,CAACR,EAAiBC,KAAMhC,IAE3BhI,IAAME,WAAU,WACd,IAkBMqK,EAlBuB,WAC3B,IACE,OAAOpB,EAAcqB,gBAAgB,CACnCC,SAAU7P,EACV8P,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiBZ,KAAM,OAAOW,EADQ,IAEnCK,EAAcJ,EAAiBZ,KAA/BgB,UAER,MAAO,CACL7B,cAAc,eAAMwB,EAAKxB,cAAZ,CAA2B8B,OAAQD,QAItD,MAAOF,GACP,OAAO,cAIQI,GACnB,OAAO,kBAAMX,OACZ,CAACpB,IAEJnJ,IAAME,WAAU,WACd,IAqBMqK,EArB2B,WAC/B,IACE,OAAOR,EAAiBS,gBAAgB,CACtCC,SAAU/P,EACV0O,UAAW,CAAEpB,UACb0C,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiBZ,KAAM,OAAOW,EADQ,IAEnClB,EAAkBmB,EAAiBZ,KAAnCP,cAMR,MAAO,CAAElJ,SAJQoK,EAAKpK,SAAS4K,QAC7B,qBAAGvD,KAAgB6B,EAAc7B,UAMvC,MAAOkD,GACP,OAAO,cAIQM,GACnB,OAAO,kBAAMb,OACZ,CAACR,EAAiBC,KAAMhC,IAE3BhI,IAAME,WAAU,WACd,IAqBMqK,EArB0B,WAC9B,IACE,OAAOpB,EAAcqB,gBAAgB,CACnCC,SAAU9P,EACVyO,UAAW,CAAEpB,UACb0C,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,OAAKA,EAAiBZ,MACGY,EAAiBZ,KAAlCN,aAES9B,KAAOI,EACf,CAAEmB,cAAc,eAAMwB,EAAKxB,cAAZ,CAA2B8B,OAAQ,QAJxBN,KAUvC,MAAOG,GACP,OAAO,cAIQO,GACnB,OAAO,kBAAMd,OACZ,CAACpB,EAAenB,IAEnBhI,IAAME,WAAU,WACd,IAmBMqK,EAnBwB,WAC5B,IACE,OAAOpB,EAAcqB,gBAAgB,CACnCC,SAAU3P,EACVsO,UAAW,CAAEpB,UACb0C,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiBZ,KAAM,OAAOW,EADQ,IAEnCf,EAAegB,EAAiBZ,KAAhCJ,WAIR,OAFApB,EAAW2B,QAAQP,GAEZe,KAGX,MAAOG,GACP,OAAO,cAIQQ,GACnB,OAAO,kBAAMf,OACZ,CAACpB,EAAenB,IAEnB,IAAMb,EAAe,uCAAG,WAAOzB,GAAP,SAAA9E,EAAA,yDACjBoH,EADiB,gCAEduB,EAAa,CAAEH,UAAW,CAAE1D,OAAMmC,OAAQI,EAAUL,MAFtC,6CAId4B,EAAc,CAAEJ,UAAW,CAAE1D,OAAMsC,YAJrB,uBAKd4B,EAAW,CAAER,UAAW,CAAEpB,SAAQE,SAAU,MAL9B,2CAAH,sDAmBrB,OACE,kBAAC,GAAD,CACEJ,KAAM+B,EACN7B,OAAQA,EACRC,UAAWA,GAAa,GACxBnH,QAASiI,EAAMjI,QACfP,SAAUA,GAAY,GACtBiI,WAAYA,EAAWV,OAAS+B,EAAK3B,SAAW,GAAKM,EAAWV,KAChEe,SAAUA,EACV1B,gBAAiBA,EACjBY,gBApBoB,SAACH,GAAD,6BAAQ,sBAAAhH,EAAA,0DAC1BL,GAAgC,IAApBA,EAASC,OADK,gCAEtBkJ,EAAa,CAAEN,UAAW,CAAExB,GAAII,KAFV,6CAItByB,EAAc,CAAEL,UAAW,CAAExB,QAJP,4CAqB5B2D,cAbkB,SAAC3D,GAAD,OAAQ+B,EAAY,CAAEP,UAAW,CAAExB,SAcrD/G,mBA7KqB,WACnBkJ,EAAiBC,MAAQjB,EAAMjI,SAAWkH,GAC5C+B,EAAiByB,UAAU,CACzBpC,UAAW,CAAEpB,SAAQyD,OAAQlL,EAASC,QACtCkK,YAAa,SAACC,EAAD,GAAgC,IAAvBe,EAAsB,EAAtBA,gBAGpB,OAAKA,GAEDA,EAAgBnL,SAASC,OAJf,IAKZwI,EAAS,CAAElI,SAAS,IAGf,CACLP,SAAS,GAAD,mBAAMoK,EAAKpK,UAAX,YAAwBmL,EAAgBnL,aAPrBoK,S,oBE5D1BtP,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CoQ,QAAS,CACPhP,SAAU,WACVT,MAAO,OACP2H,SAAUtI,EAAMiC,MAAMoO,QACtB1H,SAAU3I,EAAMiC,MAAMqO,YAGxBC,aAAc,CACZnP,SAAU,WACVT,MAAO,OACPC,OAAQ,OACR6C,SAAU,SACVvC,WACyB,SAAvBlB,EAAMO,QAAQ0I,KACVjJ,EAAMO,QAAQqD,OAAOC,SACrB7D,EAAMO,QAAQqD,OAAO2D,MAC3BqC,YAAY,aAAD,OAAe5J,EAAMO,QAAQ0K,UAE1CuF,eAAgB,CACdzM,QAAS,OACTE,WAAY,SACZC,eAAgB,gBAChBR,QAAQ,GAAD,OAAK1D,EAAM2D,QAAQ,IAAnB,cAA6B3D,EAAM2D,QAAQ,GAA3C,MACPS,UAAW,IAEbqM,kBAAmB,CACjBvP,WAAYlB,EAAMO,QAAQqD,OAAOC,SACjCH,QAAQ,KAAD,OAAO1D,EAAM2D,QAAQ,GAArB,MACPzD,SAAUF,EAAMG,WAAWkE,MAAMnE,SACjCkE,UAAW,GACXsM,WAAY1Q,EAAM2D,QAAQ,GAC1BpC,aAAcvB,EAAM8D,MAAMvC,cAE5BoP,gBAAiB,CACf/P,OAAQ,OACR2C,UAAW,oBACX6H,UAAW,SACXhK,SAAU,WACV,uBAAwB,CACtB2C,QAAS,a,wCCxCFjE,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9C4Q,WAAY,CACVxP,SAAU,WACVT,MAAO,MACPC,OAAQ,OACRiQ,OAAQ7Q,EAAM6Q,OAAOC,QAErBC,gBAAgB,0BAAD,OAA4B/Q,EAAMO,QAAQW,WAAWiI,QAArD,aAAiEnJ,EAAMO,QAAQW,WAAWC,MAA1F,KACfyI,YAAY,aAAD,OAAe5J,EAAMO,QAAQ0K,UAE1C+F,oBAAqB,CACnB,MAAO,CACLrQ,MAAO,OACP+P,WAAY1Q,EAAM2D,QAAQ,IAE5B,iBAAkB,CAChBrD,MAAON,EAAMO,QAAQgP,MAAM0B,KAC3BP,WAAY,IAGhBQ,oBAAqB,CACnBvQ,MAAO,OACP2H,SAAU,IACVuI,OAAQ,KACRvP,KAAM,OACNqI,MAAO,YCyDIiH,IAnEJO,GAAA,EAIQ,SAAC,GAAmC,IAAD,IAAhC5E,YAAgC,MAAzB,GAAyB,EAArBtE,EAAqB,EAArBA,KAAShG,EAAY,+BAC9CC,EAAUpC,KAOhB,OACE,oCACE,kBAACsR,GAAA,EAAD,CAAOC,GAAIpJ,EAAMqJ,UAAU,SACzB,yBAAKpO,UAAWhB,EAAQ0O,YACtB,kBAACW,GAAA,EAAD,KACE,kBAAC3E,EAAA,EAAD,KACE,kBAAC,GAAD,CACE7K,IAAKwK,EAAKa,OACVtL,IAAKyK,EAAKI,SACV3K,OAAQuK,EAAKvK,UAGjB,kBAAC4K,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAcC,QAASP,EAAKI,SAAUnD,UAAW+C,EAAKiF,UAG1D,kBAACD,GAAA,EAAD,KAcE,kBAAC3E,EAAA,EAAD,CACE6E,QAAM,EACNvO,UAAWhB,EAAQ8O,oBACnBhE,UAAU,MACV9F,QAAS,WACPjF,EAAMyP,WACNzP,EAAM0F,YAGR,kBAACuC,GAAA,EAAD,CAAYnH,QAAQ,QAAQ4O,MAAM,UAAlC,eAOR,kBAACC,GAAA,EAAD,CACE3J,KAAMA,EACNf,QAASjF,EAAM0F,QACfzE,UAAWhB,EAAQgP,yB,mBC5EdpR,GAAYC,aAAW,SAAAC,GAAK,MAAK,CAC5C6R,iBAAiB,eACZ7R,EAAMiC,MAAMC,QAAQ4P,UAEzBC,mBAAmB,eACd/R,EAAMiC,MAAMC,QAAQ4P,SADP,CAEhBxR,MAAON,EAAMO,QAAQiJ,UAAU,WC2BpBwI,GA7BE,SAAC/P,GAChB,IAAMC,EAAUpC,KAEhB,OACE,kBAAC8M,EAAA,EAAD,iBAAc3K,EAAd,CAAqBmG,OAAK,EAACqJ,QAAM,EAACQ,GAAIhQ,EAAMiQ,KAAMlF,UAAWmF,OAC3D,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,CACErQ,IAAKE,EAAMsK,KAAKa,OAChBtL,IAAKG,EAAMsK,KAAKI,SAChB3K,OAAQC,EAAMsK,KAAKvK,UAGvB,kBAAC6K,EAAA,EAAD,CACEC,QAAS7K,EAAMsK,KAAKI,SACpBI,uBAAwB,CACtBC,UAAW,MACX9J,UAAWhB,EAAQ2P,kBAErBrI,UAAS,WAAMvH,EAAMsK,KAAKI,UAC1BQ,yBAA0B,CACxBpK,QAAS,UACTiK,UAAW,MACX9J,UAAWhB,EAAQ6P,wBC1BhBjS,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CqS,oBAAqB,CACnBzR,OAAQ,IAEV0R,qBAAsB,CACpBlR,SAAU,WACVO,UAAW,OACXf,OAAQ,WAEV2R,iBAAkB,CAChBxO,QAAS,QAEXyO,mBAAoB,CAClBzO,QAAS,OACTE,WAAY,UAEdwO,qBAAqB,aACnB9R,MAAO,QACJX,EAAMiC,MAAMC,QAAQ4P,UAEzBY,uBAAuB,aACrB/R,MAAO,OACPiK,YAAa5K,EAAM2D,QAAQ,IACxB3D,EAAMiC,MAAMC,QAAQ4P,cCiEZa,GA5EE,SAAC,GAaX,IAZLT,EAYI,EAZJA,KACA7H,EAWI,EAXJA,KACA+C,EAUI,EAVJA,OACApL,EASI,EATJA,OACA4Q,EAQI,EARJA,OAQI,IAPJlE,cAOI,SANJ7K,EAMI,EANJA,SACAiJ,EAKI,EALJA,QACAtD,EAII,EAJJA,UAEAQ,EAEI,EAFJA,cACG/H,EACC,oHACEC,EAAUpC,KAEhB,OACE,kBAAC8M,EAAA,EAAD,eACExE,OAAK,EACLqJ,QAAM,EAENQ,GAAIC,EACJlF,UAAWmF,KACXtO,SAAUA,EACVmG,cAAeA,GACX/H,GAEJ,kBAACmQ,GAAA,EAAD,KACE,kBAAC,GAAD,CAAQrQ,IAAKqL,EAAQtL,IAAKgL,EAAS9K,OAAQA,KAE7C,kBAAC6K,EAAA,EAAD,CACEC,QACE,oCACE,kBAAC5C,GAAA,EAAD,CACEnH,QAAQ,QACRG,UAAWhB,EAAQuQ,sBAElB3F,GAEH,kBAAC5C,GAAA,EAAD,CAAYnH,QAAQ,UAAUzC,MAAM,iBACjC8J,YAAWC,KAIlB0C,uBAAwB,CACtB7J,UAAWhB,EAAQqQ,iBACnBvF,UAAW,OAEbxD,UACE,oCACE,kBAACU,GAAA,EAAD,CACEnH,QAAQ,UACRG,UAAWhB,EAAQwQ,wBAElBhE,EAAS,kBAAC,GAAD,MAAalF,GAEzB,kBAAC3H,EAAA,EAAD,CACEgR,IAAK,GACL3Q,QAAS,CACPnB,MAAOmB,EAAQoQ,qBACfQ,KAAM5Q,EAAQmQ,qBAEhBU,aAAcH,EACdtS,MAAM,eAIZ6M,yBAA0B,CACxBjK,UAAWhB,EAAQsQ,mBACnBxF,UAAW,WC5DNgG,GApBQ,SAAC,GAAqC,IACpCjL,EADCL,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAM3C,OACE,kBAACI,GAAA,EAAD,CACEN,SAAUA,EACV9E,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CmF,KAAMC,QAAQR,GACdC,QAASA,GAET,kBAACQ,GAAA,EAAD,CAAUC,OAAK,EAAClB,SAZGa,EAYoBH,EAZP,WAClCG,IACAJ,OAUE,iBCkCSsL,GA9CI,SAAChR,GAAW,IAAD,EACUwC,IAAMmB,SAAS,MADzB,mBACrBiE,EADqB,KACRC,EADQ,KAG5BrF,IAAME,WAAU,WACd,IAAMuO,EAAejR,EAAMkR,cAAc7Q,KAAI,SAAC8Q,GAAD,OAC3CA,EAAUnR,EAAMyN,OAAOrD,OAEzB,OAAO,kBACL6G,EAAa5Q,KAAI,SAAC+Q,GAAD,OAAiBA,EAAYpR,EAAMyN,OAAOrD,UAC5D,CAACpK,EAAMyN,OAAOrD,GAAIpK,EAAMkR,gBAa3B,OACE,oCACE,kBAAC,GAAD,CACEjB,KAAMjQ,EAAMiQ,KACZxD,OAAQzM,EAAMyM,OACd7K,SAAU5B,EAAM4B,SAChBuJ,OAAQnL,EAAMsK,KAAKa,OACnBpL,OAAQC,EAAMsK,KAAKvK,OACnB4Q,OAAQ3Q,EAAMyN,OAAOkD,OACrB9F,QAAS7K,EAAMsK,KAAKI,SACpBnD,UAAWvH,EAAMyN,OAAO4D,YAAYnJ,KACpCE,KAAMpI,EAAMyN,OAAO4D,YAAYrH,UAC/B/E,QAASjF,EAAMiF,QACf8C,cAxBa,SAACtD,GAClBA,EAAEK,iBACF+C,EAAepD,EAAEuD,kBAwBf,kBAAC,GAAD,CACEvC,SAAUmC,EACVlC,QAvBc,kBAAMmC,EAAe,OAwBnClC,SAtBe,WACnB3F,EAAM2F,SAAS3F,EAAMyN,OAAOrD,S,UCrBnBvM,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CuT,WAAY,GACZC,qBAAsB,CACpBtS,WAAYlB,EAAMO,QAAQqD,OAAOC,SAKjC4P,WAAY,OACZvT,SAAUF,EAAMG,WAAWkE,MAAMnE,cCatBqT,GApBI,SAACtR,GAClB,IAAMC,EAAUpC,KAEhB,OACE,kBAACyR,GAAA,EAAD,iBACMtP,EADN,CAEEyR,UACEzR,EAAMyR,UACJ,kBAACC,GAAA,EAAD,CACE3G,UAAU,MACV9J,UAAWhB,EAAQsR,sBAElBvR,EAAMyR,WAEP,SCuGGtD,GA/GC,SAACnO,GACf,IAAMC,EAAUpC,KADS,EAED2E,IAAMmB,UAAS,GAFd,mBAElBqC,EAFkB,KAEZ2L,EAFY,OAGGnP,IAAMmB,SAAS,IAHlB,mBAGlBiO,EAHkB,KAGVC,EAHU,KAKnBC,EAAoB,SAACtF,GAAyB,IAAnBuF,EAAkB,uDAAP,GAC1C,OAAOvF,EACL,kBAAC,GAAD,CAAYwF,gBAAc,GACvBxF,EAAKnM,KAAI,SAACoN,GAAD,OACR,kBAAC,GAAD,eACE7I,IAAK6I,EAAOrD,GACZqD,OAAQA,EACRnD,KAAMmD,EAAOnD,KACbmC,OACEzM,EAAMiS,QAAQxE,EAAOrD,MAAQqD,EAAOnD,KAAKI,SACrC1K,EAAMiS,QAAQxE,EAAOrD,IACrB,GAEN6F,KAAI,gBAAWxC,EAAOnD,KAAKF,IAC3BxI,SAAU6L,EAAOnD,KAAKF,KAAOpK,EAAMwK,OACnC7E,SAAU3F,EAAMkS,eAChBhB,cAAelR,EAAMmS,qBACjBJ,QAIR,MA1BmB,EAqENnF,cACjB,SAACrI,GAAD,OAAWvE,EAAMoS,SAAS7N,KAC1B,KAFKsI,EArEkB,oBA+EnBwF,EAAmB,kBAAMV,GAAS3L,IAExC,OACE,yBAAK/E,UAAWhB,EAAQkO,SACtB,kBAAC,GAAD,CACEnI,KAAMA,EACNsE,KAAMtK,EAAMyL,YACZ/F,QAAS2M,EACT5C,SAAUzP,EAAMyP,WAElB,yBAAKxO,UAAWhB,EAAQqO,cACtB,yBAAKrN,UAAWhB,EAAQsO,gBACtB,kBAACvJ,GAAA,EAAD,CAAYsN,KAAK,QAAQjU,MAAM,UAAU4G,QAASoN,GAChD,kBAAC,KAAD,OAEF,kBAAClO,GAAA,EAAD,CACEC,WAAS,EACTjD,KAAK,QACLoD,MAAOqN,EACP7M,YAAY,SACZ9D,UAAWhB,EAAQuO,kBACnBhK,SA1BW,SAACC,GACpBoN,EAAUpN,EAAEC,OAAOH,OACnBsI,EAASpI,EAAEC,OAAOH,WA2Bd,yBAAKtD,UAAWhB,EAAQyO,iBA1ER,WACpB,GAAIkD,EAAO5O,OAAQ,CACjB,IAAIuP,EAAe,GAEfvS,EAAMwS,SAAWxS,EAAMwS,QAAQxP,SACjCuP,EAAevS,EAAMwS,QAAQ7E,QAAO,qBAAGrD,KAChCI,SAAS+H,WAAWb,OAI7B,IAAMc,EAAkBH,EAAalS,KAAI,qBAAGiK,KAAgBF,MAE5D,OACE,oCACG0H,EAAkBS,EAAc,CAC/B3Q,UAAU,EACVqD,QAAS,kBAAM4M,EAAU,OAE1B7R,EAAM2S,OAAS3S,EAAM2S,MAAM3P,OAC1B,kBAAC,GAAD,CAAYyO,UAAU,gBAAgBO,gBAAc,GACjDhS,EAAM2S,MAAMtS,KACX,SAACiK,GAAD,OACGoI,EAAgBE,SAAStI,EAAKF,KAC7B,kBAAC,GAAD,CACExF,IAAK0F,EAAKF,GACVE,KAAMA,EACN2F,KAAI,gBAAW3F,EAAKF,IACpBnF,QAAS,kBAAM4M,EAAU,WAKjC,MAKV,OAAOC,EAAkB9R,EAAMwS,SAsCxBK,CAAc7S,EAAMwS,a,SCuEhBM,GAlKU,SAAC9S,GAAW,IACrBsK,EAASoB,aAASlO,GAAxBgP,KAD0B,EAM9Bd,aAASjO,GAHL+U,EAH0B,EAGhChG,KACiBuG,EAJe,EAIhC/F,gBACAgG,EALgC,EAKhCA,OALgC,EAOKC,aAAa1V,GAPlB,mBAO3B2V,EAP2B,KAONP,EAPM,KAOZnG,KAPY,EAQXV,aAAYjP,KAA5BqP,EAR2B,sBASjBJ,aAAY/O,IAAQ,CACnCoW,YAAY,WAAD,4BAAE,sBAAA/P,EAAA,sDACXgQ,KAAOC,mBAAmBL,OAAOM,UACjCN,EAAOO,aACPC,IAAWC,SACXzT,EAAM0T,QAAQC,KAAK,UAJR,2CAAF,kDAAC,KADPC,EAT2B,sBAkBJpR,IAAMmB,SAAS,IAlBX,mBAkB3BsO,EAlB2B,KAkBlB4B,EAlBkB,KAmB5BpI,EAAca,YAAIhC,EAAM,cAAe,IAClCE,EAAWsJ,YAAW9T,EAAM+D,UAA/BgQ,EAERvR,IAAME,WAAU,WACd0Q,KAAOC,mBAAmBW,iBACzB,IAEH,IAAM7B,EAAsB,CAC1B,SAAC3H,GACC,OAAOuI,EAAuB,CAC5B9F,SAAU3P,EACVsO,UAAW,CAAEpB,UACb0C,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiBZ,KAAM,OAAOW,EADQ,IAEnCf,EAAegB,EAAiBZ,KAAhCJ,WAER,OADAyH,EAAW,eAAK5B,EAAN,eAAgBzH,EAAS4B,KAC5Be,MAIb,SAAC3C,GACC,OAAOuI,EAAuB,CAC5B9F,SAAUhQ,EACV2O,UAAW,CAAEpB,UACb0C,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiBZ,KAAM,OAAOW,EADQ,IAEnCE,EAAeD,EAAiBZ,KAAhCa,WACFsD,EAAStD,EAAWhD,SAAWoB,EAAYrB,GAAK,EAAI,EAa1D,MAAO,CAAEoI,QAXOrF,EAAKqF,QAAQnS,KAAI,SAACoN,GAChC,OAAIA,EAAOrD,KAAOI,EACT,eACFiD,EADL,CAEE4D,YAAahE,EACbsD,OAAQlD,EAAOkD,OAASA,IAGrBlD,UAOf,SAACjD,GACC,OAAOuI,EAAuB,CAC5B9F,SAAU/P,EACV0O,UAAW,CAAEpB,UACb0C,YAAY,WAAD,4BAAE,WAAOC,EAAP,oBAAA/J,EAAA,0DAAegK,EAAf,EAAeA,kBACJZ,KADX,yCACwBW,GADxB,cAEHlB,EAAkBmB,EAAiBZ,KAAnCP,cAFG,SAIE+G,EACViB,MAAM,CACLA,MAAOtW,EACPiO,UAAW,CAAEpB,UACb0J,YAAa,aAEdC,MAAK,YAAe,IAAZ3H,EAAW,EAAXA,KACDgG,EAAUrF,EAAKqF,QAAQnS,KAAI,SAACoN,GAChC,IAAMkD,EAAS1E,EAAc5B,SAAWoB,EAAYrB,GAAK,EAAI,EAE7D,OAAIqD,EAAO4D,YAAYjH,KAAO6B,EAAc7B,GACnC,eACFqD,EADL,CAEE4D,YAAa7E,EAAK4H,kBAClBzD,OAAQlD,EAAOkD,OAASA,IAIrBlD,KAKT,OAFAuF,EAAOqB,WAAW,CAAEJ,MAAOxW,EAAS+O,KAAM,CAAEgG,aAErC,CAAEA,cA3BF,mFAAF,qDAAC,OAkCZtB,EAAgB,CACpB,WACE,OAAO6B,EAAuB,CAC5B9F,SAAU9P,EACV+P,YAAY,WAAD,4BAAE,WAAOC,EAAP,sBAAA/J,EAAA,0DAAegK,EAAf,EAAeA,kBACJZ,KADX,yCACwBW,GADxB,cAEHjB,EAAiBkB,EAAiBZ,KAAlCN,aAEFsG,EAAUrF,EAAKqF,QAAQ7E,QAC3B,qBAAGvD,KAAgB8B,EAAa9B,MAGlC4I,EAAOqB,WAAW,CAAEJ,MAAOxW,EAAS+O,KAAM,CAAEgG,aARjC,kBAUJ,CAAEA,YAVE,2CAAF,qDAAC,MAchB,WACE,OAAOO,EAAuB,CAC5B9F,SAAU7P,EACV8P,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,OAAKA,EAAiBZ,KAEf,CAAEgG,QADOrF,EAAKqF,QAAQ8B,OAAOlH,EAAiBZ,KAAKgB,YADvBL,MAMzC,WACE,OAAO4F,EAAuB,CAC5B9F,SAAU5P,MAKhBmF,IAAME,WAAU,WACd,IAAMuO,EAAeC,EAAc7Q,KAAI,SAAC8Q,GAAD,OAAeA,OACtD,OAAO,kBAAMF,EAAa5Q,KAAI,SAAC+Q,GAAD,OAAiBA,UAC9C,CAACF,IAQJ,OACE,kBAAC,GAAD,CACE1G,OAAQA,EACRyH,QAASA,EACTO,QAASlG,YAAIkG,EAAS,UAAW,IAAI+B,KAAKC,KAC1C7B,MAAOrG,YAAIqG,EAAO,SAClBlH,YAAaA,EACbgE,SAAUmE,EACVxB,SAda,SAAC1H,GAAD,OAAcwI,EAAY,CAAEtH,UAAW,CAAElB,eAetDwH,eAbmB,SAAC9H,GACtB8B,EAAa,CAAEN,UAAW,CAAExB,SAa1B+H,oBAAqBA,KC9KrBtU,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC0W,UAAW,CACT3S,QAAS,OACTN,SAAU,SACVC,QAAS,EACTU,UAAW,QACXb,UAAW,SAEboT,aAAc,CACZhW,MAAO,OACPO,WAAYlB,EAAMO,QAAQW,WAAWC,MACrCwH,SAAU3I,EAAMiC,MAAMqO,gBAeX5K,iBAXA,SAAC,GAA4B,IAA1BkR,EAAyB,EAAzBA,SAAa3U,EAAY,4BACnCC,EAAUpC,KAEhB,OACE,kBAAC+W,GAAA,EAAD,CAAWvO,SAAS,KAAKpF,UAAWhB,EAAQwU,WAC1C,kBAAC,GAAqBzU,GACtB,yBAAKiB,UAAWhB,EAAQyU,cAAeC,OChB9BE,UANF,SAAC7U,GAAW,IACf+T,EAAMD,YAAW9T,EAAM+D,UAAvBgQ,EAER,OAAO,kBAAC,GAAD,KAASA,EAAI,kBAAC,GAAD,CAAqB1J,OAAQ0J,IAAQ","file":"static/js/7.8b511511.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\r\n\r\nexport const REGISTER = gql`\r\n  mutation register($username: String!, $email: String!, $password: String!) {\r\n    register(username: $username, email: $email, password: $password)\r\n  }\r\n`;\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VERIFY_USER = gql`\r\n  mutation verifyUser($secret: String!) {\r\n    verifyUser(secret: $secret) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_DIRECT = gql`\r\n  mutation createDirect($userId: Int!, $text: String) {\r\n    createDirect(userId: $userId, text: $text) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_MESSAGE = gql`\r\n  mutation createMessage($chatId: Int, $text: String!) {\r\n    createMessage(chatId: $chatId, text: $text)\r\n  }\r\n`;\r\n\r\nexport const DELETE_MESSAGE = gql`\r\n  mutation deleteMessage($id: Int!) {\r\n    deleteMessage(id: $id)\r\n  }\r\n`;\r\n\r\nexport const DELETE_DIRECT = gql`\r\n  mutation deleteDirect($id: Int!) {\r\n    deleteDirect(id: $id)\r\n  }\r\n`;\r\n\r\nexport const READ_MESSAGE = gql`\r\n  mutation readMessage($id: Int!) {\r\n    readMessage(id: $id)\r\n  }\r\n`;\r\n\r\nexport const LOGOUT = gql`\r\n  mutation logout {\r\n    logout\r\n  }\r\n`;\r\n\r\nexport const USER_TYPING = gql`\r\n  mutation userTyping($chatId: Int!, $username: String) {\r\n    userTyping(chatId: $chatId, username: $username)\r\n  }\r\n`;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const NEW_MESSAGE_SUBSCRIPTION = gql`\r\n  subscription newMessage($chatId: Int!) {\r\n    newMessage(chatId: $chatId) {\r\n      id\r\n      text\r\n      userId\r\n      chatId\r\n      unread\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_MESSAGE_SUBSCRIPTION = gql`\r\n  subscription deleteMessage($chatId: Int!) {\r\n    deleteMessage(chatId: $chatId) {\r\n      id\r\n      userId\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_DIRECT_SUBSCRIPTION = gql`\r\n  subscription deleteDirect {\r\n    deleteDirect {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NEW_DIRECT_SUBSCRIPTION = gql`\r\n  subscription newDirect {\r\n    newDirect {\r\n      id\r\n      user {\r\n        id\r\n        email\r\n        avatar\r\n        online\r\n        username\r\n        lastSeen\r\n        createdAt\r\n      }\r\n      lastMessage {\r\n        id\r\n        text\r\n        userId\r\n        unread\r\n        createdAt\r\n      }\r\n      unread\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ONLINE_USER_SUBSCRIPTION = gql`\r\n  subscription onlineUser {\r\n    onlineUser {\r\n      id\r\n      online\r\n      lastSeen\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USER_TYPING_SUBSCRIPTION = gql`\r\n  subscription userTyping($chatId: Int!) {\r\n    userTyping(chatId: $chatId)\r\n  }\r\n`;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const USERS = gql`\r\n  query users($username: String) {\r\n    users(username: $username) {\r\n      id\r\n      email\r\n      avatar\r\n      online\r\n      username\r\n      lastSeen\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CURRENT_USER = gql`\r\n  query currentUser {\r\n    currentUser {\r\n      id\r\n      email\r\n      avatar\r\n      online\r\n      username\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DIRECTS = gql`\r\n  query directs {\r\n    directs {\r\n      id\r\n      user {\r\n        id\r\n        email\r\n        avatar\r\n        online\r\n        username\r\n        lastSeen\r\n        createdAt\r\n      }\r\n      lastMessage {\r\n        id\r\n        text\r\n        userId\r\n        createdAt\r\n      }\r\n      unread\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CURRENT_DIRECT = gql`\r\n  query currentDirect($userId: Int!) {\r\n    currentDirect(userId: $userId) {\r\n      direct {\r\n        id\r\n      }\r\n      recipient {\r\n        id\r\n        email\r\n        avatar\r\n        online\r\n        username\r\n        lastSeen\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DIRECT_LAST_MESSAGE = gql`\r\n  query directLastMessage($chatId: Int!) {\r\n    directLastMessage(chatId: $chatId) {\r\n      id\r\n      text\r\n      userId\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CHAT_MESSAGES = gql`\r\n  query getChatMessages($chatId: Int!, $offset: Int) {\r\n    messages(chatId: $chatId, offset: $offset) {\r\n      id\r\n      text\r\n      userId\r\n      unread\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  Avatar: {\r\n    fontSize: theme.typography.body1.fontSize,\r\n    // width: 44,\r\n    // height: 44,\r\n    textTransform: \"uppercase\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  Avatar_small: {\r\n    width: 30,\r\n    height: 30,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { Avatar as MuiAvarat, Badge } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { useStyles } from \"./styles\";\r\nimport cx from \"classnames\";\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"$ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst Avatar = ({ alt = \"\", src = \"\", online, ...props }) => {\r\n  const classes = useStyles();\r\n  const name = alt\r\n    .split(\" \")\r\n    .slice(0, 2)\r\n    .map((x) => x[0])\r\n    .join(\"\");\r\n\r\n  const urlRegex = /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/;\r\n  const isUrl = urlRegex.test(src);\r\n\r\n  return (\r\n    <StyledBadge\r\n      overlap=\"circle\"\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n      variant=\"dot\"\r\n      invisible={!online}\r\n    >\r\n      <MuiAvarat\r\n        src={isUrl ? src : undefined}\r\n        // alt={alt}\r\n        className={cx(classes.Avatar, {\r\n          [classes[`Avatar_${props.size}`]]: props.size,\r\n        })}\r\n        style={{ background: !isUrl ? src : undefined }}\r\n      >\r\n        {name}\r\n      </MuiAvarat>\r\n    </StyledBadge>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  ChatWindow: {\r\n    height: \"100%\",\r\n    maxHeight: \"calc(100% - 64px)\",\r\n  },\r\n  ChatWindow_content: {\r\n    height: \"100%\",\r\n    overflow: \"auto\",\r\n    padding: `${theme.spacing(3)}px`,\r\n    \"&::-webkit-scrollbar\": {\r\n      width: 5,\r\n      background: \"transparent\",\r\n      \"&-thumb\": {\r\n        background: theme.palette.action.selected,\r\n        borderRadius: theme.shape.borderRadius * 3,\r\n        display: \"none\",\r\n      },\r\n    },\r\n    \"&:hover::-webkit-scrollbar-thumb\": { display: \"block\" },\r\n  },\r\n  ChatWindow_empty: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  ChatWindow_input_wrapper: {\r\n    minHeight: 64,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    \"& .MuiInputBase-root\": {\r\n      fontSize: theme.typography.body2.fontSize,\r\n    },\r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n  ChatWindow_input: {\r\n    height: \"100%\",\r\n    minHeight: 48,\r\n    \"& .MuiInputBase-inputMultiline\": {\r\n      \"&::-webkit-scrollbar\": { display: \"none\" },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst ChatWindow = (props) => {\r\n  const classes = useStyles();\r\n  const chatWindowRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    const handleUpdateView = () => {\r\n      const { scrollTop, scrollHeight, offsetHeight } = chatWindowRef.current;\r\n      if (props.messages && props.messages.length <= 20) {\r\n        chatWindowRef.current.scrollTop = scrollHeight;\r\n      } else {\r\n        if (!(scrollTop + offsetHeight + 300 < scrollHeight) && !props.send) {\r\n          chatWindowRef.current.scrollTop = scrollHeight;\r\n        }\r\n\r\n        if (props.send) {\r\n          chatWindowRef.current.scrollTop = scrollHeight;\r\n        }\r\n      }\r\n    };\r\n\r\n    handleUpdateView();\r\n  }, [props.messages]);\r\n\r\n  const onScroll = async () => {\r\n    if (chatWindowRef.current.scrollTop < 200) {\r\n      await props.onLoadMoreMessages();\r\n      if (props.hasMore) {\r\n        chatWindowRef.current.scrollTop = chatWindowRef.current.scrollTop + 10;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.ChatWindow}>\r\n      <div\r\n        ref={chatWindowRef}\r\n        onScroll={onScroll}\r\n        className={classes.ChatWindow_content}\r\n      >\r\n        {/* {props.children} */}\r\n        {props.renderMessages(props.messages)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n","import React from \"react\";\r\nimport { InputBase, IconButton } from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport useStyles from \"./styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ChatInput = (props) => {\r\n  const classes = useStyles();\r\n  const inputRef = React.useRef();\r\n  const [message, setMessage] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n\r\n    setMessage(\"\");\r\n  }, [props.location]);\r\n\r\n  const handleOnSubmit = () => {\r\n    if (message.trim().length) {\r\n      props.onSubmit(message);\r\n    }\r\n\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const handleOnClick = (inputRef) => () => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n    handleOnSubmit();\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\" && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleOnSubmit();\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    props.onChange();\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.ChatWindow_input_wrapper}>\r\n      <InputBase\r\n        fullWidth\r\n        multiline\r\n        rowsMax={12}\r\n        inputRef={inputRef}\r\n        value={message}\r\n        onChange={handleOnChange}\r\n        onKeyPress={handleKeyPress}\r\n        placeholder=\"Write a message...\"\r\n        className={classes.ChatWindow_input}\r\n      />\r\n      <IconButton\r\n        onClick={handleOnClick(inputRef)}\r\n        disabled={!message.trim().length}\r\n      >\r\n        <SendIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(ChatInput);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  StyledChip: {\r\n    // background: \"none\",\r\n    alignSelf: \"center\",\r\n    background: theme.palette.action.hover,\r\n\r\n    \"& .MuiChip-label\": {\r\n      // borderRadius: \"inherit\",\r\n    },\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { Chip } from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst StyledChip = (props) => {\r\n  const classes = useStyles();\r\n  return <Chip className={classes.StyledChip} size=\"small\" {...props} />;\r\n};\r\n\r\nexport default StyledChip;\r\n","import React from \"react\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\n\r\nconst MessageMenu = ({ anchorEl, onClose, onDelete, onCopy }) => {\r\n  const handleActions = (callback) => () => {\r\n    callback();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      // keepMounted\r\n      // anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n      anchorEl={anchorEl}\r\n      open={Boolean(anchorEl)}\r\n      onClose={onClose}\r\n    >\r\n      <MenuItem dense onClick={handleActions(onDelete)}>\r\n        Delete Message\r\n      </MenuItem>\r\n      <MenuItem dense onClick={handleActions(onCopy)}>\r\n        Copy Text\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MessageMenu;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  Message: {\r\n    display: \"flex\",\r\n    position: \"relative\",\r\n    maxWidth: \"70%\",\r\n    padding: `${theme.spacing(1)}px ${theme.spacing(1.5)}px ${theme.spacing(\r\n      0.5\r\n    )}px`,\r\n    borderRadius: theme.shape.borderRadius * 3,\r\n    \"&:before\": {\r\n      position: \"absolute\",\r\n      bottom: -1,\r\n      width: 15,\r\n      height: 20,\r\n      content: \"''\",\r\n    },\r\n    \"& p\": {\r\n      alignSelf: \"flex-end\",\r\n      wordWrap: \"break-word\",\r\n      overflowWrap: \"break-word\",\r\n      paddingBottom: theme.spacing(2),\r\n      minWidth: 20,\r\n    },\r\n    \"& span\": {\r\n      alignSelf: \"flex-end\",\r\n      opacity: 0.54,\r\n    },\r\n  },\r\n  Message_content: {\r\n    display: \"flex\",\r\n    margin: `${theme.spacing(1)}px 0`,\r\n  },\r\n  Message_content_receiver: {\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  Message_content_sender: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  Message_receiver: {\r\n    background:\r\n      theme.palette.type === \"dark\"\r\n        ? theme.lighten(theme.palette.background.default, 0.235)\r\n        : theme.darken(theme.palette.background.default, 0.057),\r\n    \"&:before\": {\r\n      left: -10,\r\n      transform: \"rotate(-15deg)\",\r\n      borderBottom: `15px solid ${\r\n        theme.palette.type === \"dark\"\r\n          ? theme.lighten(theme.palette.background.default, 0.235)\r\n          : theme.darken(theme.palette.background.default, 0.057)\r\n      }`,\r\n      borderLeft: \"15px solid transparent\",\r\n    },\r\n  },\r\n  Message_sender: {\r\n    background: theme.palette.secondary.main,\r\n    color: theme.palette.getContrastText(theme.palette.secondary.main),\r\n    \"&:before\": {\r\n      right: -10,\r\n      transform: \"rotate(15deg)\",\r\n      borderBottom: `15px solid ${theme.palette.secondary.main}`,\r\n      borderRight: \"15px solid transparent\",\r\n    },\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\"; // Link\r\nimport cx from \"classnames\";\r\nimport { formatDate } from \"utils/index\";\r\nimport MessageMenu from \"./MessageMenu\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst Message = (props) => {\r\n  const classes = useStyles();\r\n  const [contextMenu, setContextMenu] = React.useState(null);\r\n\r\n  const handleClose = () => setContextMenu(null);\r\n\r\n  const handleOpen = (e) => {\r\n    e.preventDefault();\r\n    setContextMenu(e.currentTarget);\r\n  };\r\n\r\n  const handleCopyMessage = () => {\r\n    navigator.clipboard.writeText(props.text);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cx(classes.Message_content, {\r\n        [classes.Message_content_sender]: props.isOwner,\r\n        [classes.Message_content_receiver]: !props.isOwner,\r\n      })}\r\n    >\r\n      <div\r\n        onContextMenu={handleOpen}\r\n        className={cx(classes.Message, {\r\n          [classes.Message_sender]: props.isOwner,\r\n          [classes.Message_receiver]: !props.isOwner,\r\n        })}\r\n      >\r\n        <Typography variant=\"body2\">\r\n          {props.text}\r\n          {/* <Link href=\"#\" color=\"inherit\" underline=\"always\">\r\n            some@gmail.com\r\n          </Link> */}\r\n        </Typography>\r\n        <Typography variant=\"caption\">{formatDate(props.date)}</Typography>\r\n      </div>\r\n      <MessageMenu\r\n        anchorEl={contextMenu}\r\n        onClose={handleClose}\r\n        {...props.menuProps}\r\n        onCopy={handleCopyMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  DirectFallback: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nexport const DirectFallback = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.DirectFallback}>\r\n      <Typography variant=\"body2\">No messages here yet...</Typography>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  Typing: {\r\n    display: \"inline-flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    \"& span\": {\r\n      width: 5,\r\n      height: 5,\r\n      marginRight: 4,\r\n      background: theme.palette.text.secondary,\r\n      borderRadius: \"50%\",\r\n      \"&:nth-child(1)\": {\r\n        animation: \"$animation 1s ease-in-out infinite 0s\",\r\n      },\r\n      \"&:nth-child(2)\": {\r\n        animation: \"$animation 1s ease-in-out infinite 0.2s\",\r\n      },\r\n      \"&:nth-child(3)\": {\r\n        animation: \"$animation 1s ease-in-out infinite 0.4s\",\r\n      },\r\n    },\r\n  },\r\n  Typing_secondary: {\r\n    color: theme.palette.secondary[200],\r\n    \"& span\": {\r\n      background: theme.palette.secondary[200],\r\n    },\r\n  },\r\n  \"@keyframes animation\": {\r\n    \"0%, 100%\": {\r\n      transform: \"scale(1)\",\r\n      opacity: 1,\r\n    },\r\n    \"50%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 0.5,\r\n    },\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport cx from \"classnames\";\r\n\r\nconst Typing = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <span\r\n      className={cx(classes.Typing, {\r\n        [classes.Typing_secondary]: props.variant === \"secondary\",\r\n      })}\r\n    >\r\n      <span />\r\n      <span />\r\n      <span />\r\n      typing\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Typing;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  DirectChat: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n    // borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  DirectChat_header: {\r\n    minHeight: 64,\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  DirectChat_header_status: {\r\n    color: theme.palette.secondary[200],\r\n  },\r\n  DirectChat_content: {\r\n    height: \"100%\",\r\n    maxHeight: \"calc(100% - 64px)\",\r\n    overflowY: \"scroll\",\r\n    position: \"relative\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n    // borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  DirectChat_messageWrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { ListItem, ListItemText, Divider } from \"@material-ui/core\";\r\nimport {\r\n  formatDate,\r\n  diffTime,\r\n  renderDiffTimeLabel,\r\n  renderTimeline,\r\n} from \"utils/index\";\r\nimport Avatar from \"components/Avatar\";\r\nimport ChatWindow from \"components/ChatWindow\";\r\nimport ChatInput from \"components/ChatWindow/ChatInput\";\r\nimport StyledChip from \"components/StyledChip\";\r\nimport Message from \"components/Message\";\r\nimport { DirectFallback } from \"components/Fallback\";\r\nimport Typing from \"components/Typing\";\r\nimport { useStyles } from \"./styles\";\r\nimport cx from \"classnames\";\r\n\r\n// import VisibilitySenson from \"react-visibility-sensor\";\r\n// <VisibilitySenson\r\n//   offset={{ top: 32, bottom: 32 }}\r\n//   onChange={handleOnReadMessage}\r\n// >\r\n\r\n// const handleOnReadMessage = (isVisible) => {\r\n//   console.log(isVisible, message.text, message);\r\n//   console.log(isVisible && message.unread);\r\n//   if (isVisible && message.unread) props.onReadMessage(message.id);\r\n// };\r\n\r\nconst DirectChat = (props) => {\r\n  const classes = useStyles();\r\n  const timeline = renderTimeline([...props.messages].reverse());\r\n  const [send, setSend] = React.useState(false);\r\n\r\n  const handleChange = () => {\r\n    if (props.chatId) {\r\n      props.onTyping();\r\n    }\r\n  };\r\n\r\n  const handleCreateMessage = async (message) => {\r\n    setSend(true);\r\n    await props.onCreateMessage(message);\r\n    setSend(false);\r\n  };\r\n\r\n  const renderStatus = () => {\r\n    if (props.typingUser) return <Typing variant=\"secondary\" />;\r\n    if (props.recipient.online) return \"online\";\r\n    return `last seen at ${formatDate(props.recipient.lastSeen)}`;\r\n  };\r\n\r\n  const renderMessages = React.useCallback(\r\n    (messages) =>\r\n      messages.length ? (\r\n        [...messages].reverse().map((message, idx) => {\r\n          const timeDiff = diffTime(message.createdAt, \"days\");\r\n\r\n          const timelineChip = idx === timeline[timeDiff] && (\r\n            <StyledChip label={renderDiffTimeLabel(message.createdAt)} />\r\n          );\r\n\r\n          return (\r\n            <div key={message.id} className={classes.DirectChat_messageWrapper}>\r\n              {timelineChip}\r\n              <Message\r\n                text={message.text}\r\n                date={message.createdAt}\r\n                isOwner={message.userId === props.user.id}\r\n                menuProps={{\r\n                  onDelete: props.onDeleteMessage(message.id),\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <DirectFallback />\r\n      ),\r\n    [props.chatId, props.user.id, props.messages, props.onDeleteMessage]\r\n  );\r\n\r\n  return (\r\n    <div className={classes.DirectChat}>\r\n      <div className={classes.DirectChat_header}>\r\n        {props.recipient.username && (\r\n          <ListItem dense>\r\n            <ListItemText\r\n              primary={props.recipient.username}\r\n              primaryTypographyProps={{ component: \"div\" }}\r\n              secondary={renderStatus()}\r\n              secondaryTypographyProps={{\r\n                variant: \"caption\",\r\n                className: cx({\r\n                  [classes.DirectChat_header_status]: props.recipient.online,\r\n                }),\r\n              }}\r\n            />\r\n            <Avatar\r\n              src={props.recipient.avatar}\r\n              alt={props.recipient.username}\r\n              online={props.recipient.online}\r\n            />\r\n          </ListItem>\r\n        )}\r\n      </div>\r\n      <div className={classes.DirectChat_content}>\r\n        <ChatWindow\r\n          send={send}\r\n          hasMore={props.hasMore}\r\n          messages={props.messages}\r\n          renderMessages={renderMessages}\r\n          onLoadMoreMessages={props.onLoadMoreMessages}\r\n        />\r\n        <Divider />\r\n        <ChatInput onChange={handleChange} onSubmit={handleCreateMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectChat;\r\n","import React from \"react\";\r\nimport {\r\n  NEW_MESSAGE_SUBSCRIPTION,\r\n  NEW_DIRECT_SUBSCRIPTION,\r\n  DELETE_MESSAGE_SUBSCRIPTION,\r\n  DELETE_DIRECT_SUBSCRIPTION,\r\n  USER_TYPING_SUBSCRIPTION,\r\n} from \"graphql/subscriptions\";\r\nimport { CURRENT_USER, CURRENT_DIRECT, CHAT_MESSAGES } from \"graphql/queries\";\r\nimport {\r\n  CREATE_DIRECT,\r\n  CREATE_MESSAGE,\r\n  DELETE_MESSAGE,\r\n  DELETE_DIRECT,\r\n  READ_MESSAGE,\r\n  USER_TYPING,\r\n} from \"graphql/mutations\";\r\nimport { get } from \"lodash-es\";\r\nimport DirectChat from \"components/DirectChat\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { useTyping } from \"hooks/index\";\r\n\r\nconst DirectChatContainer = ({ userId }) => {\r\n  const [state, setstate] = React.useState({\r\n    hasMore: true,\r\n  });\r\n\r\n  const currentUser = useQuery(CURRENT_USER);\r\n  const currentDirect = useQuery(CURRENT_DIRECT, {\r\n    variables: { userId },\r\n    skip: !userId,\r\n  });\r\n  const [createDirect] = useMutation(CREATE_DIRECT);\r\n  const [createMessage] = useMutation(CREATE_MESSAGE);\r\n  const [deleteMessage] = useMutation(DELETE_MESSAGE);\r\n  const [deleteDirect] = useMutation(DELETE_DIRECT);\r\n  const [readMessage] = useMutation(READ_MESSAGE);\r\n  const [userTyping] = useMutation(USER_TYPING);\r\n\r\n  const self = get(currentUser, \"data.currentUser\", {});\r\n  const recipient = get(currentDirect, \"data.currentDirect.recipient\", {});\r\n  const chatId = get(currentDirect, \"data.currentDirect.direct.id\");\r\n\r\n  const chatMessagesData = useQuery(CHAT_MESSAGES, {\r\n    variables: { chatId },\r\n    skip: !chatId,\r\n  });\r\n\r\n  const messages = chatId ? get(chatMessagesData, \"data.messages\") : [];\r\n\r\n  const [typingUser, onTyping] = useTyping(\r\n    { chatId, username: self.username },\r\n    (variables) => userTyping({ variables })\r\n  );\r\n\r\n  const loadMoreMessages = () => {\r\n    if (chatMessagesData.data && state.hasMore && chatId) {\r\n      chatMessagesData.fetchMore({\r\n        variables: { chatId, offset: messages.length },\r\n        updateQuery: (prev, { fetchMoreResult }) => {\r\n          const limit = 20;\r\n\r\n          if (!fetchMoreResult) return prev;\r\n\r\n          if (fetchMoreResult.messages.length < limit) {\r\n            setstate({ hasMore: false });\r\n          }\r\n\r\n          return {\r\n            messages: [...prev.messages, ...fetchMoreResult.messages],\r\n          };\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const subscribeToNewMessage = () => {\r\n      try {\r\n        return chatMessagesData.subscribeToMore({\r\n          document: NEW_MESSAGE_SUBSCRIPTION,\r\n          variables: { chatId },\r\n          updateQuery: (prev, { subscriptionData }) => {\r\n            if (!subscriptionData.data) return prev;\r\n            const { newMessage } = subscriptionData.data;\r\n\r\n            return { messages: [newMessage, ...prev.messages] };\r\n          },\r\n        });\r\n      } catch (error) {\r\n        return () => {};\r\n      }\r\n    };\r\n\r\n    const unsubsribe = subscribeToNewMessage();\r\n    return () => unsubsribe();\r\n  }, [chatMessagesData.data, chatId]);\r\n\r\n  React.useEffect(() => {\r\n    const subscribeToNewDirect = () => {\r\n      try {\r\n        return currentDirect.subscribeToMore({\r\n          document: NEW_DIRECT_SUBSCRIPTION,\r\n          updateQuery: (prev, { subscriptionData }) => {\r\n            if (!subscriptionData.data) return prev;\r\n            const { newDirect } = subscriptionData.data;\r\n\r\n            return {\r\n              currentDirect: { ...prev.currentDirect, direct: newDirect },\r\n            };\r\n          },\r\n        });\r\n      } catch (error) {\r\n        return () => {};\r\n      }\r\n    };\r\n\r\n    const unsubsribe = subscribeToNewDirect();\r\n    return () => unsubsribe();\r\n  }, [currentDirect]);\r\n\r\n  React.useEffect(() => {\r\n    const subscribeToDeleteMessage = () => {\r\n      try {\r\n        return chatMessagesData.subscribeToMore({\r\n          document: DELETE_MESSAGE_SUBSCRIPTION,\r\n          variables: { chatId },\r\n          updateQuery: (prev, { subscriptionData }) => {\r\n            if (!subscriptionData.data) return prev;\r\n            const { deleteMessage } = subscriptionData.data;\r\n\r\n            const messages = prev.messages.filter(\r\n              ({ id }) => id !== deleteMessage.id\r\n            );\r\n\r\n            return { messages };\r\n          },\r\n        });\r\n      } catch (error) {\r\n        return () => {};\r\n      }\r\n    };\r\n\r\n    const unsubsribe = subscribeToDeleteMessage();\r\n    return () => unsubsribe();\r\n  }, [chatMessagesData.data, chatId]);\r\n\r\n  React.useEffect(() => {\r\n    const subscribeToDeleteDirect = () => {\r\n      try {\r\n        return currentDirect.subscribeToMore({\r\n          document: DELETE_DIRECT_SUBSCRIPTION,\r\n          variables: { chatId },\r\n          updateQuery: (prev, { subscriptionData }) => {\r\n            if (!subscriptionData.data) return prev;\r\n            const { deleteDirect } = subscriptionData.data;\r\n\r\n            if (deleteDirect.id === chatId) {\r\n              return { currentDirect: { ...prev.currentDirect, direct: null } };\r\n            }\r\n\r\n            return prev;\r\n          },\r\n        });\r\n      } catch (error) {\r\n        return () => {};\r\n      }\r\n    };\r\n\r\n    const unsubsribe = subscribeToDeleteDirect();\r\n    return () => unsubsribe();\r\n  }, [currentDirect, chatId]);\r\n\r\n  React.useEffect(() => {\r\n    const subscribeToUserTyping = () => {\r\n      try {\r\n        return currentDirect.subscribeToMore({\r\n          document: USER_TYPING_SUBSCRIPTION,\r\n          variables: { chatId },\r\n          updateQuery: (prev, { subscriptionData }) => {\r\n            if (!subscriptionData.data) return prev;\r\n            const { userTyping } = subscriptionData.data;\r\n\r\n            typingUser.setUser(userTyping);\r\n\r\n            return prev;\r\n          },\r\n        });\r\n      } catch (error) {\r\n        return () => {};\r\n      }\r\n    };\r\n\r\n    const unsubsribe = subscribeToUserTyping();\r\n    return () => unsubsribe();\r\n  }, [currentDirect, chatId]);\r\n\r\n  const onCreateMessage = async (text) => {\r\n    if (!chatId) {\r\n      await createDirect({ variables: { text, userId: recipient.id } });\r\n    } else {\r\n      await createMessage({ variables: { text, chatId } });\r\n      await userTyping({ variables: { chatId, username: \"\" } });\r\n    }\r\n  };\r\n\r\n  const onDeleteMessage = (id) => async () => {\r\n    if (messages && messages.length === 1) {\r\n      await deleteDirect({ variables: { id: chatId } });\r\n    } else {\r\n      await deleteMessage({ variables: { id } });\r\n    }\r\n  };\r\n\r\n  const onReadMessage = (id) => readMessage({ variables: { id } });\r\n\r\n  return (\r\n    <DirectChat\r\n      user={self}\r\n      chatId={chatId}\r\n      recipient={recipient || {}}\r\n      hasMore={state.hasMore}\r\n      messages={messages || []}\r\n      typingUser={typingUser.user === self.username ? \"\" : typingUser.user}\r\n      onTyping={onTyping}\r\n      onCreateMessage={onCreateMessage}\r\n      onDeleteMessage={onDeleteMessage}\r\n      onReadMessage={onReadMessage}\r\n      onLoadMoreMessages={loadMoreMessages}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DirectChatContainer;\r\n","import React from \"react\";\r\nimport { useDebouncedCallback } from \"use-debounce\";\r\n\r\nexport const useTyping = (data, callback) => {\r\n  const [typing, setTyping] = React.useState(false);\r\n  const [user, setUser] = React.useState(\"\");\r\n  const [debounce] = useDebouncedCallback(async (value) => {\r\n    setTyping(false);\r\n    await callback(value);\r\n  }, 500);\r\n\r\n  const onTyping = async () => {\r\n    setTyping(true);\r\n\r\n    if (!typing) await callback(data);\r\n\r\n    debounce({ ...data, username: \"\" });\r\n  };\r\n\r\n  return [{ user, setUser }, onTyping];\r\n};\r\n\r\nexport const usePrev = (values) => {\r\n  const ref = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    ref.current = values;\r\n  }, [values]);\r\n\r\n  return ref.current;\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  Sidebar: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    maxWidth: theme.props.sidebar,\r\n    minWidth: theme.props.sidebarMin,\r\n    // borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  Sidebar_main: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n    background:\r\n      theme.palette.type === \"dark\"\r\n        ? theme.palette.action.selected\r\n        : theme.palette.action.hover,\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  Sidebar_header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    padding: `${theme.spacing(0.5)}px ${theme.spacing(3)}px`,\r\n    minHeight: 64,\r\n  },\r\n  Sidebar_searchbar: {\r\n    background: theme.palette.action.selected,\r\n    padding: `0 ${theme.spacing(1)}px`,\r\n    fontSize: theme.typography.body2.fontSize,\r\n    minHeight: 32,\r\n    marginLeft: theme.spacing(1),\r\n    borderRadius: theme.shape.borderRadius,\r\n  },\r\n  Sidebar_content: {\r\n    height: \"100%\",\r\n    maxHeight: \"calc(100% - 64px)\",\r\n    overflowY: \"scroll\",\r\n    position: \"relative\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n    // borderTop: `1px solid ${theme.palette.divider}`\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  MenuDrawer: {\r\n    position: \"absolute\",\r\n    width: \"95%\",\r\n    height: \"100%\",\r\n    zIndex: theme.zIndex.tooltip,\r\n    // background: theme.palette.background.paper,\r\n    backgroundImage: `linear-gradient(90deg, ${theme.palette.background.default}, ${theme.palette.background.paper})`,\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  MenuDrawer_listItem: {\r\n    \"& p\": {\r\n      width: \"100%\",\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n    \"&:last-child p\": {\r\n      color: theme.palette.error.dark,\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  MenuDrawer_backdrop: {\r\n    width: \"100%\",\r\n    maxWidth: 960,\r\n    zIndex: 1300,\r\n    left: \"auto\",\r\n    right: \"auto\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Slide,\r\n  Backdrop,\r\n} from \"@material-ui/core\";\r\nimport Avatar from \"components/Avatar\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nexport const menuSchema = [\r\n  {\r\n    title: \"Settings\",\r\n    link: \"/settings\",\r\n    icon: <SettingsIcon />,\r\n  },\r\n];\r\n\r\nconst MenuDrawer = ({ user = {}, open, ...props }) => {\r\n  const classes = useStyles();\r\n  // const open = false;\r\n\r\n  // const [open, setOpen] = React.useState(false);\r\n\r\n  // const handleMenuToggle = () => setOpen(!open);\r\n\r\n  return (\r\n    <>\r\n      <Slide in={open} direction=\"right\">\r\n        <div className={classes.MenuDrawer}>\r\n          <List>\r\n            <ListItem>\r\n              <Avatar\r\n                src={user.avatar}\r\n                alt={user.username}\r\n                online={user.online}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary={user.username} secondary={user.email} />\r\n            </ListItem>\r\n          </List>\r\n          <List>\r\n            {/* {menuSchema.map(({ title, link, icon }) => (\r\n              <ListItem\r\n                key={title}\r\n                button\r\n                to={link}\r\n                className={classes.MenuDrawer_listItem}\r\n                component={link ? Link : \"div\"}\r\n                onClick={props.onClose}\r\n              >\r\n                {icon}\r\n                <Typography variant=\"body2\">{title}</Typography>\r\n              </ListItem>\r\n            ))} */}\r\n            <ListItem\r\n              button\r\n              className={classes.MenuDrawer_listItem}\r\n              component=\"div\"\r\n              onClick={() => {\r\n                props.onLogout();\r\n                props.onClose();\r\n              }}\r\n            >\r\n              <Typography variant=\"body2\" align=\"center\">\r\n                Log Out\r\n              </Typography>\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n      </Slide>\r\n      <Backdrop\r\n        open={open}\r\n        onClick={props.onClose}\r\n        className={classes.MenuDrawer_backdrop}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuDrawer;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  UserItem_primary: {\r\n    ...theme.props.classes.ellipsis\r\n  },\r\n  UserItem_secondary: {\r\n    ...theme.props.classes.ellipsis,\r\n    color: theme.palette.secondary[200]\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { ListItem, ListItemAvatar, ListItemText } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"components/Avatar\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst UserItem = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem {...props} dense button to={props.link} component={Link}>\r\n      <ListItemAvatar>\r\n        <Avatar\r\n          src={props.user.avatar}\r\n          alt={props.user.username}\r\n          online={props.user.online}\r\n        />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={props.user.username}\r\n        primaryTypographyProps={{\r\n          component: \"div\",\r\n          className: classes.UserItem_primary,\r\n        }}\r\n        secondary={`@${props.user.username}`}\r\n        secondaryTypographyProps={{\r\n          variant: \"caption\",\r\n          component: \"div\",\r\n          className: classes.UserItem_secondary,\r\n        }}\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  ChatItem_badge_root: {\r\n    height: 15,\r\n  },\r\n  ChatItem_badge_badge: {\r\n    position: \"relative\",\r\n    transform: \"none\",\r\n    height: \"inherit\",\r\n  },\r\n  ChatItem_primary: {\r\n    display: \"flex\",\r\n  },\r\n  ChatItem_secondary: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  ChatItem_primaryText: {\r\n    width: \"100%\",\r\n    ...theme.props.classes.ellipsis,\r\n  },\r\n  ChatItem_secondaryText: {\r\n    width: \"100%\",\r\n    marginRight: theme.spacing(1),\r\n    ...theme.props.classes.ellipsis,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  Badge,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"components/Avatar\";\r\nimport { useStyles } from \"./styles\";\r\nimport { formatDate } from \"utils/index\";\r\nimport Typing from \"components/Typing\";\r\n\r\nconst ChatItem = ({\r\n  link,\r\n  date,\r\n  avatar,\r\n  online,\r\n  unread,\r\n  typing = false,\r\n  selected,\r\n  primary,\r\n  secondary,\r\n\r\n  onContextMenu,\r\n  ...props\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      dense\r\n      button\r\n      // disableRipple\r\n      to={link}\r\n      component={Link}\r\n      selected={selected}\r\n      onContextMenu={onContextMenu}\r\n      {...props}\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar src={avatar} alt={primary} online={online} />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={\r\n          <>\r\n            <Typography\r\n              variant=\"body2\"\r\n              className={classes.ChatItem_primaryText}\r\n            >\r\n              {primary}\r\n            </Typography>\r\n            <Typography variant=\"caption\" color=\"textSecondary\">\r\n              {formatDate(date)}\r\n            </Typography>\r\n          </>\r\n        }\r\n        primaryTypographyProps={{\r\n          className: classes.ChatItem_primary,\r\n          component: \"div\",\r\n        }}\r\n        secondary={\r\n          <>\r\n            <Typography\r\n              variant=\"caption\"\r\n              className={classes.ChatItem_secondaryText}\r\n            >\r\n              {typing ? <Typing /> : secondary}\r\n            </Typography>\r\n            <Badge\r\n              max={50}\r\n              classes={{\r\n                badge: classes.ChatItem_badge_badge,\r\n                root: classes.ChatItem_badge_root,\r\n              }}\r\n              badgeContent={unread}\r\n              color=\"secondary\"\r\n            />\r\n          </>\r\n        }\r\n        secondaryTypographyProps={{\r\n          className: classes.ChatItem_secondary,\r\n          component: \"div\",\r\n        }}\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default ChatItem;\r\n","import React from \"react\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\n\r\nconst DirectItemMenu = ({ anchorEl, onClose, onDelete }) => {\r\n  const handleActions = (callback) => () => {\r\n    callback();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={Boolean(anchorEl)}\r\n      onClose={onClose}\r\n    >\r\n      <MenuItem dense onClick={handleActions(onDelete)}>\r\n        Delete chat\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default DirectItemMenu;\r\n","import React from \"react\";\r\nimport ChatItem from \"components/ChatItem\";\r\nimport DirectItemMenu from \"./DirectItemMenu\";\r\n\r\nconst DirectItem = (props) => {\r\n  const [contextMenu, setContextMenu] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribes = props.subscribtions.map((subscribe) =>\r\n      subscribe(props.direct.id)\r\n    );\r\n    return () =>\r\n      unsubscribes.map((unsubscribe) => unsubscribe(props.direct.id));\r\n  }, [props.direct.id, props.subscribtions]);\r\n\r\n  const handleOpen = (e) => {\r\n    e.preventDefault();\r\n    setContextMenu(e.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => setContextMenu(null);\r\n\r\n  const handleDelete = () => {\r\n    props.onDelete(props.direct.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ChatItem\r\n        link={props.link}\r\n        typing={props.typing}\r\n        selected={props.selected}\r\n        avatar={props.user.avatar}\r\n        online={props.user.online}\r\n        unread={props.direct.unread}\r\n        primary={props.user.username}\r\n        secondary={props.direct.lastMessage.text}\r\n        date={props.direct.lastMessage.createdAt}\r\n        onClick={props.onClick}\r\n        onContextMenu={handleOpen}\r\n      />\r\n      <DirectItemMenu\r\n        anchorEl={contextMenu}\r\n        onClose={handleClose}\r\n        onDelete={handleDelete}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DirectItem;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  StyledList: {},\r\n  StyledList_subheader: {\r\n    background: theme.palette.action.selected,\r\n    // background:\r\n    //   theme.palette.type === \"dark\"\r\n    //     ? theme.lighten(theme.palette.background.default, 0.235)\r\n    //     : theme.darken(theme.palette.background.default, 0.057),\r\n    lineHeight: \"32px\",\r\n    fontSize: theme.typography.body2.fontSize,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { ListSubheader, List } from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst StyledList = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List\r\n      {...props}\r\n      subheader={\r\n        props.subheader ? (\r\n          <ListSubheader\r\n            component=\"div\"\r\n            className={classes.StyledList_subheader}\r\n          >\r\n            {props.subheader}\r\n          </ListSubheader>\r\n        ) : null\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default StyledList;\r\n","import React from \"react\";\r\nimport { IconButton, InputBase } from \"@material-ui/core\";\r\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\r\nimport { useDebouncedCallback } from \"use-debounce\";\r\nimport { useStyles } from \"./styles\";\r\nimport MenuDrawer from \"components/MenuDrawer\";\r\nimport UserItem from \"components/UserItem\";\r\nimport DirectItem from \"components/DirectItem\";\r\nimport StyledList from \"components/StylesList\";\r\n\r\nconst Sidebar = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  const renderDirectsList = (data, addProps = {}) => {\r\n    return data ? (\r\n      <StyledList disablePadding>\r\n        {data.map((direct) => (\r\n          <DirectItem\r\n            key={direct.id}\r\n            direct={direct}\r\n            user={direct.user}\r\n            typing={\r\n              props.typings[direct.id] === direct.user.username\r\n                ? props.typings[direct.id]\r\n                : \"\"\r\n            }\r\n            link={`/me?p=${direct.user.id}`}\r\n            selected={direct.user.id === props.chatId}\r\n            onDelete={props.onDeleteDirect}\r\n            subscribtions={props.directSubscriptions}\r\n            {...addProps}\r\n          />\r\n        ))}\r\n      </StyledList>\r\n    ) : null;\r\n  };\r\n\r\n  const renderDirects = () => {\r\n    if (search.length) {\r\n      let directsMatch = [];\r\n\r\n      if (props.directs && props.directs.length) {\r\n        directsMatch = props.directs.filter(({ user }) =>\r\n          user.username.startsWith(search)\r\n        );\r\n      }\r\n\r\n      const directsMatchIds = directsMatch.map(({ user }) => user.id);\r\n\r\n      return (\r\n        <>\r\n          {renderDirectsList(directsMatch, {\r\n            selected: false,\r\n            onClick: () => setSearch(\"\"),\r\n          })}\r\n          {props.users && props.users.length ? (\r\n            <StyledList subheader=\"Global search\" disablePadding>\r\n              {props.users.map(\r\n                (user) =>\r\n                  !directsMatchIds.includes(user.id) && (\r\n                    <UserItem\r\n                      key={user.id}\r\n                      user={user}\r\n                      link={`/me?p=${user.id}`}\r\n                      onClick={() => setSearch(\"\")}\r\n                    />\r\n                  )\r\n              )}\r\n            </StyledList>\r\n          ) : null}\r\n        </>\r\n      );\r\n    }\r\n\r\n    return renderDirectsList(props.directs);\r\n  };\r\n\r\n  const [debounce] = useDebouncedCallback(\r\n    (value) => props.onSearch(value),\r\n    200\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value);\r\n    debounce(e.target.value);\r\n  };\r\n\r\n  const handleMenuToggle = () => setOpen(!open);\r\n\r\n  return (\r\n    <div className={classes.Sidebar}>\r\n      <MenuDrawer\r\n        open={open}\r\n        user={props.currentUser}\r\n        onClose={handleMenuToggle}\r\n        onLogout={props.onLogout}\r\n      />\r\n      <div className={classes.Sidebar_main}>\r\n        <div className={classes.Sidebar_header}>\r\n          <IconButton edge=\"start\" color=\"inherit\" onClick={handleMenuToggle}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <InputBase\r\n            fullWidth\r\n            size=\"small\"\r\n            value={search}\r\n            placeholder=\"Search\"\r\n            className={classes.Sidebar_searchbar}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className={classes.Sidebar_content}>\r\n          {renderDirects(props.directs)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport {\r\n  DIRECTS,\r\n  DIRECT_LAST_MESSAGE,\r\n  CURRENT_USER,\r\n  USERS,\r\n} from \"graphql/queries\";\r\nimport { DELETE_DIRECT, LOGOUT } from \"graphql/mutations\";\r\nimport {\r\n  NEW_MESSAGE_SUBSCRIPTION,\r\n  NEW_DIRECT_SUBSCRIPTION,\r\n  DELETE_MESSAGE_SUBSCRIPTION,\r\n  DELETE_DIRECT_SUBSCRIPTION,\r\n  ONLINE_USER_SUBSCRIPTION,\r\n  USER_TYPING_SUBSCRIPTION,\r\n} from \"graphql/subscriptions\";\r\nimport { pasreQuery } from \"utils/index\";\r\nimport Sidebar from \"components/Sidebar\";\r\nimport { get } from \"lodash-es\";\r\nimport { sortByLastMessage, authTokens } from \"utils/index\";\r\nimport { useQuery, useLazyQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { wsLink } from \"client\";\r\n\r\nconst SidebarContainer = (props) => {\r\n  const { data: user } = useQuery(CURRENT_USER);\r\n  const {\r\n    data: directs,\r\n    subscribeToMore: subscribeToMoreDirects,\r\n    client,\r\n  } = useQuery(DIRECTS);\r\n  const [searchUsers, { data: users }] = useLazyQuery(USERS);\r\n  const [deleteDirect] = useMutation(DELETE_DIRECT);\r\n  const [logout] = useMutation(LOGOUT, {\r\n    onCompleted: async () => {\r\n      wsLink.subscriptionClient.client.onclose();\r\n      client.resetStore();\r\n      authTokens.remove();\r\n      props.history.push(\"/login\");\r\n    },\r\n  });\r\n\r\n  const [typings, setTypings] = React.useState({});\r\n  const currentUser = get(user, \"currentUser\", {});\r\n  const { p: chatId } = pasreQuery(props.location);\r\n\r\n  React.useEffect(() => {\r\n    wsLink.subscriptionClient.tryReconnect();\r\n  }, []);\r\n\r\n  const directSubscriptions = [\r\n    (chatId) => {\r\n      return subscribeToMoreDirects({\r\n        document: USER_TYPING_SUBSCRIPTION,\r\n        variables: { chatId },\r\n        updateQuery: (prev, { subscriptionData }) => {\r\n          if (!subscriptionData.data) return prev;\r\n          const { userTyping } = subscriptionData.data;\r\n          setTypings({ ...typings, [chatId]: userTyping });\r\n          return prev;\r\n        },\r\n      });\r\n    },\r\n    (chatId) => {\r\n      return subscribeToMoreDirects({\r\n        document: NEW_MESSAGE_SUBSCRIPTION,\r\n        variables: { chatId },\r\n        updateQuery: (prev, { subscriptionData }) => {\r\n          if (!subscriptionData.data) return prev;\r\n          const { newMessage } = subscriptionData.data;\r\n          const unread = newMessage.userId !== currentUser.id ? 1 : 0;\r\n\r\n          const directs = prev.directs.map((direct) => {\r\n            if (direct.id === chatId) {\r\n              return {\r\n                ...direct,\r\n                lastMessage: newMessage,\r\n                unread: direct.unread + unread,\r\n              };\r\n            }\r\n            return direct;\r\n          });\r\n\r\n          return { directs };\r\n        },\r\n      });\r\n    },\r\n    (chatId) => {\r\n      return subscribeToMoreDirects({\r\n        document: DELETE_MESSAGE_SUBSCRIPTION,\r\n        variables: { chatId },\r\n        updateQuery: async (prev, { subscriptionData }) => {\r\n          if (!subscriptionData.data) return prev;\r\n          const { deleteMessage } = subscriptionData.data;\r\n\r\n          return await client\r\n            .query({\r\n              query: DIRECT_LAST_MESSAGE,\r\n              variables: { chatId },\r\n              fetchPolicy: \"no-cache\",\r\n            })\r\n            .then(({ data }) => {\r\n              const directs = prev.directs.map((direct) => {\r\n                const unread = deleteMessage.userId !== currentUser.id ? 1 : 0;\r\n\r\n                if (direct.lastMessage.id === deleteMessage.id) {\r\n                  return {\r\n                    ...direct,\r\n                    lastMessage: data.directLastMessage,\r\n                    unread: direct.unread - unread,\r\n                  };\r\n                }\r\n\r\n                return direct;\r\n              });\r\n\r\n              client.writeQuery({ query: DIRECTS, data: { directs } });\r\n\r\n              return { directs };\r\n            });\r\n        },\r\n      });\r\n    },\r\n  ];\r\n\r\n  const subscribtions = [\r\n    () => {\r\n      return subscribeToMoreDirects({\r\n        document: DELETE_DIRECT_SUBSCRIPTION,\r\n        updateQuery: async (prev, { subscriptionData }) => {\r\n          if (!subscriptionData.data) return prev;\r\n          const { deleteDirect } = subscriptionData.data;\r\n\r\n          const directs = prev.directs.filter(\r\n            ({ id }) => id !== deleteDirect.id\r\n          );\r\n\r\n          client.writeQuery({ query: DIRECTS, data: { directs } });\r\n\r\n          return { directs };\r\n        },\r\n      });\r\n    },\r\n    () => {\r\n      return subscribeToMoreDirects({\r\n        document: NEW_DIRECT_SUBSCRIPTION,\r\n        updateQuery: (prev, { subscriptionData }) => {\r\n          if (!subscriptionData.data) return prev;\r\n          const directs = prev.directs.concat(subscriptionData.data.newDirect);\r\n          return { directs };\r\n        },\r\n      });\r\n    },\r\n    () => {\r\n      return subscribeToMoreDirects({\r\n        document: ONLINE_USER_SUBSCRIPTION,\r\n      });\r\n    },\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribes = subscribtions.map((subscribe) => subscribe());\r\n    return () => unsubscribes.map((unsubscribe) => unsubscribe());\r\n  }, [subscribtions]);\r\n\r\n  const onSearch = (username) => searchUsers({ variables: { username } });\r\n\r\n  const onDeleteDirect = (id) => {\r\n    deleteDirect({ variables: { id } });\r\n  };\r\n\r\n  return (\r\n    <Sidebar\r\n      chatId={chatId}\r\n      typings={typings}\r\n      directs={get(directs, \"directs\", []).sort(sortByLastMessage)}\r\n      users={get(users, \"users\")}\r\n      currentUser={currentUser}\r\n      onLogout={logout}\r\n      onSearch={onSearch}\r\n      onDeleteDirect={onDeleteDirect}\r\n      directSubscriptions={directSubscriptions}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SidebarContainer;\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SidebarContainer from \"containers/SidebarContainer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    minHeight: \"100vh\",\r\n    maxHeight: \"100vh\",\r\n  },\r\n  contentShift: {\r\n    width: \"100%\",\r\n    background: theme.palette.background.paper,\r\n    minWidth: theme.props.sidebarMin,\r\n  },\r\n}));\r\n\r\nconst Layout = ({ children, ...props }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.container}>\r\n      <SidebarContainer {...props} />\r\n      <div className={classes.contentShift}>{children}</div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","import React from \"react\";\r\nimport { pasreQuery } from \"utils/index\";\r\nimport DirectChatContainer from \"containers/DirectChatContainer\";\r\nimport Layout from \"components/Layout\";\r\n\r\nconst Home = (props) => {\r\n  const { p } = pasreQuery(props.location);\r\n\r\n  return <Layout>{p ? <DirectChatContainer userId={p} /> : null}</Layout>;\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}