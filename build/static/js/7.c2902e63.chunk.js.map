{"version":3,"sources":["graphql/mutations.js","graphql/subscriptions.js","graphql/queries.js","components/Avatar/styles.js","components/Avatar/index.js","components/ChatWindow/styles.js","components/ChatWindow/index.js","components/ChatWindow/ChatInput.js","components/StyledChip/styles.js","components/StyledChip/index.js","components/Message/MessageMenu.js","components/Message/styles.js","components/Message/index.js","components/Fallback/styles.js","components/Fallback/index.js","components/Typing/styles.js","components/Typing/index.js","components/DirectChat/styles.js","components/DirectChat/index.js","containers/DirectChatContainer.js","hooks/index.js","components/Sidebar/styles.js","components/MenuDrawer/styles.js","components/MenuDrawer/index.js","components/UserItem/styles.js","components/UserItem/index.js","components/ChatItem/styles.js","components/ChatItem/index.js","components/DirectItem/DirectItemMenu.js","components/DirectItem/index.js","components/StylesList/styles.js","components/StylesList/index.js","components/Sidebar/index.js","containers/SidebarContainer.js","components/Layout/index.js","pages/Home/index.js"],"names":["REGISTER","gql","LOGIN","VERIFY_USER","CREATE_DIRECT","CREATE_MESSAGE","DELETE_MESSAGE","DELETE_DIRECT","READ_MESSAGE","LOGOUT","USER_TYPING","NEW_MESSAGE_SUBSCRIPTION","DELETE_MESSAGE_SUBSCRIPTION","DELETE_DIRECT_SUBSCRIPTION","NEW_DIRECT_SUBSCRIPTION","ONLINE_USER_SUBSCRIPTION","USER_TYPING_SUBSCRIPTION","USERS","CURRENT_USER","DIRECTS","CURRENT_DIRECT","DIRECT_LAST_MESSAGE","CHAT_MESSAGES","useStyles","makeStyles","theme","Avatar","fontSize","typography","body1","textTransform","color","palette","common","white","Avatar_small","width","height","StyledBadge","withStyles","badge","backgroundColor","boxShadow","background","paper","position","top","left","borderRadius","animation","border","content","transform","opacity","Badge","alt","src","online","props","classes","name","split","slice","map","x","join","overlap","anchorOrigin","vertical","horizontal","variant","invisible","className","cx","size","style","ChatWindow","maxHeight","ChatWindow_content","overflow","padding","spacing","action","selected","shape","display","ChatWindow_empty","alignItems","justifyContent","ChatWindow_input_wrapper","minHeight","body2","ChatWindow_input","chatWindowRef","React","useRef","useEffect","current","scrollTop","scrollHeight","offsetHeight","messages","length","send","handleUpdateView","onScroll","a","onLoadMoreMessages","hasMore","ref","renderMessages","withRouter","inputRef","useState","message","setMessage","focus","location","handleOnSubmit","trim","onSubmit","InputBase","fullWidth","multiline","rowsMax","value","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","placeholder","IconButton","onClick","handleOnClick","disabled","StyledChip","alignSelf","hover","Chip","MessageMenu","anchorEl","onClose","onDelete","onCopy","handleActions","callback","Menu","open","Boolean","MenuItem","dense","Message","maxWidth","bottom","wordWrap","overflowWrap","paddingBottom","minWidth","Message_content","margin","Message_content_receiver","Message_content_sender","Message_receiver","type","lighten","default","darken","borderBottom","borderLeft","Message_sender","secondary","main","getContrastText","right","borderRight","contextMenu","setContextMenu","isOwner","onContextMenu","currentTarget","Typography","text","formatDate","date","menuProps","navigator","clipboard","writeText","DirectFallback","Typing","marginRight","Typing_secondary","DirectChat","DirectChat_header","paddingLeft","paddingRight","divider","DirectChat_header_status","DirectChat_content","overflowY","DirectChat_messageWrapper","flexDirection","timeline","renderTimeline","reverse","setSend","handleCreateMessage","onCreateMessage","useCallback","idx","timeDiff","diffTime","createdAt","timelineChip","label","renderDiffTimeLabel","id","userId","user","onDeleteMessage","chatId","recipient","username","ListItem","ListItemText","primary","primaryTypographyProps","component","typingUser","lastSeen","secondaryTypographyProps","avatar","Divider","onTyping","DirectChatContainer","state","setstate","currentUser","useQuery","currentDirect","variables","useLazyQuery","chatMessages","chatMessagesData","useMutation","createDirect","createMessage","deleteMessage","deleteDirect","readMessage","userTyping","self","get","data","typing","setTyping","setUser","useDebouncedCallback","debounce","useTyping","unsubsribe","subscribeToMore","document","updateQuery","prev","subscriptionData","newMessage","error","subscribeToNewMessage","newDirect","direct","subscribeToNewDirect","filter","subscribeToDeleteMessage","subscribeToDeleteDirect","subscribeToUserTyping","onReadMessage","fetchMore","offset","fetchMoreResult","Sidebar","sidebar","sidebarMin","Sidebar_main","Sidebar_header","Sidebar_searchbar","marginLeft","Sidebar_content","MenuDrawer","zIndex","tooltip","backgroundImage","MenuDrawer_listItem","dark","MenuDrawer_backdrop","Settings","Slide","in","direction","List","email","button","onLogout","align","Backdrop","UserItem_primary","ellipsis","UserItem_secondary","UserItem","to","link","Link","ListItemAvatar","ChatItem_badge_root","ChatItem_badge_badge","ChatItem_primary","ChatItem_secondary","ChatItem_primaryText","ChatItem_secondaryText","ChatItem","unread","max","root","badgeContent","DirectItemMenu","DirectItem","unsubscribe","lastMessage","StyledList","StyledList_subheader","lineHeight","subheader","ListSubheader","setOpen","search","setSearch","renderDirectsList","addProps","disablePadding","typings","onDeleteDirect","onSearch","handleMenuToggle","edge","directsMatch","directs","startsWith","directsMatchIds","users","includes","renderDirects","SidebarContainer","subscribeToMoreDirects","client","searchUsers","onCompleted","wsLink","subscriptionClient","onclose","store","dispatch","dispatchLogout","history","push","logout","pasreQuery","p","setTypings","tryReconnect","writeQuery","query","concat","sort","sortByLastMessage","fetchPolicy","then","directLastMessage","container","contentShift","children","Container","Home"],"mappings":"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","file":"static/js/7.c2902e63.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\r\n\r\nexport const REGISTER = gql`\r\n  mutation register($username: String!, $email: String!, $password: String!) {\r\n    register(username: $username, email: $email, password: $password)\r\n  }\r\n`;\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VERIFY_USER = gql`\r\n  mutation verifyUser($secret: String!) {\r\n    verifyUser(secret: $secret) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_DIRECT = gql`\r\n  mutation createDirect($userId: Int!, $text: String) {\r\n    createDirect(userId: $userId, text: $text) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_MESSAGE = gql`\r\n  mutation createMessage($chatId: Int, $text: String!) {\r\n    createMessage(chatId: $chatId, text: $text)\r\n  }\r\n`;\r\n\r\nexport const DELETE_MESSAGE = gql`\r\n  mutation deleteMessage($id: Int!) {\r\n    deleteMessage(id: $id)\r\n  }\r\n`;\r\n\r\nexport const DELETE_DIRECT = gql`\r\n  mutation deleteDirect($id: Int!) {\r\n    deleteDirect(id: $id)\r\n  }\r\n`;\r\n\r\nexport const READ_MESSAGE = gql`\r\n  mutation readMessage($id: Int!) {\r\n    readMessage(id: $id)\r\n  }\r\n`;\r\n\r\nexport const LOGOUT = gql`\r\n  mutation logout {\r\n    logout\r\n  }\r\n`;\r\n\r\nexport const USER_TYPING = gql`\r\n  mutation userTyping($chatId: Int!, $username: String) {\r\n    userTyping(chatId: $chatId, username: $username)\r\n  }\r\n`;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const NEW_MESSAGE_SUBSCRIPTION = gql`\r\n  subscription newMessage($chatId: Int!) {\r\n    newMessage(chatId: $chatId) {\r\n      id\r\n      text\r\n      userId\r\n      unread\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_MESSAGE_SUBSCRIPTION = gql`\r\n  subscription deleteMessage($chatId: Int!) {\r\n    deleteMessage(chatId: $chatId) {\r\n      id\r\n      userId\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_DIRECT_SUBSCRIPTION = gql`\r\n  subscription deleteDirect {\r\n    deleteDirect {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NEW_DIRECT_SUBSCRIPTION = gql`\r\n  subscription newDirect {\r\n    newDirect {\r\n      id\r\n      user {\r\n        id\r\n        email\r\n        avatar\r\n        online\r\n        username\r\n        lastSeen\r\n        createdAt\r\n      }\r\n      lastMessage {\r\n        id\r\n        text\r\n        userId\r\n        unread\r\n        createdAt\r\n      }\r\n      unread\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ONLINE_USER_SUBSCRIPTION = gql`\r\n  subscription onlineUser {\r\n    onlineUser {\r\n      id\r\n      online\r\n      lastSeen\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USER_TYPING_SUBSCRIPTION = gql`\r\n  subscription userTyping($chatId: Int!) {\r\n    userTyping(chatId: $chatId)\r\n  }\r\n`;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const USERS = gql`\r\n  query users($username: String) {\r\n    users(username: $username) {\r\n      id\r\n      email\r\n      avatar\r\n      online\r\n      username\r\n      lastSeen\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CURRENT_USER = gql`\r\n  query currentUser {\r\n    currentUser {\r\n      id\r\n      email\r\n      avatar\r\n      online\r\n      username\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DIRECTS = gql`\r\n  query directs {\r\n    directs {\r\n      id\r\n      user {\r\n        id\r\n        email\r\n        avatar\r\n        online\r\n        username\r\n        lastSeen\r\n        createdAt\r\n      }\r\n      lastMessage {\r\n        id\r\n        text\r\n        userId\r\n        createdAt\r\n      }\r\n      unread\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CURRENT_DIRECT = gql`\r\n  query currentDirect($userId: Int!) {\r\n    currentDirect(userId: $userId) {\r\n      direct {\r\n        id\r\n      }\r\n      recipient {\r\n        id\r\n        email\r\n        avatar\r\n        online\r\n        username\r\n        lastSeen\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DIRECT_LAST_MESSAGE = gql`\r\n  query directLastMessage($chatId: Int!) {\r\n    directLastMessage(chatId: $chatId) {\r\n      id\r\n      text\r\n      userId\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CHAT_MESSAGES = gql`\r\n  query getChatMessages($chatId: Int!, $offset: Int) {\r\n    messages(chatId: $chatId, offset: $offset) {\r\n      id\r\n      text\r\n      userId\r\n      unread\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  Avatar: {\r\n    fontSize: theme.typography.body1.fontSize,\r\n    // width: 44,\r\n    // height: 44,\r\n    textTransform: \"uppercase\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  Avatar_small: {\r\n    width: 30,\r\n    height: 30,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { Avatar as MuiAvarat, Badge } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { useStyles } from \"./styles\";\r\nimport cx from \"classnames\";\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"$ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst Avatar = ({ alt = \"\", src, online, ...props }) => {\r\n  const classes = useStyles();\r\n  const name = alt\r\n    .split(\" \")\r\n    .slice(0, 2)\r\n    .map((x) => x[0])\r\n    .join(\"\");\r\n\r\n  return (\r\n    <StyledBadge\r\n      overlap=\"circle\"\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n      variant=\"dot\"\r\n      invisible={!online}\r\n    >\r\n      <MuiAvarat\r\n        src={src}\r\n        // alt={alt}\r\n        className={cx(classes.Avatar, {\r\n          [classes[`Avatar_${props.size}`]]: props.size,\r\n        })}\r\n        style={{ background: src }}\r\n      >\r\n        {name}\r\n      </MuiAvarat>\r\n    </StyledBadge>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  ChatWindow: {\r\n    height: \"100%\",\r\n    maxHeight: \"calc(100% - 64px)\",\r\n  },\r\n  ChatWindow_content: {\r\n    height: \"100%\",\r\n    overflow: \"auto\",\r\n    padding: `${theme.spacing(3)}px`,\r\n    \"&::-webkit-scrollbar\": {\r\n      width: 5,\r\n      background: \"transparent\",\r\n      \"&-thumb\": {\r\n        background: theme.palette.action.selected,\r\n        borderRadius: theme.shape.borderRadius * 3,\r\n        display: \"none\",\r\n      },\r\n    },\r\n    \"&:hover::-webkit-scrollbar-thumb\": { display: \"block\" },\r\n  },\r\n  ChatWindow_empty: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  ChatWindow_input_wrapper: {\r\n    minHeight: 64,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    \"& .MuiInputBase-root\": {\r\n      fontSize: theme.typography.body2.fontSize,\r\n    },\r\n  },\r\n  ChatWindow_input: {\r\n    height: \"100%\",\r\n    padding: `${theme.spacing(1)}px ${theme.spacing(1)}px ${theme.spacing(\r\n      0.5\r\n    )}px ${theme.spacing(2)}px`,\r\n    \"& .MuiInputBase-inputMultiline\": {\r\n      \"&::-webkit-scrollbar\": { display: \"none\" },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst ChatWindow = (props) => {\r\n  const classes = useStyles();\r\n  const chatWindowRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    const handleUpdateView = () => {\r\n      const { scrollTop, scrollHeight, offsetHeight } = chatWindowRef.current;\r\n      if (props.messages && props.messages.length <= 20) {\r\n        chatWindowRef.current.scrollTop = scrollHeight;\r\n      } else {\r\n        if (!(scrollTop + offsetHeight + 300 < scrollHeight) && !props.send) {\r\n          chatWindowRef.current.scrollTop = scrollHeight;\r\n        }\r\n\r\n        if (props.send) {\r\n          chatWindowRef.current.scrollTop = scrollHeight;\r\n        }\r\n      }\r\n    };\r\n\r\n    handleUpdateView();\r\n  }, [props.messages]);\r\n\r\n  const onScroll = async () => {\r\n    if (chatWindowRef.current.scrollTop < 200) {\r\n      await props.onLoadMoreMessages();\r\n      if (props.hasMore) {\r\n        chatWindowRef.current.scrollTop = chatWindowRef.current.scrollTop + 10;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.ChatWindow}>\r\n      <div\r\n        ref={chatWindowRef}\r\n        onScroll={onScroll}\r\n        className={classes.ChatWindow_content}\r\n      >\r\n        {/* {props.children} */}\r\n        {props.renderMessages(props.messages)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n","import React from \"react\";\r\nimport { InputBase, IconButton } from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport useStyles from \"./styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ChatInput = (props) => {\r\n  const classes = useStyles();\r\n  const inputRef = React.useRef();\r\n  const [message, setMessage] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n\r\n    setMessage(\"\");\r\n  }, [props.location]);\r\n\r\n  const handleOnSubmit = () => {\r\n    if (message.trim().length) {\r\n      props.onSubmit(message);\r\n    }\r\n\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const handleOnClick = (inputRef) => () => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n    handleOnSubmit();\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\" && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleOnSubmit();\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    props.onChange();\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.ChatWindow_input_wrapper}>\r\n      <InputBase\r\n        fullWidth\r\n        multiline\r\n        rowsMax={12}\r\n        inputRef={inputRef}\r\n        value={message}\r\n        onChange={handleOnChange}\r\n        onKeyPress={handleKeyPress}\r\n        placeholder=\"Write a message...\"\r\n        className={classes.ChatWindow_input}\r\n      />\r\n      <IconButton\r\n        onClick={handleOnClick(inputRef)}\r\n        disabled={!message.trim().length}\r\n      >\r\n        <SendIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(ChatInput);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  StyledChip: {\r\n    // background: \"none\",\r\n    alignSelf: \"center\",\r\n    background: theme.palette.action.hover,\r\n\r\n    \"& .MuiChip-label\": {\r\n      // borderRadius: \"inherit\",\r\n    },\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { Chip } from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst StyledChip = (props) => {\r\n  const classes = useStyles();\r\n  return <Chip className={classes.StyledChip} size=\"small\" {...props} />;\r\n};\r\n\r\nexport default StyledChip;\r\n","import React from \"react\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\n\r\nconst MessageMenu = ({ anchorEl, onClose, onDelete, onCopy }) => {\r\n  const handleActions = (callback) => () => {\r\n    callback();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      // keepMounted\r\n      // anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n      anchorEl={anchorEl}\r\n      open={Boolean(anchorEl)}\r\n      onClose={onClose}\r\n    >\r\n      <MenuItem dense onClick={handleActions(onDelete)}>\r\n        Delete Message\r\n      </MenuItem>\r\n      <MenuItem dense onClick={handleActions(onCopy)}>\r\n        Copy Text\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MessageMenu;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  Message: {\r\n    display: \"flex\",\r\n    position: \"relative\",\r\n    maxWidth: \"70%\",\r\n    padding: `${theme.spacing(1)}px ${theme.spacing(1.5)}px ${theme.spacing(\r\n      0.5\r\n    )}px`,\r\n    borderRadius: theme.shape.borderRadius * 3,\r\n    \"&:before\": {\r\n      position: \"absolute\",\r\n      bottom: -1,\r\n      width: 15,\r\n      height: 20,\r\n      content: \"''\",\r\n    },\r\n    \"& p\": {\r\n      alignSelf: \"flex-end\",\r\n      wordWrap: \"break-word\",\r\n      overflowWrap: \"break-word\",\r\n      paddingBottom: theme.spacing(2),\r\n      minWidth: 20,\r\n    },\r\n    \"& span\": {\r\n      alignSelf: \"flex-end\",\r\n      opacity: 0.54,\r\n    },\r\n  },\r\n  Message_content: {\r\n    display: \"flex\",\r\n    margin: `${theme.spacing(1)}px 0`,\r\n  },\r\n  Message_content_receiver: {\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  Message_content_sender: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  Message_receiver: {\r\n    background:\r\n      theme.palette.type === \"dark\"\r\n        ? theme.lighten(theme.palette.background.default, 0.235)\r\n        : theme.darken(theme.palette.background.default, 0.057),\r\n    \"&:before\": {\r\n      left: -10,\r\n      transform: \"rotate(-15deg)\",\r\n      borderBottom: `15px solid ${\r\n        theme.palette.type === \"dark\"\r\n          ? theme.lighten(theme.palette.background.default, 0.235)\r\n          : theme.darken(theme.palette.background.default, 0.057)\r\n      }`,\r\n      borderLeft: \"15px solid transparent\",\r\n    },\r\n  },\r\n  Message_sender: {\r\n    background: theme.palette.secondary.main,\r\n    color: theme.palette.getContrastText(theme.palette.secondary.main),\r\n    \"&:before\": {\r\n      right: -10,\r\n      transform: \"rotate(15deg)\",\r\n      borderBottom: `15px solid ${theme.palette.secondary.main}`,\r\n      borderRight: \"15px solid transparent\",\r\n    },\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\"; // Link\r\nimport cx from \"classnames\";\r\nimport { formatDate } from \"utils/index\";\r\nimport MessageMenu from \"./MessageMenu\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst Message = (props) => {\r\n  const classes = useStyles();\r\n  const [contextMenu, setContextMenu] = React.useState(null);\r\n\r\n  const handleClose = () => setContextMenu(null);\r\n\r\n  const handleOpen = (e) => {\r\n    e.preventDefault();\r\n    setContextMenu(e.currentTarget);\r\n  };\r\n\r\n  const handleCopyMessage = () => {\r\n    navigator.clipboard.writeText(props.text);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cx(classes.Message_content, {\r\n        [classes.Message_content_sender]: props.isOwner,\r\n        [classes.Message_content_receiver]: !props.isOwner,\r\n      })}\r\n    >\r\n      <div\r\n        onContextMenu={handleOpen}\r\n        className={cx(classes.Message, {\r\n          [classes.Message_sender]: props.isOwner,\r\n          [classes.Message_receiver]: !props.isOwner,\r\n        })}\r\n      >\r\n        <Typography variant=\"body2\">\r\n          {props.text}\r\n          {/* <Link href=\"#\" color=\"inherit\" underline=\"always\">\r\n            some@gmail.com\r\n          </Link> */}\r\n        </Typography>\r\n        <Typography variant=\"caption\">{formatDate(props.date)}</Typography>\r\n      </div>\r\n      <MessageMenu\r\n        anchorEl={contextMenu}\r\n        onClose={handleClose}\r\n        {...props.menuProps}\r\n        onCopy={handleCopyMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  DirectFallback: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nexport const DirectFallback = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.DirectFallback}>\r\n      <Typography variant=\"body2\">No messages here yet...</Typography>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  Typing: {\r\n    display: \"inline-flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    \"& span\": {\r\n      width: 5,\r\n      height: 5,\r\n      marginRight: 4,\r\n      background: theme.palette.text.secondary,\r\n      borderRadius: \"50%\",\r\n      \"&:nth-child(1)\": {\r\n        animation: \"$animation 1s ease-in-out infinite 0s\",\r\n      },\r\n      \"&:nth-child(2)\": {\r\n        animation: \"$animation 1s ease-in-out infinite 0.2s\",\r\n      },\r\n      \"&:nth-child(3)\": {\r\n        animation: \"$animation 1s ease-in-out infinite 0.4s\",\r\n      },\r\n    },\r\n  },\r\n  Typing_secondary: {\r\n    color: theme.palette.secondary[200],\r\n    \"& span\": {\r\n      background: theme.palette.secondary[200],\r\n    },\r\n  },\r\n  \"@keyframes animation\": {\r\n    \"0%, 100%\": {\r\n      transform: \"scale(1)\",\r\n      opacity: 1,\r\n    },\r\n    \"50%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 0.5,\r\n    },\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport cx from \"classnames\";\r\n\r\nconst Typing = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <span\r\n      className={cx(classes.Typing, {\r\n        [classes.Typing_secondary]: props.variant === \"secondary\",\r\n      })}\r\n    >\r\n      <span />\r\n      <span />\r\n      <span />\r\n      typing\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Typing;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  DirectChat: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n    // borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  DirectChat_header: {\r\n    minHeight: 64,\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  DirectChat_header_status: {\r\n    color: theme.palette.secondary[200],\r\n  },\r\n  DirectChat_content: {\r\n    height: \"100%\",\r\n    maxHeight: \"calc(100% - 64px)\",\r\n    overflowY: \"scroll\",\r\n    position: \"relative\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n    // borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  DirectChat_messageWrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { ListItem, ListItemText, Divider } from \"@material-ui/core\";\r\nimport {\r\n  formatDate,\r\n  diffTime,\r\n  renderDiffTimeLabel,\r\n  renderTimeline,\r\n} from \"utils/index\";\r\nimport Avatar from \"components/Avatar\";\r\nimport ChatWindow from \"components/ChatWindow\";\r\nimport ChatInput from \"components/ChatWindow/ChatInput\";\r\nimport StyledChip from \"components/StyledChip\";\r\nimport Message from \"components/Message\";\r\nimport { DirectFallback } from \"components/Fallback\";\r\nimport Typing from \"components/Typing\";\r\nimport { useStyles } from \"./styles\";\r\nimport cx from \"classnames\";\r\n\r\n// import VisibilitySenson from \"react-visibility-sensor\";\r\n// <VisibilitySenson\r\n//   offset={{ top: 32, bottom: 32 }}\r\n//   onChange={handleOnReadMessage}\r\n// >\r\n\r\n// const handleOnReadMessage = (isVisible) => {\r\n//   console.log(isVisible, message.text, message);\r\n//   console.log(isVisible && message.unread);\r\n//   if (isVisible && message.unread) props.onReadMessage(message.id);\r\n// };\r\n\r\nconst DirectChat = (props) => {\r\n  const classes = useStyles();\r\n  const timeline = renderTimeline([...props.messages].reverse());\r\n  const [send, setSend] = React.useState(false);\r\n\r\n  const handleChange = () => {\r\n    if (props.chatId) {\r\n      props.onTyping();\r\n    }\r\n  };\r\n\r\n  const handleCreateMessage = async (message) => {\r\n    setSend(true);\r\n    await props.onCreateMessage(message);\r\n    setSend(false);\r\n  };\r\n\r\n  const renderStatus = () => {\r\n    if (props.typingUser) return <Typing variant=\"secondary\" />;\r\n    if (props.recipient.online) return \"online\";\r\n    return `last seen at ${formatDate(props.recipient.lastSeen)}`;\r\n  };\r\n\r\n  const renderMessages = React.useCallback(\r\n    (messages) =>\r\n      messages.length ? (\r\n        [...messages].reverse().map((message, idx) => {\r\n          const timeDiff = diffTime(message.createdAt, \"days\");\r\n\r\n          const timelineChip = idx === timeline[timeDiff] && (\r\n            <StyledChip label={renderDiffTimeLabel(message.createdAt)} />\r\n          );\r\n\r\n          return (\r\n            <div key={message.id} className={classes.DirectChat_messageWrapper}>\r\n              {timelineChip}\r\n              <Message\r\n                text={message.text}\r\n                date={message.createdAt}\r\n                isOwner={message.userId === props.user.id}\r\n                menuProps={{\r\n                  onDelete: props.onDeleteMessage(message.id),\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <DirectFallback />\r\n      ),\r\n    [props.chatId, props.user.id, props.messages, props.onDeleteMessage]\r\n  );\r\n\r\n  return (\r\n    <div className={classes.DirectChat}>\r\n      <div className={classes.DirectChat_header}>\r\n        {props.recipient.username && (\r\n          <ListItem dense>\r\n            <ListItemText\r\n              primary={props.recipient.username}\r\n              primaryTypographyProps={{ component: \"div\" }}\r\n              secondary={renderStatus()}\r\n              secondaryTypographyProps={{\r\n                variant: \"caption\",\r\n                className: cx({\r\n                  [classes.DirectChat_header_status]: props.recipient.online,\r\n                }),\r\n              }}\r\n            />\r\n            <Avatar\r\n              src={props.recipient.avatar}\r\n              alt={props.recipient.username}\r\n              online={props.recipient.online}\r\n            />\r\n          </ListItem>\r\n        )}\r\n      </div>\r\n      <div className={classes.DirectChat_content}>\r\n        <ChatWindow\r\n          send={send}\r\n          hasMore={props.hasMore}\r\n          messages={props.messages}\r\n          renderMessages={renderMessages}\r\n          onLoadMoreMessages={props.onLoadMoreMessages}\r\n        />\r\n        <Divider />\r\n        <ChatInput onChange={handleChange} onSubmit={handleCreateMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectChat;\r\n","import React from \"react\";\r\nimport {\r\n  NEW_MESSAGE_SUBSCRIPTION,\r\n  NEW_DIRECT_SUBSCRIPTION,\r\n  DELETE_MESSAGE_SUBSCRIPTION,\r\n  DELETE_DIRECT_SUBSCRIPTION,\r\n  USER_TYPING_SUBSCRIPTION,\r\n} from \"graphql/subscriptions\";\r\nimport { CURRENT_USER, CURRENT_DIRECT, CHAT_MESSAGES } from \"graphql/queries\";\r\nimport {\r\n  CREATE_DIRECT,\r\n  CREATE_MESSAGE,\r\n  DELETE_MESSAGE,\r\n  DELETE_DIRECT,\r\n  READ_MESSAGE,\r\n  USER_TYPING,\r\n} from \"graphql/mutations\";\r\nimport { get } from \"lodash-es\";\r\nimport DirectChat from \"components/DirectChat\";\r\nimport { useQuery, useLazyQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { useTyping } from \"hooks/index\";\r\n\r\nconst DirectChatContainer = ({ userId }) => {\r\n  const [state, setstate] = React.useState({\r\n    hasMore: true,\r\n  });\r\n\r\n  const currentUser = useQuery(CURRENT_USER);\r\n  const currentDirect = useQuery(CURRENT_DIRECT, {\r\n    variables: { userId },\r\n  });\r\n  const [chatMessages, chatMessagesData] = useLazyQuery(CHAT_MESSAGES, {\r\n    // fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  const [createDirect] = useMutation(CREATE_DIRECT);\r\n  const [createMessage] = useMutation(CREATE_MESSAGE);\r\n  const [deleteMessage] = useMutation(DELETE_MESSAGE);\r\n  const [deleteDirect] = useMutation(DELETE_DIRECT);\r\n  const [readMessage] = useMutation(READ_MESSAGE);\r\n  const [userTyping] = useMutation(USER_TYPING);\r\n\r\n  const self = get(currentUser, \"data.currentUser\", {});\r\n  const recipient = get(currentDirect, \"data.currentDirect.recipient\", {});\r\n  const chatId = get(currentDirect, \"data.currentDirect.direct.id\");\r\n  const messages = chatId ? get(chatMessagesData, \"data.messages\") : null;\r\n\r\n  const [typingUser, onTyping] = useTyping(\r\n    { chatId, username: self.username },\r\n    (variables) => userTyping({ variables })\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (chatId && userId) {\r\n      chatMessages({ variables: { chatId } });\r\n    }\r\n  }, [userId, chatId, chatMessages]);\r\n\r\n  const loadMoreMessages = () => {\r\n    if (chatMessagesData.data && chatId && state.hasMore) {\r\n      chatMessagesData.fetchMore({\r\n        variables: { chatId, offset: messages.length },\r\n        updateQuery: (prev, { fetchMoreResult }) => {\r\n          const limit = 20;\r\n          if (!fetchMoreResult) return prev;\r\n\r\n          if (fetchMoreResult.messages.length < limit) {\r\n            setstate({ hasMore: false });\r\n          }\r\n\r\n          return {\r\n            messages: [...prev.messages, ...fetchMoreResult.messages],\r\n          };\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const subscribeToNewMessage = () => {\r\n      try {\r\n        return chatMessagesData.subscribeToMore({\r\n          document: NEW_MESSAGE_SUBSCRIPTION,\r\n          variables: { chatId },\r\n          updateQuery: (prev, { subscriptionData }) => {\r\n            if (!subscriptionData.data) return prev;\r\n            const { newMessage } = subscriptionData.data;\r\n\r\n            return { messages: [newMessage, ...prev.messages] };\r\n          },\r\n        });\r\n      } catch (error) {\r\n        return () => {};\r\n      }\r\n    };\r\n\r\n    const unsubsribe = subscribeToNewMessage();\r\n    return () => unsubsribe();\r\n  }, [chatMessagesData.data, chatId]);\r\n\r\n  React.useEffect(() => {\r\n    const subscribeToNewDirect = () => {\r\n      try {\r\n        return currentDirect.subscribeToMore({\r\n          document: NEW_DIRECT_SUBSCRIPTION,\r\n          updateQuery: (prev, { subscriptionData }) => {\r\n            if (!subscriptionData.data) return prev;\r\n            const { newDirect } = subscriptionData.data;\r\n\r\n            return {\r\n              currentDirect: { ...prev.currentDirect, direct: newDirect },\r\n            };\r\n          },\r\n        });\r\n      } catch (error) {\r\n        return () => {};\r\n      }\r\n    };\r\n\r\n    const unsubsribe = subscribeToNewDirect();\r\n    return () => unsubsribe();\r\n  }, [currentDirect]);\r\n\r\n  React.useEffect(() => {\r\n    const subscribeToDeleteMessage = () => {\r\n      try {\r\n        return chatMessagesData.subscribeToMore({\r\n          document: DELETE_MESSAGE_SUBSCRIPTION,\r\n          variables: { chatId },\r\n          updateQuery: (prev, { subscriptionData }) => {\r\n            if (!subscriptionData.data) return prev;\r\n            const { deleteMessage } = subscriptionData.data;\r\n\r\n            const messages = prev.messages.filter(\r\n              ({ id }) => id !== deleteMessage.id\r\n            );\r\n\r\n            return { messages };\r\n          },\r\n        });\r\n      } catch (error) {\r\n        return () => {};\r\n      }\r\n    };\r\n\r\n    const unsubsribe = subscribeToDeleteMessage();\r\n    return () => unsubsribe();\r\n  }, [chatMessagesData.data, chatId]);\r\n\r\n  React.useEffect(() => {\r\n    const subscribeToDeleteDirect = () => {\r\n      try {\r\n        return currentDirect.subscribeToMore({\r\n          document: DELETE_DIRECT_SUBSCRIPTION,\r\n          variables: { chatId },\r\n          updateQuery: (prev, { subscriptionData }) => {\r\n            if (!subscriptionData.data) return prev;\r\n            const { deleteDirect } = subscriptionData.data;\r\n\r\n            if (deleteDirect.id === chatId) {\r\n              return { currentDirect: { ...prev.currentDirect, direct: null } };\r\n            }\r\n\r\n            return prev;\r\n          },\r\n        });\r\n      } catch (error) {\r\n        return () => {};\r\n      }\r\n    };\r\n\r\n    const unsubsribe = subscribeToDeleteDirect();\r\n    return () => unsubsribe();\r\n  }, [currentDirect, chatId]);\r\n\r\n  React.useEffect(() => {\r\n    const subscribeToUserTyping = () => {\r\n      try {\r\n        return currentDirect.subscribeToMore({\r\n          document: USER_TYPING_SUBSCRIPTION,\r\n          variables: { chatId },\r\n          updateQuery: (prev, { subscriptionData }) => {\r\n            if (!subscriptionData.data) return prev;\r\n            const { userTyping } = subscriptionData.data;\r\n\r\n            typingUser.setUser(userTyping);\r\n\r\n            return prev;\r\n          },\r\n        });\r\n      } catch (error) {\r\n        return () => {};\r\n      }\r\n    };\r\n\r\n    const unsubsribe = subscribeToUserTyping();\r\n    return () => unsubsribe();\r\n  }, [currentDirect, chatId]);\r\n\r\n  const onCreateMessage = async (text) => {\r\n    if (!chatId) {\r\n      await createDirect({ variables: { text, userId: recipient.id } });\r\n    } else {\r\n      await createMessage({ variables: { text, chatId } });\r\n      await userTyping({ variables: { chatId, username: \"\" } });\r\n    }\r\n  };\r\n\r\n  const onDeleteMessage = (id) => async () => {\r\n    if (messages && messages.length === 1) {\r\n      await deleteDirect({ variables: { id: chatId } });\r\n    } else {\r\n      await deleteMessage({ variables: { id } });\r\n    }\r\n  };\r\n\r\n  const onReadMessage = (id) => readMessage({ variables: { id } });\r\n\r\n  return (\r\n    <DirectChat\r\n      user={self}\r\n      chatId={chatId}\r\n      recipient={recipient || {}}\r\n      hasMore={state.hasMore}\r\n      messages={messages || []}\r\n      typingUser={typingUser.user === self.username ? \"\" : typingUser.user}\r\n      onTyping={onTyping}\r\n      onCreateMessage={onCreateMessage}\r\n      onDeleteMessage={onDeleteMessage}\r\n      onReadMessage={onReadMessage}\r\n      onLoadMoreMessages={loadMoreMessages}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DirectChatContainer;\r\n","import React from \"react\";\r\nimport { useDebouncedCallback } from \"use-debounce\";\r\n\r\nexport const useTyping = (data, callback) => {\r\n  const [typing, setTyping] = React.useState(false);\r\n  const [user, setUser] = React.useState(\"\");\r\n  const [debounce] = useDebouncedCallback(async (value) => {\r\n    setTyping(false);\r\n    await callback(value);\r\n  }, 500);\r\n\r\n  const onTyping = async () => {\r\n    setTyping(true);\r\n\r\n    if (!typing) await callback(data);\r\n\r\n    debounce({ ...data, username: \"\" });\r\n  };\r\n\r\n  return [{ user, setUser }, onTyping];\r\n};\r\n\r\nexport const usePrev = (values) => {\r\n  const ref = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    ref.current = values;\r\n  }, [values]);\r\n\r\n  return ref.current;\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  Sidebar: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    maxWidth: theme.props.sidebar,\r\n    minWidth: theme.props.sidebarMin,\r\n    // borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  Sidebar_main: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n    background:\r\n      theme.palette.type === \"dark\"\r\n        ? theme.palette.action.selected\r\n        : theme.palette.action.hover,\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  Sidebar_header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    padding: `${theme.spacing(0.5)}px ${theme.spacing(3)}px`,\r\n    minHeight: 64,\r\n  },\r\n  Sidebar_searchbar: {\r\n    background: theme.palette.action.selected,\r\n    padding: `0 ${theme.spacing(1)}px`,\r\n    fontSize: theme.typography.body2.fontSize,\r\n    minHeight: 32,\r\n    marginLeft: theme.spacing(1),\r\n    borderRadius: theme.shape.borderRadius,\r\n  },\r\n  Sidebar_content: {\r\n    height: \"100%\",\r\n    maxHeight: \"calc(100% - 64px)\",\r\n    overflowY: \"scroll\",\r\n    position: \"relative\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n    // borderTop: `1px solid ${theme.palette.divider}`\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  MenuDrawer: {\r\n    position: \"absolute\",\r\n    width: \"95%\",\r\n    height: \"100%\",\r\n    zIndex: theme.zIndex.tooltip,\r\n    // background: theme.palette.background.paper,\r\n    backgroundImage: `linear-gradient(90deg, ${theme.palette.background.default}, ${theme.palette.background.paper})`,\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  MenuDrawer_listItem: {\r\n    \"& p\": {\r\n      width: \"100%\",\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n    \"&:last-child p\": {\r\n      color: theme.palette.error.dark,\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  MenuDrawer_backdrop: {\r\n    width: \"100%\",\r\n    maxWidth: 960,\r\n    zIndex: 1300,\r\n    left: \"auto\",\r\n    right: \"auto\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Slide,\r\n  Backdrop,\r\n} from \"@material-ui/core\";\r\nimport Avatar from \"components/Avatar\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nexport const menuSchema = [\r\n  {\r\n    title: \"Settings\",\r\n    link: \"/settings\",\r\n    icon: <SettingsIcon />,\r\n  },\r\n];\r\n\r\nconst MenuDrawer = ({ user = {}, open, ...props }) => {\r\n  const classes = useStyles();\r\n  // const open = false;\r\n\r\n  // const [open, setOpen] = React.useState(false);\r\n\r\n  // const handleMenuToggle = () => setOpen(!open);\r\n\r\n  return (\r\n    <>\r\n      <Slide in={open} direction=\"right\">\r\n        <div className={classes.MenuDrawer}>\r\n          <List>\r\n            <ListItem>\r\n              <Avatar\r\n                src={user.avatar}\r\n                alt={user.username}\r\n                online={user.online}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary={user.username} secondary={user.email} />\r\n            </ListItem>\r\n          </List>\r\n          <List>\r\n            {/* {menuSchema.map(({ title, link, icon }) => (\r\n              <ListItem\r\n                key={title}\r\n                button\r\n                to={link}\r\n                className={classes.MenuDrawer_listItem}\r\n                component={link ? Link : \"div\"}\r\n                onClick={props.onClose}\r\n              >\r\n                {icon}\r\n                <Typography variant=\"body2\">{title}</Typography>\r\n              </ListItem>\r\n            ))} */}\r\n            <ListItem\r\n              button\r\n              className={classes.MenuDrawer_listItem}\r\n              component=\"div\"\r\n              onClick={() => {\r\n                props.onLogout();\r\n                props.onClose();\r\n              }}\r\n            >\r\n              <Typography variant=\"body2\" align=\"center\">\r\n                Log Out\r\n              </Typography>\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n      </Slide>\r\n      <Backdrop\r\n        open={open}\r\n        onClick={props.onClose}\r\n        className={classes.MenuDrawer_backdrop}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuDrawer;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  UserItem_primary: {\r\n    ...theme.props.classes.ellipsis\r\n  },\r\n  UserItem_secondary: {\r\n    ...theme.props.classes.ellipsis,\r\n    color: theme.palette.secondary[200]\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { ListItem, ListItemAvatar, ListItemText } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"components/Avatar\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst UserItem = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem {...props} dense button to={props.link} component={Link}>\r\n      <ListItemAvatar>\r\n        <Avatar\r\n          src={props.user.avatar}\r\n          alt={props.user.username}\r\n          online={props.user.online}\r\n        />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={props.user.username}\r\n        primaryTypographyProps={{\r\n          component: \"div\",\r\n          className: classes.UserItem_primary,\r\n        }}\r\n        secondary={`@${props.user.username}`}\r\n        secondaryTypographyProps={{\r\n          variant: \"caption\",\r\n          component: \"div\",\r\n          className: classes.UserItem_secondary,\r\n        }}\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  ChatItem_badge_root: {\r\n    height: 15,\r\n  },\r\n  ChatItem_badge_badge: {\r\n    position: \"relative\",\r\n    transform: \"none\",\r\n    height: \"inherit\",\r\n  },\r\n  ChatItem_primary: {\r\n    display: \"flex\",\r\n  },\r\n  ChatItem_secondary: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  ChatItem_primaryText: {\r\n    width: \"100%\",\r\n    ...theme.props.classes.ellipsis,\r\n  },\r\n  ChatItem_secondaryText: {\r\n    width: \"100%\",\r\n    marginRight: theme.spacing(1),\r\n    ...theme.props.classes.ellipsis,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  Badge,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"components/Avatar\";\r\nimport { useStyles } from \"./styles\";\r\nimport { formatDate } from \"utils/index\";\r\nimport Typing from \"components/Typing\";\r\n\r\nconst ChatItem = ({\r\n  link,\r\n  date,\r\n  avatar,\r\n  online,\r\n  unread,\r\n  typing = false,\r\n  selected,\r\n  primary,\r\n  secondary,\r\n\r\n  onContextMenu,\r\n  ...props\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      dense\r\n      button\r\n      // disableRipple\r\n      to={link}\r\n      component={Link}\r\n      selected={selected}\r\n      onContextMenu={onContextMenu}\r\n      {...props}\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar src={avatar} alt={primary} online={online} />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={\r\n          <>\r\n            <Typography\r\n              variant=\"body2\"\r\n              className={classes.ChatItem_primaryText}\r\n            >\r\n              {primary}\r\n            </Typography>\r\n            <Typography variant=\"caption\" color=\"textSecondary\">\r\n              {formatDate(date)}\r\n            </Typography>\r\n          </>\r\n        }\r\n        primaryTypographyProps={{\r\n          className: classes.ChatItem_primary,\r\n          component: \"div\",\r\n        }}\r\n        secondary={\r\n          <>\r\n            <Typography\r\n              variant=\"caption\"\r\n              className={classes.ChatItem_secondaryText}\r\n            >\r\n              {typing ? <Typing /> : secondary}\r\n            </Typography>\r\n            <Badge\r\n              max={50}\r\n              classes={{\r\n                badge: classes.ChatItem_badge_badge,\r\n                root: classes.ChatItem_badge_root,\r\n              }}\r\n              badgeContent={unread}\r\n              color=\"secondary\"\r\n            />\r\n          </>\r\n        }\r\n        secondaryTypographyProps={{\r\n          className: classes.ChatItem_secondary,\r\n          component: \"div\",\r\n        }}\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default ChatItem;\r\n","import React from \"react\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\n\r\nconst DirectItemMenu = ({ anchorEl, onClose, onDelete }) => {\r\n  const handleActions = (callback) => () => {\r\n    callback();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={Boolean(anchorEl)}\r\n      onClose={onClose}\r\n    >\r\n      <MenuItem dense onClick={handleActions(onDelete)}>\r\n        Delete chat\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default DirectItemMenu;\r\n","import React from \"react\";\r\nimport ChatItem from \"components/ChatItem\";\r\nimport DirectItemMenu from \"./DirectItemMenu\";\r\n\r\nconst DirectItem = (props) => {\r\n  React.useEffect(() => {\r\n    const unsubscribe = props.subscribeToUserTyping(props.direct.id);\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = props.subscribeToDeleteMessage(props.direct.id);\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = props.subscribeToNewMessage(props.direct.id);\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const [contextMenu, setContextMenu] = React.useState(null);\r\n\r\n  const handleOpen = (e) => {\r\n    e.preventDefault();\r\n    setContextMenu(e.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => setContextMenu(null);\r\n\r\n  const handleDelete = () => {\r\n    props.onDelete(props.direct.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ChatItem\r\n        link={props.link}\r\n        typing={props.typing}\r\n        selected={props.selected}\r\n        avatar={props.user.avatar}\r\n        online={props.user.online}\r\n        unread={props.direct.unread}\r\n        primary={props.user.username}\r\n        secondary={props.direct.lastMessage.text}\r\n        date={props.direct.lastMessage.createdAt}\r\n        onClick={props.onClick}\r\n        onContextMenu={handleOpen}\r\n      />\r\n      <DirectItemMenu\r\n        anchorEl={contextMenu}\r\n        onClose={handleClose}\r\n        onDelete={handleDelete}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DirectItem;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  StyledList: {},\r\n  StyledList_subheader: {\r\n    background: theme.palette.action.selected,\r\n    // background:\r\n    //   theme.palette.type === \"dark\"\r\n    //     ? theme.lighten(theme.palette.background.default, 0.235)\r\n    //     : theme.darken(theme.palette.background.default, 0.057),\r\n    lineHeight: \"32px\",\r\n    fontSize: theme.typography.body2.fontSize,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { ListSubheader, List } from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst StyledList = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List\r\n      {...props}\r\n      subheader={\r\n        props.subheader ? (\r\n          <ListSubheader\r\n            component=\"div\"\r\n            className={classes.StyledList_subheader}\r\n          >\r\n            {props.subheader}\r\n          </ListSubheader>\r\n        ) : null\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default StyledList;\r\n","import React from \"react\";\r\nimport { IconButton, InputBase } from \"@material-ui/core\";\r\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\r\nimport { useDebouncedCallback } from \"use-debounce\";\r\nimport { useStyles } from \"./styles\";\r\nimport MenuDrawer from \"components/MenuDrawer\";\r\nimport UserItem from \"components/UserItem\";\r\nimport DirectItem from \"components/DirectItem\";\r\nimport StyledList from \"components/StylesList\";\r\n\r\nconst Sidebar = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  const renderDirectsList = (data, addProps = {}) => {\r\n    return data ? (\r\n      <StyledList disablePadding>\r\n        {data.map((direct) => (\r\n          <DirectItem\r\n            key={direct.id}\r\n            direct={direct}\r\n            user={direct.user}\r\n            typing={\r\n              props.typings[direct.id] === direct.user.username\r\n                ? props.typings[direct.id]\r\n                : \"\"\r\n            }\r\n            link={`/me?p=${direct.user.id}`}\r\n            selected={direct.user.id === props.chatId}\r\n            onDelete={props.onDeleteDirect}\r\n            subscribeToUserTyping={props.subscribeToUserTyping}\r\n            subscribeToNewMessage={props.subscribeToNewMessage}\r\n            subscribeToDeleteMessage={props.subscribeToDeleteMessage}\r\n            {...addProps}\r\n          />\r\n        ))}\r\n      </StyledList>\r\n    ) : null;\r\n  };\r\n\r\n  const renderDirects = () => {\r\n    if (search.length) {\r\n      let directsMatch = [];\r\n\r\n      if (props.directs && props.directs.length) {\r\n        directsMatch = props.directs.filter(({ user }) =>\r\n          user.username.startsWith(search)\r\n        );\r\n      }\r\n\r\n      const directsMatchIds = directsMatch.map(({ user }) => user.id);\r\n\r\n      return (\r\n        <>\r\n          {renderDirectsList(directsMatch, {\r\n            selected: false,\r\n            onClick: () => setSearch(\"\"),\r\n          })}\r\n          {props.users && props.users.length ? (\r\n            <StyledList subheader=\"Global search\" disablePadding>\r\n              {props.users.map(\r\n                (user) =>\r\n                  !directsMatchIds.includes(user.id) && (\r\n                    <UserItem\r\n                      key={user.id}\r\n                      user={user}\r\n                      link={`/me?p=${user.id}`}\r\n                      onClick={() => setSearch(\"\")}\r\n                    />\r\n                  )\r\n              )}\r\n            </StyledList>\r\n          ) : null}\r\n        </>\r\n      );\r\n    }\r\n\r\n    return renderDirectsList(props.directs);\r\n  };\r\n\r\n  const [debounce] = useDebouncedCallback(\r\n    (value) => props.onSearch(value),\r\n    200\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value);\r\n    debounce(e.target.value);\r\n  };\r\n\r\n  const handleMenuToggle = () => setOpen(!open);\r\n\r\n  return (\r\n    <div className={classes.Sidebar}>\r\n      {/* <MenuDrawer.Drawer /> */}\r\n      <MenuDrawer\r\n        open={open}\r\n        user={props.currentUser}\r\n        onClose={handleMenuToggle}\r\n        onLogout={props.onLogout}\r\n      />\r\n      <div className={classes.Sidebar_main}>\r\n        <div className={classes.Sidebar_header}>\r\n          <IconButton edge=\"start\" color=\"inherit\" onClick={handleMenuToggle}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <InputBase\r\n            fullWidth\r\n            size=\"small\"\r\n            value={search}\r\n            placeholder=\"Search\"\r\n            className={classes.Sidebar_searchbar}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className={classes.Sidebar_content}>\r\n          {renderDirects(props.directs)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport {\r\n  DIRECTS,\r\n  DIRECT_LAST_MESSAGE,\r\n  CURRENT_USER,\r\n  USERS,\r\n} from \"graphql/queries\";\r\nimport { DELETE_DIRECT, LOGOUT } from \"graphql/mutations\";\r\nimport {\r\n  NEW_MESSAGE_SUBSCRIPTION,\r\n  NEW_DIRECT_SUBSCRIPTION,\r\n  DELETE_MESSAGE_SUBSCRIPTION,\r\n  DELETE_DIRECT_SUBSCRIPTION,\r\n  ONLINE_USER_SUBSCRIPTION,\r\n  USER_TYPING_SUBSCRIPTION,\r\n} from \"graphql/subscriptions\";\r\nimport { pasreQuery } from \"utils/index\";\r\nimport Sidebar from \"components/Sidebar\";\r\nimport { get } from \"lodash-es\";\r\nimport { sortByLastMessage } from \"utils/index\";\r\nimport { useQuery, useLazyQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { store } from \"redux/store\";\r\nimport { dispatchLogout } from \"redux/actions\";\r\nimport { wsLink } from \"client\";\r\n\r\nconst SidebarContainer = (props) => {\r\n  const { data: user } = useQuery(CURRENT_USER);\r\n  const {\r\n    data: directs,\r\n    subscribeToMore: subscribeToMoreDirects,\r\n    client,\r\n  } = useQuery(DIRECTS);\r\n  const [searchUsers, { data: users }] = useLazyQuery(USERS);\r\n  const [logout] = useMutation(LOGOUT, {\r\n    onCompleted: async () => {\r\n      wsLink.subscriptionClient.client.onclose();\r\n      store.dispatch(dispatchLogout());\r\n      props.history.push(\"/login\");\r\n    },\r\n  });\r\n\r\n  const [deleteDirect] = useMutation(DELETE_DIRECT);\r\n\r\n  const currentUser = get(user, \"currentUser\", {});\r\n  const chatId = pasreQuery(props.location).p;\r\n  const [typings, setTypings] = React.useState({});\r\n\r\n  React.useEffect(() => {\r\n    wsLink.subscriptionClient.tryReconnect();\r\n  }, []);\r\n\r\n  const subscribeToUserTyping = (chatId) => {\r\n    return subscribeToMoreDirects({\r\n      document: USER_TYPING_SUBSCRIPTION,\r\n      variables: { chatId },\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n        const { userTyping } = subscriptionData.data;\r\n        setTypings({ ...typings, [chatId]: userTyping });\r\n        return prev;\r\n      },\r\n    });\r\n  };\r\n\r\n  const subscribeToNewMessage = (chatId) => {\r\n    return subscribeToMoreDirects({\r\n      document: NEW_MESSAGE_SUBSCRIPTION,\r\n      variables: { chatId },\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n\r\n        const { newMessage } = subscriptionData.data;\r\n        const unread = newMessage.userId !== currentUser.id ? 1 : 0;\r\n\r\n        const directs = prev.directs\r\n          .map((direct) => {\r\n            if (direct.id === chatId) {\r\n              direct = {\r\n                ...direct,\r\n                lastMessage: newMessage,\r\n                unread: direct.unread + unread,\r\n              };\r\n            }\r\n            return direct;\r\n          })\r\n          .sort(sortByLastMessage);\r\n\r\n        return { directs };\r\n      },\r\n    });\r\n  };\r\n\r\n  const subscribeToDeleteMessage = (chatId) => {\r\n    return subscribeToMoreDirects({\r\n      document: DELETE_MESSAGE_SUBSCRIPTION,\r\n      variables: { chatId },\r\n      updateQuery: async (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n        const { deleteMessage } = subscriptionData.data;\r\n\r\n        return await client\r\n          .query({\r\n            query: DIRECT_LAST_MESSAGE,\r\n            variables: { chatId },\r\n            fetchPolicy: \"no-cache\",\r\n          })\r\n          .then(({ data }) => {\r\n            const directs = prev.directs.map((direct) => {\r\n              const unread = deleteMessage.userId !== currentUser.id ? 1 : 0;\r\n\r\n              if (direct.lastMessage.id === deleteMessage.id) {\r\n                direct = {\r\n                  ...direct,\r\n                  lastMessage: data.directLastMessage,\r\n                  unread: direct.unread - unread,\r\n                };\r\n              }\r\n\r\n              return direct;\r\n            });\r\n\r\n            client.writeQuery({ query: DIRECTS, data: { directs } });\r\n\r\n            return { directs };\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const subscribeToDeleteDirect = () => {\r\n      return subscribeToMoreDirects({\r\n        document: DELETE_DIRECT_SUBSCRIPTION,\r\n        updateQuery: async (prev, { subscriptionData }) => {\r\n          if (!subscriptionData.data) return prev;\r\n          const { deleteDirect } = subscriptionData.data;\r\n\r\n          const directs = prev.directs.filter(\r\n            ({ id }) => id !== deleteDirect.id\r\n          );\r\n\r\n          client.writeQuery({\r\n            query: DIRECTS,\r\n            data: { directs },\r\n          });\r\n\r\n          return { directs };\r\n        },\r\n      });\r\n    };\r\n\r\n    const unsubscribe = subscribeToDeleteDirect();\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const subscribeToNewDirect = () => {\r\n      return subscribeToMoreDirects({\r\n        document: NEW_DIRECT_SUBSCRIPTION,\r\n        updateQuery: (prev, { subscriptionData }) => {\r\n          if (!subscriptionData.data) return prev;\r\n          const { newDirect } = subscriptionData.data;\r\n          const directs = prev.directs\r\n            .concat(newDirect)\r\n            .sort(sortByLastMessage);\r\n          return { directs };\r\n        },\r\n      });\r\n    };\r\n\r\n    const unsubscribe = subscribeToNewDirect();\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const subscribeToOnlineUsers = () => {\r\n      return subscribeToMoreDirects({\r\n        document: ONLINE_USER_SUBSCRIPTION,\r\n      });\r\n    };\r\n\r\n    const unsubscribe = subscribeToOnlineUsers();\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const onSearch = (username) => searchUsers({ variables: { username } });\r\n\r\n  const onDeleteDirect = (id) => {\r\n    deleteDirect({ variables: { id } });\r\n  };\r\n\r\n  return (\r\n    <Sidebar\r\n      chatId={chatId}\r\n      typings={typings}\r\n      directs={get(directs, \"directs\", []).sort(sortByLastMessage)}\r\n      users={get(users, \"users\")}\r\n      currentUser={currentUser}\r\n      onLogout={logout}\r\n      onSearch={onSearch}\r\n      onDeleteDirect={onDeleteDirect}\r\n      subscribeToNewMessage={subscribeToNewMessage}\r\n      subscribeToDeleteMessage={subscribeToDeleteMessage}\r\n      subscribeToUserTyping={subscribeToUserTyping}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SidebarContainer;\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SidebarContainer from \"containers/SidebarContainer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    minHeight: \"100vh\",\r\n    maxHeight: \"100vh\",\r\n  },\r\n  contentShift: {\r\n    width: \"100%\",\r\n    background: theme.palette.background.paper,\r\n    minWidth: theme.props.sidebarMin,\r\n  },\r\n}));\r\n\r\nconst Layout = ({ children, ...props }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.container}>\r\n      <SidebarContainer {...props} />\r\n      <div className={classes.contentShift}>{children}</div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","import React from \"react\";\r\nimport { pasreQuery } from \"utils/index\";\r\nimport DirectChatContainer from \"containers/DirectChatContainer\";\r\nimport Layout from \"components/Layout\";\r\n\r\nconst Home = (props) => {\r\n  const { p } = pasreQuery(props.location);\r\n\r\n  return <Layout>{p ? <DirectChatContainer userId={p} /> : null}</Layout>;\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}