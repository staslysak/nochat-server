{"version":3,"sources":["graphql/mutations.js","pages/Login/index.js"],"names":["REGISTER","gql","LOGIN","VERIFY_USER","CREATE_DIRECT","CREATE_MESSAGE","DELETE_MESSAGE","DELETE_DIRECT","READ_MESSAGE","LOGOUT","USER_TYPING","useStyles","makeStyles","theme","Login","display","justifyContent","flexDirection","alignItems","height","width","props","classes","React","useState","values","setValues","errors","setErrors","useMutation","register","login","isRegister","test","location","pathname","handleOnChange","target","name","value","prevValues","handleData","data","a","history","push","authTokens","set","onSubmit","e","preventDefault","variables","then","alert","catch","error","graphQLErrors","forEach","err","extensions","validationErrors","wsLink","subscriptionClient","tryReconnect","className","maxWidth","variant","gutterBottom","fullWidth","margin","onChange","username","label","helperText","email","password","type","align","component","Link","to"],"mappings":"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","file":"static/js/8.00583785.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\r\n\r\nexport const REGISTER = gql`\r\n  mutation register($username: String!, $email: String!, $password: String!) {\r\n    register(username: $username, email: $email, password: $password)\r\n  }\r\n`;\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VERIFY_USER = gql`\r\n  mutation verifyUser($secret: String!) {\r\n    verifyUser(secret: $secret) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_DIRECT = gql`\r\n  mutation createDirect($userId: Int!, $text: String) {\r\n    createDirect(userId: $userId, text: $text) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_MESSAGE = gql`\r\n  mutation createMessage($chatId: Int, $text: String!) {\r\n    createMessage(chatId: $chatId, text: $text)\r\n  }\r\n`;\r\n\r\nexport const DELETE_MESSAGE = gql`\r\n  mutation deleteMessage($id: Int!) {\r\n    deleteMessage(id: $id)\r\n  }\r\n`;\r\n\r\nexport const DELETE_DIRECT = gql`\r\n  mutation deleteDirect($id: Int!) {\r\n    deleteDirect(id: $id)\r\n  }\r\n`;\r\n\r\nexport const READ_MESSAGE = gql`\r\n  mutation readMessage($id: Int!) {\r\n    readMessage(id: $id)\r\n  }\r\n`;\r\n\r\nexport const LOGOUT = gql`\r\n  mutation logout {\r\n    logout\r\n  }\r\n`;\r\n\r\nexport const USER_TYPING = gql`\r\n  mutation userTyping($chatId: Int!, $username: String) {\r\n    userTyping(chatId: $chatId, username: $username)\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Link as MuiLink,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { REGISTER, LOGIN } from \"graphql/mutations\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { wsLink } from \"../../client\";\r\nimport { authTokens } from \"utils/index\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Login: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({});\r\n  const [errors, setErrors] = React.useState({});\r\n  const [register] = useMutation(REGISTER);\r\n  const [login] = useMutation(LOGIN);\r\n  const isRegister = /\\/registration/.test(props.location.pathname);\r\n\r\n  const handleOnChange = ({ target: { name, value } }) => {\r\n    setValues((prevValues) => ({ ...prevValues, [name]: value }));\r\n  };\r\n\r\n  const handleData = async (data) => {\r\n    if (isRegister) {\r\n      props.history.push(\"/login\");\r\n    } else {\r\n      authTokens.set(data);\r\n      props.history.push(\"/me\");\r\n    }\r\n    setErrors({});\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (isRegister) {\r\n      await register({ variables: values })\r\n        .then(({ data }) => handleData(data.register))\r\n        .then(() => alert(\"Check your email\"))\r\n        .catch((error) => {\r\n          if (error.graphQLErrors) {\r\n            error.graphQLErrors.forEach((err) =>\r\n              setErrors(err.extensions.validationErrors)\r\n            );\r\n          }\r\n        });\r\n    } else {\r\n      await login({ variables: values })\r\n        .then(({ data }) => {\r\n          handleData(data.login);\r\n          wsLink.subscriptionClient.tryReconnect();\r\n        })\r\n        .catch((error) => {\r\n          if (error.graphQLErrors) {\r\n            error.graphQLErrors.forEach((err) =>\r\n              setErrors(err.extensions.validationErrors)\r\n            );\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const renderFields = () => {\r\n    return (\r\n      <div>\r\n        <TextField\r\n          fullWidth\r\n          margin=\"dense\"\r\n          variant=\"outlined\"\r\n          onChange={handleOnChange}\r\n          value={values.username}\r\n          label=\"Username\"\r\n          name=\"username\"\r\n          error={errors.username}\r\n          helperText={errors.username}\r\n        />\r\n        {isRegister && (\r\n          <TextField\r\n            fullWidth\r\n            margin=\"dense\"\r\n            variant=\"outlined\"\r\n            onChange={handleOnChange}\r\n            value={values.email}\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            error={errors.email}\r\n            helperText={errors.email}\r\n          />\r\n        )}\r\n        <TextField\r\n          fullWidth\r\n          margin=\"dense\"\r\n          variant=\"outlined\"\r\n          onChange={handleOnChange}\r\n          value={values.password}\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          error={errors.password}\r\n          helperText={errors.password}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Login}>\r\n      <Box maxWidth={300}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          {isRegister ? \"Join\" : \"Login\"}\r\n        </Typography>\r\n        <form onSubmit={onSubmit}>\r\n          {renderFields()}\r\n          <Typography align=\"center\" variant=\"body2\" gutterBottom>\r\n            {isRegister ? (\r\n              <MuiLink align=\"center\" component={Link} to=\"/\">\r\n                Already have an account?\r\n              </MuiLink>\r\n            ) : (\r\n              <MuiLink align=\"center\" component={Link} to=\"/registration\">\r\n                Not a member?\r\n              </MuiLink>\r\n            )}\r\n          </Typography>\r\n          <Button type=\"submit\" fullWidth>\r\n            {isRegister ? \"Join\" : \"Login\"}\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}