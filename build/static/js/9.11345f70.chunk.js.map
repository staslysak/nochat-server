{"version":3,"sources":["graphql/mutations.js","pages/VerifyUser/index.js"],"names":["REGISTER","gql","LOGIN","VERIFY_USER","CREATE_DIRECT","CREATE_MESSAGE","DELETE_MESSAGE","DELETE_DIRECT","READ_MESSAGE","LOGOUT","USER_TYPING","connect","dispatch","dispatchLogin","data","dispatchLogout","props","useMutation","verifyUser","React","useEffect","token","pasreQuery","location","variables","secret","then","catch","err","finally","history","push"],"mappings":"irEAEO,IAAMA,EAAWC,IAAH,KAMRC,EAAQD,IAAH,KASLE,EAAcF,IAAH,KASXG,EAAgBH,IAAH,KAQbI,EAAiBJ,IAAH,KAMdK,EAAiBL,IAAH,KAMdM,EAAgBN,IAAH,KAMbO,EAAeP,IAAH,KAMZQ,EAASR,IAAH,KAMNS,EAAcT,IAAH,M,+GCzCTU,sBAAQ,MAAM,SAACC,GAAD,MAAe,CAC1CC,cAAe,SAACC,GAAD,OAAUF,EAASC,YAAcC,KAChDC,eAAgB,kBAAMH,EAASG,mBAFlBJ,EAhBI,SAACK,GAAW,IAAD,EACPC,YAAYd,KAA1Be,EADqB,oBAa5B,OAVAC,IAAMC,WAAU,WAAO,IACbC,EAAUC,YAAWN,EAAMO,UAA3BF,MACRH,EAAW,CAAEM,UAAW,CAAEC,OAAQJ,KAC/BK,MAAK,gBAAGZ,EAAH,EAAGA,KAAH,OAAcE,EAAMH,cAAcC,EAAKI,eAC5CS,OAAM,SAACC,GACNZ,EAAMD,oBAEPc,SAAQ,kBAAMb,EAAMc,QAAQC,KAAK,YACnC,CAACf,EAAOE,IAEJ","file":"static/js/9.11345f70.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\r\n\r\nexport const REGISTER = gql`\r\n  mutation register($username: String!, $email: String!, $password: String!) {\r\n    register(username: $username, email: $email, password: $password)\r\n  }\r\n`;\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VERIFY_USER = gql`\r\n  mutation verifyUser($secret: String!) {\r\n    verifyUser(secret: $secret) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_DIRECT = gql`\r\n  mutation createDirect($userId: Int!, $text: String) {\r\n    createDirect(userId: $userId, text: $text) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_MESSAGE = gql`\r\n  mutation createMessage($chatId: Int, $text: String!) {\r\n    createMessage(chatId: $chatId, text: $text)\r\n  }\r\n`;\r\n\r\nexport const DELETE_MESSAGE = gql`\r\n  mutation deleteMessage($id: Int!) {\r\n    deleteMessage(id: $id)\r\n  }\r\n`;\r\n\r\nexport const DELETE_DIRECT = gql`\r\n  mutation deleteDirect($id: Int!) {\r\n    deleteDirect(id: $id)\r\n  }\r\n`;\r\n\r\nexport const READ_MESSAGE = gql`\r\n  mutation readMessage($id: Int!) {\r\n    readMessage(id: $id)\r\n  }\r\n`;\r\n\r\nexport const LOGOUT = gql`\r\n  mutation logout {\r\n    logout\r\n  }\r\n`;\r\n\r\nexport const USER_TYPING = gql`\r\n  mutation userTyping($chatId: Int!, $username: String) {\r\n    userTyping(chatId: $chatId, username: $username)\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport { VERIFY_USER } from \"graphql/mutations\";\r\nimport { connect } from \"react-redux\";\r\nimport { dispatchLogin, dispatchLogout } from \"redux/actions\";\r\nimport { pasreQuery } from \"utils/index\";\r\n\r\nconst VerifyUser = (props) => {\r\n  const [verifyUser] = useMutation(VERIFY_USER);\r\n\r\n  React.useEffect(() => {\r\n    const { token } = pasreQuery(props.location);\r\n    verifyUser({ variables: { secret: token } })\r\n      .then(({ data }) => props.dispatchLogin(data.verifyUser))\r\n      .catch((err) => {\r\n        props.dispatchLogout();\r\n      })\r\n      .finally(() => props.history.push(\"/me\"));\r\n  }, [props, verifyUser]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default connect(null, (dispatch) => ({\r\n  dispatchLogin: (data) => dispatch(dispatchLogin(data)),\r\n  dispatchLogout: () => dispatch(dispatchLogout()),\r\n}))(VerifyUser);\r\n"],"sourceRoot":""}