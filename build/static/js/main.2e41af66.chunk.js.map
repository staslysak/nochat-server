{"version":3,"sources":["client.js","theme.js","redux/reducers/auth.js","redux/reducers/index.js","redux/store.js","components/ChatItem/styles.js","components/ChatItem/index.js","components/UserItem/styles.js","components/UserItem/index.js","components/MenuDrawer/styles.js","components/MenuDrawer/index.js","components/Sidebar/styles.js","components/Sidebar/index.js","containers/SidebarContainer.js","components/Layout/index.js","App.js","serviceWorker.js","index.js","redux/actions/types.js","graphql/queries/index.js","components/Avatar/styles.js","components/Avatar/index.js","utils/index.js","redux/actions/auth.js","redux/actions/index.js","graphql/mutations/index.js","components/MainBlock/styles.js","components/MainBlock/index.js"],"names":["httpLink","HttpLink","uri","process","wsLink","WebSocketLink","options","reconnect","connectionParams","headers","localStorage","getItem","afterwareLink","ApolloLink","operation","forward","map","response","getContext","token","get","refreshToken","setItem","authMiddleware","setContext","httpLinkWithMiddleware","onError","graphQLErrors","networkError","forEach","message","locations","path","extensions","console","log","code","concat","link","split","query","definition","getMainDefinition","kind","client","ApolloClient","cache","InMemoryCache","preferColorSchema","window","matchMedia","matches","theme","createMuiTheme","palette","type","primary","secondary","props","sidebar","sidebarMin","classes","ellipsis","overflow","whiteSpace","textOverflow","lighten","darken","INITIAL_STATE","isAuthorized","chatId","text","combineReducers","auth","state","payload","TYPES","LOGIN","LOGOUT","removeItem","TYPE_MESSAGE","CHAT_ID","MIDDLEWARE","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","useStyles","makeStyles","ChatItem_badge","height","position","transform","ChatItem_primary","display","ChatItem_secondary","alignItems","ChatItem_primaryText","width","ChatItem_secondaryText","marginRight","spacing","ChatItem","selected","avatar","name","updatedAt","lastMessage","unread","ListItem","dense","button","disableRipple","to","component","Link","ListItemAvatar","Avatar","src","alt","ListItemText","Typography","variant","className","color","primaryTypographyProps","Badge","badgeContent","secondaryTypographyProps","UserItem_primary","UserItem_secondary","UserItem","username","MenuDrawer","zIndex","tooltip","background","paper","borderRight","divider","MenuDrawer_listItem","marginLeft","error","dark","fontSize","typography","body1","fontWeight","fontWeightBold","MenuDrawer_backdrop","maxWidth","left","right","menuSchema","title","action","onToggle","icon","Group","TouchApp","Settings","onLogout","open","userData","useQuery","USER","user","Slide","in","direction","List","email","key","onClick","undefined","align","Backdrop","Sidebar","minWidth","Sidebar_header","justifyContent","Sidebar_menuButton","Sidebar_searchbar","default","padding","body2","boxSizing","borderRadius","shape","React","memo","onSearch","renderChats","useState","setOpen","search","setSearch","useEffect","useDebouncedCallback","value","debounce","handleMenuToggle","MainBlock","header","IconButton","edge","Menu","InputBase","size","placeholder","onChange","e","target","connect","dispatchChatId","dispatchLogout","useLazyQuery","USERS","searchUsers","usersData","directsData","DIRECTS","useMutation","onCompleted","resetStore","pasreQuery","location","p","renderDirects","useCallback","data","loading","directs","id","formatDate","createdAt","length","users","userId","renderUsers","variables","container","maxHeight","contentShift","withRouter","children","Container","createLoadableComponent","pathResolver","Loadable","loader","privatRoutes","exact","publicRoutes","Redirect","CssBaseline","route","Boolean","hostname","match","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","gql","DIRECT","DELETE_MESSAGE","NEW_MESSAGE","textTransform","common","white","x","slice","join","style","qs","parse","arrayFormat","skipNull","parseNumbers","date","moment","format","dispatchLogin","CREATE_USER","VERIFY_USER","CREATE_TEAM","CREATE_DIRECT","CREATE_MESSAGE","MainBlock_header","borderBottom","MainBlock_content","overflowY","show","Toolbar"],"mappings":"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","file":"static/js/main.2e41af66.chunk.js","sourcesContent":["import { ApolloClient } from \"apollo-client\";\r\nimport { HttpLink } from \"apollo-link-http\";\r\nimport { WebSocketLink } from \"apollo-link-ws\";\r\nimport { ApolloLink, split } from \"apollo-link\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { onError } from \"apollo-link-error\";\r\nimport { getMainDefinition } from \"apollo-utilities\";\r\n\r\nconst httpLink = new HttpLink({ uri: process.env.REACT_APP_API_URI });\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri: `ws://localhost:8081/graphql`,\r\n  options: {\r\n    reconnect: true,\r\n    connectionParams: () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      const refreshToken = localStorage.getItem(\"refreshToken\");\r\n      return {\r\n        headers: {\r\n          \"x-token\": token,\r\n          \"x-refresh-token\": refreshToken\r\n        }\r\n      };\r\n    }\r\n  }\r\n});\r\n\r\nconst afterwareLink = new ApolloLink((operation, forward) =>\r\n  forward(operation).map(response => {\r\n    const context = operation.getContext();\r\n    const {\r\n      response: { headers }\r\n    } = context;\r\n    const token = headers.get(\"x-token\");\r\n    const refreshToken = headers.get(\"x-refresh-token\");\r\n    if (token && refreshToken) {\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"refreshToken\", refreshToken);\r\n    }\r\n\r\n    return response;\r\n  })\r\n);\r\n\r\nconst authMiddleware = new ApolloLink((operation, forward) => {\r\n  operation.setContext(({ headers }) => ({\r\n    headers: {\r\n      ...headers,\r\n      \"x-token\": localStorage.getItem(\"token\"),\r\n      \"x-refresh-token\": localStorage.getItem(\"refreshToken\")\r\n    }\r\n  }));\r\n\r\n  return forward(operation);\r\n});\r\n\r\nconst errorMiddleware = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors)\r\n    graphQLErrors.forEach(({ message, locations, path, extensions }) => {\r\n      console.log(\r\n        `[GraphQL error]: \r\n          Message: ${message}, \r\n          Location: ${locations}, \r\n          Path: ${path}`\r\n      );\r\n      if (extensions.code === \"UNAUTHENTICATED\") {\r\n        console.log(extensions.code, extensions.code === \"UNAUTHENTICATED\");\r\n        // store.dispatch(dispatchLogout());\r\n      }\r\n    });\r\n\r\n  if (networkError) {\r\n    console.log(`[Network error]: ${networkError}`);\r\n  }\r\n});\r\n\r\nconst httpLinkWithMiddleware = errorMiddleware.concat(\r\n  afterwareLink.concat(authMiddleware.concat(httpLink))\r\n);\r\n\r\nconst link = split(\r\n  ({ query }) => {\r\n    const definition = getMainDefinition(query);\r\n    return (\r\n      definition.kind === \"OperationDefinition\" &&\r\n      definition.operation === \"subscription\"\r\n    );\r\n  },\r\n  wsLink,\r\n  // errorMiddleware,\r\n  httpLinkWithMiddleware\r\n);\r\n\r\nexport const client = new ApolloClient({\r\n  link,\r\n  cache: new InMemoryCache()\r\n});\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { grey as primary, blue as secondary } from \"@material-ui/core/colors\";\r\nimport { lighten, darken } from \"@material-ui/core/styles/colorManipulator\";\r\n// import defaultTheme from \"@material-ui/core/styles/defaultTheme\";\r\n\r\nconst preferColorSchema = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    type: preferColorSchema ? \"dark\" : \"light\",\r\n    primary,\r\n    secondary\r\n  },\r\n  props: {\r\n    sidebar: 280,\r\n    sidebarMin: 150,\r\n    classes: {\r\n      ellipsis: {\r\n        overflow: \"hidden\",\r\n        whiteSpace: \"nowrap\",\r\n        textOverflow: \"ellipsis\"\r\n      }\r\n    }\r\n  },\r\n  lighten,\r\n  darken\r\n});\r\n\r\n// console.log(\"defaultTheme\", defaultTheme);\r\nconsole.log(\"customTheme\", theme);\r\n","import TYPES from \"redux/actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  isAuthorized: !!localStorage.getItem(\"token\"),\r\n  chatId: null,\r\n  text: \"\"\r\n};\r\n\r\nexport default (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case TYPES.auth.LOGIN:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      localStorage.setItem(\"refreshToken\", payload.refreshToken);\r\n      return {\r\n        ...state,\r\n        isAuthorized: true\r\n      };\r\n    case TYPES.auth.LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"refreshToken\");\r\n      return {\r\n        ...state,\r\n        isAuthorized: false\r\n      };\r\n    case TYPES.auth.TYPE_MESSAGE:\r\n      return { ...state, text: payload };\r\n    case TYPES.auth.CHAT_ID:\r\n      return { ...state, chatId: payload };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\n\r\nexport default combineReducers({\r\n  auth\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"redux/reducers\";\r\n\r\nconst INITIAL_STATE = {};\r\nconst MIDDLEWARE = [thunk];\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  INITIAL_STATE,\r\n  composeWithDevTools(applyMiddleware(...MIDDLEWARE))\r\n);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  ChatItem_badge: {\r\n    height: 15,\r\n    \"& .MuiBadge-badge\": {\r\n      position: \"relative\",\r\n      transform: \"none\",\r\n      height: \"inherit\"\r\n    }\r\n  },\r\n  ChatItem_primary: {\r\n    display: \"flex\"\r\n  },\r\n  ChatItem_secondary: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  ChatItem_primaryText: {\r\n    width: \"100%\",\r\n    ...theme.props.classes.ellipsis\r\n  },\r\n  ChatItem_secondaryText: {\r\n    width: \"100%\",\r\n    marginRight: theme.spacing(1),\r\n    ...theme.props.classes.ellipsis\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  Badge\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"components/Avatar\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst ChatItem = ({\r\n  link,\r\n  selected,\r\n  avatar,\r\n  name,\r\n  updatedAt,\r\n  lastMessage,\r\n  unread,\r\n  ...props\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      dense\r\n      button\r\n      disableRipple\r\n      to={link}\r\n      component={Link}\r\n      selected={selected}\r\n      {...props}\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar src={avatar} alt={name} />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={\r\n          <>\r\n            <Typography\r\n              variant=\"body2\"\r\n              className={classes.ChatItem_primaryText}\r\n            >\r\n              {name}\r\n            </Typography>\r\n            <Typography variant=\"caption\" color=\"textSecondary\">\r\n              {updatedAt}\r\n            </Typography>\r\n          </>\r\n        }\r\n        primaryTypographyProps={{\r\n          className: classes.ChatItem_primary,\r\n          component: \"div\"\r\n        }}\r\n        secondary={\r\n          <>\r\n            <Typography\r\n              variant=\"caption\"\r\n              className={classes.ChatItem_secondaryText}\r\n            >\r\n              {lastMessage}\r\n            </Typography>\r\n            <Badge\r\n              className={classes.ChatItem_badge}\r\n              badgeContent={unread}\r\n              color=\"secondary\"\r\n            />\r\n          </>\r\n        }\r\n        secondaryTypographyProps={{\r\n          className: classes.ChatItem_secondary,\r\n          component: \"div\"\r\n        }}\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default ChatItem;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  UserItem_primary: {\r\n    ...theme.props.classes.ellipsis\r\n  },\r\n  UserItem_secondary: {\r\n    ...theme.props.classes.ellipsis,\r\n    color: theme.palette.secondary[200]\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { ListItem, ListItemAvatar, ListItemText } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"components/Avatar\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst UserItem = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem dense button to={props.link} component={Link}>\r\n      <ListItemAvatar>\r\n        <Avatar src={props.avatar} alt={props.name} />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={props.name}\r\n        primaryTypographyProps={{\r\n          component: \"div\",\r\n          className: classes.UserItem_primary\r\n        }}\r\n        secondary={`@${props.username}`}\r\n        secondaryTypographyProps={{\r\n          variant: \"caption\",\r\n          component: \"div\",\r\n          className: classes.UserItem_secondary\r\n        }}\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  MenuDrawer: {\r\n    position: \"absolute\",\r\n    width: \"95%\",\r\n    height: \"100%\",\r\n    zIndex: theme.zIndex.tooltip,\r\n    background: theme.palette.background.paper,\r\n    borderRight: `1px solid ${theme.palette.divider}`\r\n  },\r\n  MenuDrawer_listItem: {\r\n    \"& p\": {\r\n      width: \"100%\",\r\n      marginLeft: theme.spacing(2)\r\n    },\r\n    \"&:last-child p\": {\r\n      color: theme.palette.error.dark,\r\n      fontSize: theme.typography.body1.fontSize,\r\n      fontWeight: theme.typography.fontWeightBold,\r\n      marginLeft: 0\r\n    }\r\n  },\r\n  MenuDrawer_backdrop: {\r\n    width: \"100%\",\r\n    zIndex: 1300,\r\n    maxWidth: 960,\r\n    left: \"auto\",\r\n    right: \"auto\"\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Slide,\r\n  Backdrop\r\n} from \"@material-ui/core\";\r\nimport Avatar from \"components/Avatar\";\r\nimport {\r\n  Group as GroupIcon,\r\n  Settings as SettingsIcon,\r\n  TouchApp as TouchAppIcon\r\n} from \"@material-ui/icons\";\r\nimport { useStyles } from \"./styles\";\r\nimport { USER } from \"graphql/queries\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { get } from \"lodash-es\";\r\n\r\nexport const menuSchema = [\r\n  {\r\n    title: \"New Group\",\r\n    link: \"/create_team\",\r\n    action: ({ onToggle }) => onToggle,\r\n    icon: <GroupIcon />\r\n  },\r\n  {\r\n    title: \"New Channel\",\r\n    link: \"/create_channel\",\r\n    action: ({ onToggle }) => onToggle,\r\n    icon: <TouchAppIcon />\r\n  },\r\n  {\r\n    title: \"Settings\",\r\n    link: \"/settings\",\r\n    action: ({ onToggle }) => onToggle,\r\n    icon: <SettingsIcon />\r\n  },\r\n  {\r\n    title: \"Log Out\",\r\n    action: ({ onLogout }) => onLogout\r\n  }\r\n];\r\n\r\nconst MenuDrawer = ({ open, ...props }) => {\r\n  const classes = useStyles();\r\n  const userData = useQuery(USER);\r\n  const user = get(userData, \"data.user\", {});\r\n\r\n  return (\r\n    <>\r\n      <Slide in={open} direction=\"right\">\r\n        <div className={classes.MenuDrawer}>\r\n          <List>\r\n            <ListItem>\r\n              <Avatar src={user.avatar} alt={user.username} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary={user.username} secondary={user.email} />\r\n            </ListItem>\r\n          </List>\r\n          <List>\r\n            {menuSchema.map(({ title, link, action, icon }) => (\r\n              <ListItem\r\n                key={title}\r\n                button\r\n                to={link}\r\n                className={classes.MenuDrawer_listItem}\r\n                component={link ? Link : \"div\"}\r\n                onClick={action ? action(props) : undefined}\r\n              >\r\n                {icon}\r\n                <Typography variant=\"body2\" align={!!icon ? \"left\" : \"center\"}>\r\n                  {title}\r\n                </Typography>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Slide>\r\n      <Backdrop\r\n        open={open}\r\n        onClick={props.onToggle}\r\n        className={classes.MenuDrawer_backdrop}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuDrawer;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  Sidebar: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    maxWidth: theme.props.sidebar,\r\n    minWidth: theme.props.sidebarMin\r\n  },\r\n  Sidebar_header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  Sidebar_menuButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  Sidebar_searchbar: {\r\n    background:\r\n      theme.palette.type === \"dark\"\r\n        ? theme.lighten(theme.palette.background.default, 0.235)\r\n        : theme.darken(theme.palette.background.default, 0.057),\r\n    padding: `0 ${theme.spacing(1)}px`,\r\n    fontSize: theme.typography.body2.fontSize,\r\n    boxSizing: \"border-box\",\r\n    borderRadius: theme.shape.borderRadius\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { IconButton, InputBase } from \"@material-ui/core\";\r\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\r\nimport { useDebouncedCallback } from \"use-debounce\";\r\nimport MainBlock from \"components/MainBlock\";\r\nimport MenuDrawer from \"components/MenuDrawer\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst Sidebar = ({ onSearch, onLogout, renderChats, chatId }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    setSearch(\"\");\r\n    return () => setSearch(\"\");\r\n  }, [chatId]);\r\n\r\n  const [debounce] = useDebouncedCallback(value => onSearch(value), 200);\r\n\r\n  const handleChange = e => {\r\n    setSearch(e.target.value);\r\n    debounce(e.target.value);\r\n  };\r\n\r\n  const handleMenuToggle = () => setOpen(!open);\r\n\r\n  return (\r\n    <div className={classes.Sidebar}>\r\n      <MenuDrawer open={open} onToggle={handleMenuToggle} onLogout={onLogout} />\r\n      <MainBlock\r\n        header={\r\n          <div className={classes.Sidebar_header}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              className={classes.Sidebar_menuButton}\r\n              onClick={handleMenuToggle}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              size=\"small\"\r\n              placeholder=\"Search\"\r\n              className={classes.Sidebar_searchbar}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        }\r\n      >\r\n        {renderChats(search)}\r\n      </MainBlock>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Sidebar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { dispatchChatId, dispatchLogout } from \"redux/actions\";\r\nimport { useLazyQuery, useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { USER, USERS, DIRECTS } from \"graphql/queries\";\r\nimport { LOGOUT } from \"graphql/mutations\";\r\nimport { formatDate, pasreQuery } from \"utils/index\";\r\nimport ChatItem from \"components/ChatItem\";\r\nimport UserItem from \"components/UserItem\";\r\nimport Sidebar from \"components/Sidebar\";\r\n\r\nconst SidebarContainer = props => {\r\n  const [searchUsers, usersData] = useLazyQuery(USERS);\r\n  const directsData = useQuery(DIRECTS);\r\n  const userData = useQuery(USER);\r\n  const [onLogout, { client }] = useMutation(LOGOUT, {\r\n    onCompleted: () => {\r\n      client.resetStore();\r\n      props.dispatchLogout();\r\n    }\r\n  });\r\n\r\n  const chatId = pasreQuery(props.location).p;\r\n  console.log(\"sib\");\r\n\r\n  const onSearch = username => searchUsers({ variables: { username } });\r\n\r\n  const renderDirects = React.useCallback(() => {\r\n    const { data } = directsData;\r\n\r\n    if (!data) {\r\n      return null;\r\n    }\r\n\r\n    if (userData.loading) {\r\n      return null;\r\n    }\r\n\r\n    return data.directs.map(({ id, user, lastMessage, unread }) => (\r\n      <ChatItem\r\n        key={id}\r\n        unread={unread}\r\n        name={user.username}\r\n        avatar={user.avatar}\r\n        link={`/?p=${user.id}`}\r\n        lastMessage={lastMessage.text}\r\n        updatedAt={formatDate(lastMessage.createdAt)}\r\n        selected={user.id === chatId}\r\n        onClick={() => props.dispatchChatId(id)}\r\n      />\r\n    ));\r\n  }, [directsData, props.location]);\r\n\r\n  const renderUsers = () => {\r\n    const { data } = usersData;\r\n\r\n    if (!data) {\r\n      return null;\r\n    }\r\n\r\n    return data.users.map(({ id, username, avatar }) => (\r\n      <UserItem\r\n        key={username}\r\n        userId={id}\r\n        name={username}\r\n        avatar={avatar}\r\n        username={username}\r\n        link={`/?p=${id}`}\r\n      />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <Sidebar\r\n      chatId={chatId}\r\n      renderChats={search => (search.length ? renderUsers() : renderDirects())}\r\n      onSearch={onSearch}\r\n      onLogout={onLogout}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(\r\n  connect(null, {\r\n    dispatchChatId,\r\n    dispatchLogout\r\n  })(SidebarContainer)\r\n);\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SidebarContainer from \"containers/SidebarContainer\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    maxHeight: \"100vh\"\r\n  },\r\n  contentShift: {\r\n    width: \"100%\",\r\n    minWidth: theme.props.sidebarMin\r\n  }\r\n}));\r\n\r\nconst Layout = ({ children, ...props }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.container}>\r\n      <SidebarContainer {...props} />\r\n      <div className={classes.contentShift}>{children}</div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport Loadable from \"react-loadable\";\nimport { connect } from \"react-redux\";\nimport Layout from \"components/Layout\";\n\nconst createLoadableComponent = pathResolver => {\n  return Loadable({\n    loader: pathResolver,\n    loading: props => (props.error ? console.error(props.error) : null)\n  });\n};\n\nconst privatRoutes = [\n  {\n    path: \"/\",\n    exact: false,\n    component: createLoadableComponent(() => import(\"./pages/Home\"))\n  },\n  {\n    path: \"/create_team\",\n    exact: true,\n    component: createLoadableComponent(() => import(\"./pages/CreateTeam\"))\n  },\n  {\n    path: \"/verify\",\n    exact: true,\n    component: createLoadableComponent(() => import(\"./pages/VerifyUser\"))\n  }\n];\n\nconst publicRoutes = [\n  {\n    path: \"/(|registration)\",\n    exact: true,\n    component: createLoadableComponent(() => import(\"./pages/Login\"))\n  },\n  {\n    path: \"/verify\",\n    exact: true,\n    component: createLoadableComponent(() => import(\"./pages/VerifyUser\"))\n  },\n  { path: \"*\", component: Redirect }\n];\n\nconst App = props => {\n  return (\n    <Router>\n      <CssBaseline />\n      {props.isAuthorized ? (\n        <Layout>\n          {privatRoutes.map(route => (\n            <Route key={route.path} {...route} />\n          ))}\n        </Layout>\n      ) : (\n        <Switch>\n          {publicRoutes.map(route => (\n            <Route key={route.path} {...route} />\n          ))}\n        </Switch>\n      )}\n    </Router>\n  );\n};\n\nexport default connect(({ auth }) => ({ isAuthorized: auth.isAuthorized }))(\n  App\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { client } from \"./client\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { theme } from \"./theme\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { store } from \"redux/store\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nrender(\n  <ApolloProvider client={client}>\n    <ReduxProvider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </ReduxProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default {\r\n  auth: {\r\n    LOGIN: \"LOGIN\",\r\n    LOGOUT: \"LOGOUT\",\r\n    TYPE_MESSAGE: \"TYPE_MESSAGE\",\r\n    CHAT_ID: \"CHAT_ID\"\r\n  }\r\n};\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const USERS = gql`\r\n  query users($username: String) {\r\n    users(username: $username) {\r\n      id\r\n      email\r\n      avatar\r\n      username\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USER = gql`\r\n  {\r\n    user {\r\n      id\r\n      email\r\n      avatar\r\n      username\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DIRECTS = gql`\r\n  {\r\n    directs {\r\n      id\r\n      user {\r\n        id\r\n        email\r\n        avatar\r\n        username\r\n        createdAt\r\n      }\r\n      lastMessage {\r\n        id\r\n        text\r\n        user {\r\n          id\r\n        }\r\n        createdAt\r\n      }\r\n      unread\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DIRECT = gql`\r\n  query direct($userId: Int!) {\r\n    direct(userId: $userId) {\r\n      direct {\r\n        id\r\n        messages {\r\n          id\r\n          text\r\n          user {\r\n            id\r\n          }\r\n          createdAt\r\n        }\r\n      }\r\n      recipient {\r\n        id\r\n        email\r\n        avatar\r\n        username\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_MESSAGE = gql`\r\n  query deleteMessage($messageId: Int!) {\r\n    deleteMessage(messageId: $messageId)\r\n  }\r\n`;\r\n\r\nexport const NEW_MESSAGE = gql`\r\n  subscription($chatId: Int!) {\r\n    newMessage(chatId: $chatId) {\r\n      id\r\n      text\r\n      user {\r\n        id\r\n      }\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  Avatar: {\r\n    fontSize: theme.typography.body1.fontSize,\r\n    textTransform: \"uppercase\",\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { Avatar as MuiAvarat } from \"@material-ui/core/\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst Avatar = ({ alt = \"\", src }) => {\r\n  const classes = useStyles();\r\n  const name = alt\r\n    .split(\" \")\r\n    .map(x => x[0])\r\n    .slice(0, 2)\r\n    .join(\"\");\r\n\r\n  return (\r\n    <MuiAvarat\r\n      src={src}\r\n      // alt={alt}\r\n      className={classes.Avatar}\r\n      style={{ background: src }}\r\n    >\r\n      {name}\r\n    </MuiAvarat>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import qs from \"query-string\";\r\nimport React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nexport const stringifyQuery = (location, modifiers = {}) => {\r\n  const settings = {\r\n    arrayFormat: \"comma\",\r\n    skipNull: true,\r\n    parseNumbers: true\r\n  };\r\n\r\n  let query = {\r\n    ...qs.parse(location.search, settings),\r\n    ...modifiers\r\n  };\r\n\r\n  return {\r\n    ...location,\r\n    search: qs.stringify(query, settings)\r\n  };\r\n};\r\n\r\nexport const pasreQuery = location => {\r\n  const settings = {\r\n    arrayFormat: \"comma\",\r\n    skipNull: true,\r\n    parseNumbers: true\r\n  };\r\n  return qs.parse(location.search, settings);\r\n};\r\n\r\nexport const useRefCallback = value => {\r\n  const [bounding, setbounding] = React.useState({});\r\n\r\n  const ref = React.useCallback(node => {\r\n    if (!!node) {\r\n      setbounding(node.getBoundingClientRect());\r\n    }\r\n  }, []);\r\n\r\n  return [ref, bounding];\r\n};\r\n\r\nexport const formatDate = date => {\r\n  return moment(+date).format(\"DD.MM.YY\");\r\n};\r\n","import TYPES from \"redux/actions/types\";\r\n\r\nexport const dispatchLogin = payload => ({ type: TYPES.auth.LOGIN, payload });\r\n\r\nexport const dispatchLogout = () => ({ type: TYPES.auth.LOGOUT });\r\n\r\nexport const dispatchTypeMessage = payload => ({\r\n  type: TYPES.auth.TYPE_MESSAGE,\r\n  payload\r\n});\r\n\r\nexport const dispatchChatId = payload => ({\r\n  type: TYPES.auth.CHAT_ID,\r\n  payload\r\n});\r\n","export * from \"./auth\";\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const CREATE_USER = gql`\r\n  mutation($username: String!, $email: String!, $password: String!) {\r\n    createUser(username: $username, email: $email, password: $password)\r\n  }\r\n`;\r\n\r\nexport const LOGIN = gql`\r\n  mutation($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VERIFY_USER = gql`\r\n  mutation($secret: String!) {\r\n    verifyUser(secret: $secret) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_TEAM = gql`\r\n  mutation($name: String!) {\r\n    createTeam(name: $name)\r\n  }\r\n`;\r\n\r\nexport const CREATE_DIRECT = gql`\r\n  mutation($userId: Int!, $text: String!) {\r\n    createDirect(userId: $userId, text: $text) {\r\n      id\r\n      user {\r\n        id\r\n        email\r\n        avatar\r\n        username\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_MESSAGE = gql`\r\n  mutation($chatId: Int, $text: String!) {\r\n    createMessage(chatId: $chatId, text: $text)\r\n  }\r\n`;\r\n\r\nexport const LOGOUT = gql`\r\n  mutation {\r\n    logout\r\n  }\r\n`;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  MainBlock: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    overflow: \"hidden\",\r\n    background: theme.palette.background.paper,\r\n    borderRight: `1px solid ${theme.palette.divider}`\r\n  },\r\n  MainBlock_header: {\r\n    background: theme.palette.background.paper,\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    color: theme.palette.text.primary\r\n  },\r\n  MainBlock_content: {\r\n    height: \"100%\",\r\n    maxHeight: \"calc(100% - 64px)\",\r\n    overflowY: \"scroll\",\r\n    position: \"relative\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\"\r\n    }\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { Toolbar } from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst MainBlock = ({ header, children, show = true }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.MainBlock}>\r\n      {show && (\r\n        <>\r\n          <Toolbar className={classes.MainBlock_header}>{header}</Toolbar>\r\n          <div className={classes.MainBlock_content}>{children}</div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(MainBlock);\r\n"],"sourceRoot":""}