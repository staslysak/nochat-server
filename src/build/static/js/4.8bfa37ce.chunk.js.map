{"version":3,"sources":["../node_modules/@material-ui/core/esm/SvgIcon/index.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@material-ui/icons/Send.js","../node_modules/@material-ui/icons/utils/createSvgIcon.js","../node_modules/@babel/runtime/helpers/extends.js","components/ChatWindow/styles.js","components/ChatWindow/index.js","components/ChatWindow/ChatInput.js","components/Message/MessageMenu.js","components/Message/styles.js","components/Message/index.js","components/Fallback/styles.js","components/Fallback/index.js","components/DirectChat/styles.js","components/DirectChat/index.js","containers/DirectChatContainer.js","pages/Home/index.js"],"names":["module","exports","obj","__esModule","_interopRequireDefault","require","Object","defineProperty","value","default","_react","_default","createElement","d","path","displayName","Component","memo","forwardRef","props","ref","_SvgIcon","_extends2","process","muiName","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","useStyles","makeStyles","theme","ChatWindow","position","height","maxHeight","display","flexDirection","ChatWindow_input_wrapper","alignSelf","alignItems","width","borderTop","palette","divider","fontSize","typography","body2","ChatWindow_input","minHeight","padding","spacing","ChatWindow_empty","justifyContent","ChatWindow_content","overflow","background","type","lighten","darken","borderRadius","shape","classes","chatWindowRef","React","createRef","handleViewUpdate","useCallback","current","scrollTop","scrollHeight","children","useEffect","className","withRouter","inputRef","focus","location","InputBase","fullWidth","multiline","rowsMax","onChange","onKeyPress","placeholder","IconButton","onClick","a","handleOnClick","disabled","trim","MessageMenu","anchorEl","onClose","onDelete","onCopy","handleActions","callback","Menu","open","Boolean","MenuItem","dense","Message","maxWidth","bottom","content","wordWrap","overflowWrap","paddingBottom","minWidth","opacity","Message_content","margin","Message_content_receiver","Message_content_sender","Message_receiver","left","transform","borderBottom","borderLeft","Message_sender","secondary","main","color","getContrastText","right","borderRight","useState","contextMenu","setContextMenu","cx","isOwner","onContextMenu","e","preventDefault","currentTarget","Typography","variant","text","formatDate","date","menuProps","navigator","clipboard","writeText","DirectFallback","DirectChat_header","paddingLeft","paddingRight","DirectChat_header_status","DirectChat","message","setMessage","unsubsribe","chatId","subscribeToUserTyping","subscribeToNewMessage","subscribeToDeleteMessage","subscribeToDeleteDirect","subscribeToNewDirect","handleSendMessage","onCreateMessage","renderMessages","useMemo","messages","map","id","createdAt","userId","user","onDeleteMessage","MainBlock","show","header","recipient","username","ListItem","ListItemText","primary","primaryTypographyProps","component","typingUser","Typing","online","lastSeen","secondaryTypographyProps","Avatar","src","avatar","alt","onTyping","shiftKey","DirectChatContainer","useDirectChatFetch","queries","currentUser","currentDirect","mutations","createDirect","createMessage","deleteMessage","readMessage","userTyping","direct","get","useTyping","variables","onReadMessage","subscribeToMore","document","NEW_DIRECT_SUBSCRIPTION","updateQuery","prev","subscriptionData","data","newDirect","NEW_MESSAGE_SUBSCRIPTION","newMessage","console","log","DELETE_MESSAGE_SUBSCRIPTION","filter","DELETE_DIRECT_SUBSCRIPTION","deleteDirect","USER_TYPING_SUBSCRIPTION","setUser","Home","p","pasreQuery"],"mappings":"kGAAA,8D,kBCMAA,EAAOC,QANP,SAAgCC,GAC9B,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CACnC,QAAWA,K,iCCAf,IAAIE,EAAyBC,EAAQ,KAErCC,OAAOC,eAAeN,EAAS,aAAc,CAC3CO,OAAO,IAETP,EAAQQ,aAAU,EAElB,IAAIC,EAASN,EAAuBC,EAAQ,IAIxCM,GAAW,EAFMP,EAAuBC,EAAQ,MAElBI,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,0CACD,QAEJZ,EAAQQ,QAAUE,G,iCCflB,IAAIP,EAAyBC,EAAQ,KAErCC,OAAOC,eAAeN,EAAS,aAAc,CAC3CO,OAAO,IAETP,EAAQQ,QAQR,SAAuBK,EAAMC,GAC3B,IAAIC,EAAYN,EAAOD,QAAQQ,KAAKP,EAAOD,QAAQS,YAAW,SAAUC,EAAOC,GAC7E,OAAOV,EAAOD,QAAQG,cAAcS,EAASZ,SAAS,EAAIa,EAAUb,SAAS,CAC3EW,IAAKA,GACJD,GAAQL,OAGTS,EAKJ,OADAP,EAAUQ,QAAUH,EAASZ,QAAQe,QAC9BR,GAlBT,IAAIM,EAAYlB,EAAuBC,EAAQ,MAE3CK,EAASN,EAAuBC,EAAQ,IAExCgB,EAAWjB,EAAuBC,EAAQ,O,kBCb9C,SAASoB,IAeP,OAdAzB,EAAOC,QAAUwB,EAAWnB,OAAOoB,QAAU,SAAUC,GACrD,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVzB,OAAO2B,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,GAGFF,EAASW,MAAMC,KAAMR,WAG9B7B,EAAOC,QAAUwB,G,2LCwCFa,EAxDGC,aAAW,SAAAC,GAAK,MAAK,CACrCC,WAAY,CACVC,SAAU,WACVC,OAAQ,OACRC,UAAW,oBACXC,QAAS,OACTC,cAAe,UAEjBC,yBAA0B,CACxBC,UAAW,WACXH,QAAS,OACTI,WAAY,SACZC,MAAO,OACPC,UAAU,aAAD,OAAeX,EAAMY,QAAQC,SACtC,uBAAwB,CACtBC,SAAUd,EAAMe,WAAWC,MAAMF,WAGrCG,iBAAkB,CAChBC,UAAW,GACXC,QAAQ,GAAD,OAAKnB,EAAMoB,QAAQ,GAAnB,cAA2BpB,EAAMoB,QAAQ,KAAzC,cAAmDpB,EAAMoB,QAC9D,IADK,cAEApB,EAAMoB,QAAQ,GAFd,MAGP,iCAAkC,CAChC,uBAAwB,CAAEf,QAAS,UAGvCgB,iBAAkB,CAChBlB,OAAQ,OACRE,QAAS,OACTI,WAAY,SACZa,eAAgB,UAElBC,mBAAoB,CAClBlB,QAAS,OACTC,cAAe,SACfH,OAAQ,OACRqB,SAAU,OACVC,WAAY,cACZN,QAASnB,EAAMoB,QAAQ,GACvB,uBAAwB,CACtBV,MAAO,EACPe,WAAY,cACZ,UAAW,CACTA,WACyB,SAAvBzB,EAAMY,QAAQc,KACV1B,EAAM2B,QAAQ3B,EAAMY,QAAQa,WAAWxD,QAAS,MAChD+B,EAAM4B,OAAO5B,EAAMY,QAAQa,WAAWxD,QAAS,MACrD4D,aAAyC,EAA3B7B,EAAM8B,MAAMD,aAC1BxB,QAAS,SAGb,mCAAoC,CAAEA,QAAS,cC5BpCJ,EAvBI,SAACtB,GAClB,IAAMoD,EAAUjC,IACVkC,EAAgBC,IAAMC,YAEtBC,EAAmBF,IAAMG,aAAY,WACrCJ,EAAcK,UAChBL,EAAcK,QAAQC,UAAYN,EAAcK,QAAQE,gBAEzD,CAAC5D,EAAM6D,WAMV,OAJAP,IAAMQ,WAAU,WACdN,MACC,CAACH,EAAeG,IAGjB,yBAAKO,UAAWX,EAAQ9B,YACtB,yBAAKyC,UAAWX,EAAQR,mBAAoB3C,IAAKoD,GAC9CrD,EAAM6D,Y,4CC0BAG,eAxCG,SAAChE,GACjB,IAAMoD,EAAUjC,IACV8C,EAAWX,IAAMC,YAEvBD,IAAMQ,WAAU,WACVG,EAASP,SACXO,EAASP,QAAQQ,UAElB,CAAClE,EAAMmE,WASV,OACE,yBAAKJ,UAAWX,EAAQxB,0BACtB,kBAACwC,EAAA,EAAD,CACEC,WAAS,EACTC,WAAS,EACTC,QAAS,EACTN,SAAUA,EACV5E,MAAOW,EAAMX,MACbmF,SAAUxE,EAAMwE,SAChBC,WAAYzE,EAAMyE,WAClBC,YAAY,qBACZX,UAAWX,EAAQd,mBAErB,kBAACqC,EAAA,EAAD,CACEC,QArBgB,SAACX,GAAD,6BAAc,sBAAAY,EAAA,sDAC9BZ,EAASP,SACXO,EAASP,QAAQQ,QAEnBlE,EAAM4E,UAJ4B,2CAqBrBE,CAAcb,GACvBc,UAAW/E,EAAMX,MAAM2F,OAAOrE,QAE9B,kBAAC,IAAD,W,2CCbOsE,EAxBK,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC5CC,EAAgB,SAACC,GAAD,OAAc,WAClCA,IACAJ,MAGF,OACE,kBAACK,EAAA,EAAD,CAGEN,SAAUA,EACVO,KAAMC,QAAQR,GACdC,QAASA,GAET,kBAACQ,EAAA,EAAD,CAAUC,OAAK,EAAChB,QAASU,EAAcF,IAAvC,kBAGA,kBAACO,EAAA,EAAD,CAAUC,OAAK,EAAChB,QAASU,EAAcD,IAAvC,eClBOlE,EAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CwE,QAAS,CACPnE,QAAS,OACTH,SAAU,WACVuE,SAAU,MACVtD,QAAQ,GAAD,OAAKnB,EAAMoB,QAAQ,GAAnB,cAA2BpB,EAAMoB,QAAQ,KAAzC,cAAmDpB,EAAMoB,QAC9D,IADK,MAGPS,aAAyC,EAA3B7B,EAAM8B,MAAMD,aAC1B,WAAY,CACV3B,SAAU,WACVwE,QAAS,EACThE,MAAO,GACPP,OAAQ,GACRwE,QAAS,MAEX,MAAO,CACLnE,UAAW,WACXoE,SAAU,aACVC,aAAc,aACdC,cAAe9E,EAAMoB,QAAQ,GAC7B2D,SAAU,IAEZ,SAAU,CACRvE,UAAW,WACXwE,QAAS,MAGbC,gBAAiB,CACf5E,QAAS,OACT6E,OAAO,GAAD,OAAKlF,EAAMoB,QAAQ,GAAnB,SAER+D,yBAA0B,CACxB7D,eAAgB,cAElB8D,uBAAwB,CACtB9D,eAAgB,YAElB+D,iBAAkB,CAChB5D,WACyB,SAAvBzB,EAAMY,QAAQc,KACV1B,EAAM2B,QAAQ3B,EAAMY,QAAQa,WAAWxD,QAAS,MAChD+B,EAAM4B,OAAO5B,EAAMY,QAAQa,WAAWxD,QAAS,MACrD,WAAY,CACVqH,MAAO,GACPC,UAAW,iBACXC,aAAa,cAAD,OACa,SAAvBxF,EAAMY,QAAQc,KACV1B,EAAM2B,QAAQ3B,EAAMY,QAAQa,WAAWxD,QAAS,MAChD+B,EAAM4B,OAAO5B,EAAMY,QAAQa,WAAWxD,QAAS,OAErDwH,WAAY,2BAGhBC,eAAgB,CACdjE,WAAYzB,EAAMY,QAAQ+E,UAAUC,KACpCC,MAAO7F,EAAMY,QAAQkF,gBAAgB9F,EAAMY,QAAQ+E,UAAUC,MAC7D,WAAY,CACVG,OAAQ,GACRR,UAAW,gBACXC,aAAa,cAAD,OAAgBxF,EAAMY,QAAQ+E,UAAUC,MACpDI,YAAa,+BCTJxB,EA/CC,SAAC7F,GAAW,IAAD,IACnBoD,EAAUjC,IADS,EAEamC,IAAMgE,SAAS,MAF5B,mBAElBC,EAFkB,KAELC,EAFK,KAezB,OACE,yBACEzD,UAAW0D,IAAGrE,EAAQkD,iBAAT,mBACVlD,EAAQqD,uBAAyBzG,EAAM0H,SAD7B,cAEVtE,EAAQoD,0BAA4BxG,EAAM0H,SAFhC,KAKb,yBACEC,cAjBa,SAACC,GAClBA,EAAEC,iBACFL,EAAeI,EAAEE,gBAgBb/D,UAAW0D,IAAGrE,EAAQyC,SAAT,mBACVzC,EAAQ2D,eAAiB/G,EAAM0H,SADrB,cAEVtE,EAAQsD,kBAAoB1G,EAAM0H,SAFxB,KAKb,kBAACK,EAAA,EAAD,CAAYC,QAAQ,SACjBhI,EAAMiI,MAKT,kBAACF,EAAA,EAAD,CAAYC,QAAQ,WAAWE,YAAWlI,EAAMmI,QAElD,kBAAC,EAAD,eACEjD,SAAUqC,EACVpC,QAnCc,kBAAMqC,EAAe,QAoC/BxH,EAAMoI,UAHZ,CAIE/C,OA9BoB,WACxBgD,UAAUC,UAAUC,UAAUvI,EAAMiI,YCjB3B9G,EAAYC,aAAW,SAAAC,GAAK,MAAK,CAC5CmH,eAAgB,CACdhH,OAAQ,OACRE,QAAS,OACTiB,eAAgB,SAChBb,WAAY,cCHH0G,EAAiB,WAC5B,IAAMpF,EAAUjC,IAEhB,OACE,yBAAK4C,UAAWX,EAAQoF,gBACtB,kBAACT,EAAA,EAAD,CAAYC,QAAQ,SAApB,6B,SCPO7G,EAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CoH,kBAAmB,CACjB1G,MAAO,OACP2G,YAAa,EACbC,aAAc,GAEhBC,yBAA0B,CACxB1B,MAAO7F,EAAMY,QAAQ+E,UAAU,UCqIpB6B,EAhII,SAAC7I,GAClB,IAAMoD,EAAUjC,IADY,EAEEmC,IAAMgE,SAAS,IAFjB,mBAErBwB,EAFqB,KAEZC,EAFY,KAI5BzF,IAAMQ,WAAU,WACd,IAAIkF,EAAa,aAEjB,OADIhJ,EAAMiJ,SAAQD,EAAahJ,EAAMkJ,sBAAsBlJ,EAAMiJ,SAC1D,kBAAMD,EAAWhJ,EAAMiJ,WAC7B,CAACjJ,EAAMiJ,SAEV3F,IAAMQ,WAAU,WACd,IAAIkF,EAAa,aAEjB,OADIhJ,EAAMiJ,SAAQD,EAAahJ,EAAMmJ,sBAAsBnJ,EAAMiJ,SAC1D,kBAAMD,EAAWhJ,EAAMiJ,WAC7B,CAACjJ,EAAMiJ,SAEV3F,IAAMQ,WAAU,WACd,IAAIkF,EAAa,aAEjB,OADIhJ,EAAMiJ,SAAQD,EAAahJ,EAAMoJ,yBAAyBpJ,EAAMiJ,SAC7D,kBAAMD,EAAWhJ,EAAMiJ,WAC7B,CAACjJ,EAAMiJ,SAEV3F,IAAMQ,WAAU,WACd,IAAIkF,EAAa,aAEjB,OADIhJ,EAAMiJ,SAAQD,EAAahJ,EAAMqJ,wBAAwBrJ,EAAMiJ,SAC5D,kBAAMD,EAAWhJ,EAAMiJ,WAC7B,CAACjJ,EAAMiJ,SAEV3F,IAAMQ,WAAU,WACd,IAAIkF,EAAahJ,EAAMsJ,uBACvB,OAAO,kBAAMN,OACZ,IAEH,IAAMO,EAAoB,WACpBT,EAAQ9D,OAAOrE,QACjBX,EAAMwJ,gBAAgBV,GAExBC,EAAW,KA8BPU,EAAiBnG,IAAMoG,SAC3B,kBACE1J,EAAM2J,UACN3J,EAAM2J,SAASC,KAAI,SAACd,GAAD,OAKjB,kBAAC,EAAD,CACEjI,IAAKiI,EAAQe,GACb5B,KAAMa,EAAQb,KACdE,KAAMW,EAAQgB,UACdpC,QAASoB,EAAQiB,SAAW/J,EAAMgK,KAAKH,GACvCzB,UAAW,CACThD,SAAUpF,EAAMiK,gBAAgBnB,EAAQe,YAKhD,CAAC7J,EAAM2J,WAGT,OACE,kBAACO,EAAA,EAAD,CACEC,KAAMnK,EAAMmK,KACZC,OACEpK,EAAMqK,UAAUC,UACd,kBAACC,EAAA,EAAD,CAAU3E,OAAK,EAAC7B,UAAWX,EAAQqF,mBACjC,kBAAC+B,EAAA,EAAD,CACEC,QAASzK,EAAMqK,UAAUC,SACzBI,uBAAwB,CAAEC,UAAW,OACrC3D,UArCNhH,EAAM4K,WAAmB,kBAACC,EAAA,EAAD,CAAQ7C,QAAQ,cACzChI,EAAMqK,UAAUS,OAAe,SAE5B5C,YAAWlI,EAAMqK,UAAUU,SAAU,cAmClCC,yBAA0B,CACxBhD,QAAS,UACTjE,UAAW0D,IAAG,eACXrE,EAAQwF,yBAA2B5I,EAAMqK,UAAUS,YAI1D,kBAACG,EAAA,EAAD,CACEC,IAAKlL,EAAMqK,UAAUc,OACrBC,IAAKpL,EAAMqK,UAAUC,SACrBQ,OAAQ9K,EAAMqK,UAAUS,WAMhC,kBAAC,EAAD,KACI9K,EAAM2J,SAAgCF,EAArB,kBAAC,EAAD,OAErB,kBAAC,EAAD,CACEpK,MAAOyJ,EACPtE,SAhFe,SAACoD,GAChB5H,EAAMiJ,QACRjJ,EAAMqL,WAERtC,EAAWnB,EAAEpH,OAAOnB,QA6EhBoF,WA1EiB,SAACmD,GACR,UAAVA,EAAE/G,KAAoB+G,EAAE0D,WAC1B1D,EAAEC,iBACF0B,MAwEE3E,QAAS2E,M,SC8CFgC,EA1Ka,SAAC,GAAgB,IAAdxB,EAAa,EAAbA,OAAa,EAUtCyB,YAAmB,CAAEzB,WAViB,IAExC0B,QAAWC,EAF6B,EAE7BA,YAAaC,EAFgB,EAEhBA,cAFgB,IAGxCC,UACEC,EAJsC,EAItCA,aACAC,EALsC,EAKtCA,cACAC,EANsC,EAMtCA,cACAC,EAPsC,EAOtCA,YACAC,EARsC,EAQtCA,WAIEC,EAASC,YAAIR,EAAe,4BAA6B,IACzDtB,EAAY8B,YAAIR,EAAe,+BAAgC,IAb3B,EAeXS,YAC7B,CACEnD,OAAQkD,YAAID,EAAQ,MACpB5B,SAAU6B,YAAIT,EAAa,mBAAoB,IAAIpB,WAErD,SAAC+B,GAAD,OAAeJ,EAAW,CAAEI,iBApBY,mBAenCzB,EAfmC,KAevBS,EAfuB,KA+HpC7B,EAAe,uCAAG,WAAOvB,GAAP,SAAApD,EAAA,yDACjBqH,EADiB,gCAEdL,EAAa,CAAEQ,UAAW,CAAEpE,OAAM8B,OAAQM,EAAUR,MAFtC,6CAIdiC,EAAc,CAAEO,UAAW,CAAEpE,OAAMgB,OAAQiD,EAAOrC,MAJpC,uBAKdoC,EAAW,CACfI,UAAW,CACTpD,OAAQkD,YAAID,EAAQ,MACpB5B,SAAU,MARM,2CAAH,sDAkBrB,OACE,kBAAC,EAAD,CACEN,KAAMmC,YAAIT,EAAa,mBAAoB,IAC3CvB,OAAQJ,EACRd,OAAQkD,YAAID,EAAQ,MACpB7B,UAAWA,EACXV,SAAUwC,YAAID,EAAQ,YACtBtB,WACEA,EAAWZ,OAASmC,YAAIT,EAAa,mBAAoB,IAAIpB,SACzD,GACAM,EAAWZ,KAEjBqB,SAAUA,EACV7B,gBAAiBA,EACjBS,gBAlBoB,SAACJ,GAAD,OAAQ,WAC9BkC,EAAc,CAAEM,UAAW,CAAExC,UAkB3ByC,cAAe,SAACzC,GAAD,OAAQmC,EAAY,CAAEK,UAAW,CAAExC,SAClDP,qBApHyB,WAC3B,OAAOqC,EAAcY,gBAAgB,CACnCC,SAAUC,IACVC,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiBC,KAAM,OAAOF,EADQ,IAEnCG,EAAcF,EAAiBC,KAA/BC,UAIR,MAAO,CACLnB,cAAc,eACTgB,EAAKhB,cADG,CAEXO,OAAQY,SAyGd3D,sBA3I0B,SAACF,GAC7B,OAAO0C,EAAcY,gBAAgB,CACnCC,SAAUO,IACVV,UAAW,CAAEpD,UACbyD,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiBC,KAAM,OAAOF,EADQ,IAEnCK,EAAeJ,EAAiBC,KAAhCG,WAGR,OAFAC,QAAQC,IAAIF,GAEL,CACLrB,cAAc,eACTgB,EAAKhB,cADG,CAEXO,OAAO,eACFS,EAAKhB,cAAcO,OADlB,CAEJvC,SAAS,GAAD,mBAAMgD,EAAKhB,cAAcO,OAAOvC,UAAhC,CAA0CqD,aA8H1D5D,yBAlG6B,SAACH,GAChC,OAAO0C,EAAcY,gBAAgB,CACnCC,SAAUW,IACVd,UAAW,CAAEpD,UACbyD,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiBC,KAAM,OAAOF,EADQ,IAEnCZ,EAAkBa,EAAiBC,KAAnCd,cAEFpC,EAAWgD,EAAKhB,cAAcO,OAAOvC,SAASyD,QAClD,SAACtE,GAAD,OAAaA,EAAQe,KAAOkC,EAAclC,MAG5C,MAAO,CACL8B,cAAc,eACTgB,EAAKhB,cADG,CAEXO,OAAO,eAAMS,EAAKhB,cAAcO,OAA1B,CAAkCvC,oBAoF9CN,wBA7E4B,SAACJ,GAC/B,OAAO0C,EAAcY,gBAAgB,CACnCC,SAAUa,IACVhB,UAAW,CAAEpD,UACbyD,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,OAAKA,EAAiBC,MACGD,EAAiBC,KAAlCS,aAESzD,KAAOZ,EACf,CACL0C,cAAc,eAAMgB,EAAKhB,cAAZ,CAA2BO,OAAQ,QALjBS,MAyErCzD,sBA3D0B,SAACD,GAC7B,OAAO0C,EAAcY,gBAAgB,CACnCC,SAAUe,IACVlB,UAAW,CAAEpD,UACbyD,YAAa,SAACC,EAAD,GAAiC,IAAxBC,EAAuB,EAAvBA,iBACpB,IAAKA,EAAiBC,KAAM,OAAOF,EADQ,IAEnCV,EAAeW,EAAiBC,KAAhCZ,WAUR,OARArB,EAAW4C,QAAQvB,GAQZU,SC5HAc,UANF,SAAAzN,GAAU,IACb0N,EAAMC,YAAW3N,EAAMmE,UAAvBuJ,EAER,OAAO,kBAAC,EAAD,CAAqB3D,OAAQ2D","file":"static/js/4.8bfa37ce.chunk.js","sourcesContent":["export { default } from './SvgIcon';","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createSvgIcon;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _SvgIcon = _interopRequireDefault(require(\"@material-ui/core/SvgIcon\"));\n\nfunction createSvgIcon(path, displayName) {\n  var Component = _react.default.memo(_react.default.forwardRef(function (props, ref) {\n    return _react.default.createElement(_SvgIcon.default, (0, _extends2.default)({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = _SvgIcon.default.muiName;\n  return Component;\n}","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  ChatWindow: {\r\n    position: \"relative\",\r\n    height: \"100%\",\r\n    maxHeight: \"calc(100% - 65px)\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  ChatWindow_input_wrapper: {\r\n    alignSelf: \"flex-end\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    borderTop: `1px solid ${theme.palette.divider}`,\r\n    \"& .MuiInputBase-root\": {\r\n      fontSize: theme.typography.body2.fontSize\r\n    }\r\n  },\r\n  ChatWindow_input: {\r\n    minHeight: 64,\r\n    padding: `${theme.spacing(1)}px ${theme.spacing(1.5)}px ${theme.spacing(\r\n      0.5\r\n    )}px ${theme.spacing(2)}px`,\r\n    \"& .MuiInputBase-inputMultiline\": {\r\n      \"&::-webkit-scrollbar\": { display: \"none\" }\r\n    }\r\n  },\r\n  ChatWindow_empty: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  ChatWindow_content: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    height: \"100%\",\r\n    overflow: \"auto\",\r\n    background: \"transparent\",\r\n    padding: theme.spacing(2),\r\n    \"&::-webkit-scrollbar\": {\r\n      width: 5,\r\n      background: \"transparent\",\r\n      \"&-thumb\": {\r\n        background:\r\n          theme.palette.type === \"dark\"\r\n            ? theme.lighten(theme.palette.background.default, 0.235)\r\n            : theme.darken(theme.palette.background.default, 0.057),\r\n        borderRadius: theme.shape.borderRadius * 3,\r\n        display: \"none\"\r\n      }\r\n    },\r\n    \"&:hover::-webkit-scrollbar-thumb\": { display: \"block\" }\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst ChatWindow = (props) => {\r\n  const classes = useStyles();\r\n  const chatWindowRef = React.createRef();\r\n\r\n  const handleViewUpdate = React.useCallback(() => {\r\n    if (chatWindowRef.current) {\r\n      chatWindowRef.current.scrollTop = chatWindowRef.current.scrollHeight;\r\n    }\r\n  }, [props.children]);\r\n\r\n  React.useEffect(() => {\r\n    handleViewUpdate();\r\n  }, [chatWindowRef, handleViewUpdate]);\r\n\r\n  return (\r\n    <div className={classes.ChatWindow}>\r\n      <div className={classes.ChatWindow_content} ref={chatWindowRef}>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n","import React from \"react\";\r\nimport { InputBase, IconButton } from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport useStyles from \"./styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ChatInput = (props) => {\r\n  const classes = useStyles();\r\n  const inputRef = React.createRef();\r\n\r\n  React.useEffect(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [props.location]);\r\n\r\n  const handleOnClick = (inputRef) => async () => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n    props.onClick();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.ChatWindow_input_wrapper}>\r\n      <InputBase\r\n        fullWidth\r\n        multiline\r\n        rowsMax={5}\r\n        inputRef={inputRef}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        onKeyPress={props.onKeyPress}\r\n        placeholder=\"Write a message...\"\r\n        className={classes.ChatWindow_input}\r\n      />\r\n      <IconButton\r\n        onClick={handleOnClick(inputRef)}\r\n        disabled={!props.value.trim().length}\r\n      >\r\n        <SendIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(ChatInput);\r\n","import React from \"react\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\n\r\nconst MessageMenu = ({ anchorEl, onClose, onDelete, onCopy }) => {\r\n  const handleActions = (callback) => () => {\r\n    callback();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      // keepMounted\r\n      // anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n      anchorEl={anchorEl}\r\n      open={Boolean(anchorEl)}\r\n      onClose={onClose}\r\n    >\r\n      <MenuItem dense onClick={handleActions(onDelete)}>\r\n        Delete Message\r\n      </MenuItem>\r\n      <MenuItem dense onClick={handleActions(onCopy)}>\r\n        Copy Text\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MessageMenu;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  Message: {\r\n    display: \"flex\",\r\n    position: \"relative\",\r\n    maxWidth: \"70%\",\r\n    padding: `${theme.spacing(1)}px ${theme.spacing(1.5)}px ${theme.spacing(\r\n      0.5\r\n    )}px`,\r\n    borderRadius: theme.shape.borderRadius * 3,\r\n    \"&:before\": {\r\n      position: \"absolute\",\r\n      bottom: -1,\r\n      width: 15,\r\n      height: 20,\r\n      content: \"''\",\r\n    },\r\n    \"& p\": {\r\n      alignSelf: \"flex-end\",\r\n      wordWrap: \"break-word\",\r\n      overflowWrap: \"break-word\",\r\n      paddingBottom: theme.spacing(2),\r\n      minWidth: 20,\r\n    },\r\n    \"& span\": {\r\n      alignSelf: \"flex-end\",\r\n      opacity: 0.54,\r\n    },\r\n  },\r\n  Message_content: {\r\n    display: \"flex\",\r\n    margin: `${theme.spacing(1)}px 0`,\r\n  },\r\n  Message_content_receiver: {\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  Message_content_sender: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  Message_receiver: {\r\n    background:\r\n      theme.palette.type === \"dark\"\r\n        ? theme.lighten(theme.palette.background.default, 0.235)\r\n        : theme.darken(theme.palette.background.default, 0.057),\r\n    \"&:before\": {\r\n      left: -10,\r\n      transform: \"rotate(-15deg)\",\r\n      borderBottom: `15px solid ${\r\n        theme.palette.type === \"dark\"\r\n          ? theme.lighten(theme.palette.background.default, 0.235)\r\n          : theme.darken(theme.palette.background.default, 0.057)\r\n      }`,\r\n      borderLeft: \"15px solid transparent\",\r\n    },\r\n  },\r\n  Message_sender: {\r\n    background: theme.palette.secondary.main,\r\n    color: theme.palette.getContrastText(theme.palette.secondary.main),\r\n    \"&:before\": {\r\n      right: -10,\r\n      transform: \"rotate(15deg)\",\r\n      borderBottom: `15px solid ${theme.palette.secondary.main}`,\r\n      borderRight: \"15px solid transparent\",\r\n    },\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\"; // Link\r\nimport cx from \"classnames\";\r\nimport { formatDate } from \"utils/index\";\r\nimport MessageMenu from \"./MessageMenu\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst Message = (props) => {\r\n  const classes = useStyles();\r\n  const [contextMenu, setContextMenu] = React.useState(null);\r\n\r\n  const handleClose = () => setContextMenu(null);\r\n\r\n  const handleOpen = (e) => {\r\n    e.preventDefault();\r\n    setContextMenu(e.currentTarget);\r\n  };\r\n\r\n  const handleCopyMessage = () => {\r\n    navigator.clipboard.writeText(props.text);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cx(classes.Message_content, {\r\n        [classes.Message_content_sender]: props.isOwner,\r\n        [classes.Message_content_receiver]: !props.isOwner,\r\n      })}\r\n    >\r\n      <div\r\n        onContextMenu={handleOpen}\r\n        className={cx(classes.Message, {\r\n          [classes.Message_sender]: props.isOwner,\r\n          [classes.Message_receiver]: !props.isOwner,\r\n        })}\r\n      >\r\n        <Typography variant=\"body2\">\r\n          {props.text}\r\n          {/* <Link href=\"#\" color=\"inherit\" underline=\"always\">\r\n            some@gmail.com\r\n          </Link> */}\r\n        </Typography>\r\n        <Typography variant=\"caption\">{formatDate(props.date)}</Typography>\r\n      </div>\r\n      <MessageMenu\r\n        anchorEl={contextMenu}\r\n        onClose={handleClose}\r\n        {...props.menuProps}\r\n        onCopy={handleCopyMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  DirectFallback: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nexport const DirectFallback = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.DirectFallback}>\r\n      <Typography variant=\"body2\">No messages here yet...</Typography>\r\n    </div>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  DirectChat_header: {\r\n    width: \"100%\",\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n  },\r\n  DirectChat_header_status: {\r\n    color: theme.palette.secondary[200],\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { ListItem, ListItemText } from \"@material-ui/core\";\r\nimport { formatDate } from \"utils/index\";\r\nimport MainBlock from \"components/MainBlock\";\r\nimport Avatar from \"components/Avatar\";\r\nimport ChatWindow from \"components/ChatWindow\";\r\nimport ChatInput from \"components/ChatWindow/ChatInput\";\r\nimport Message from \"components/Message\";\r\nimport { DirectFallback } from \"components/Fallback\";\r\nimport Typing from \"components/Typing\";\r\nimport { useStyles } from \"./styles\";\r\nimport cx from \"classnames\";\r\n// import VisibilitySenson from \"react-visibility-sensor\";\r\n\r\nconst DirectChat = (props) => {\r\n  const classes = useStyles();\r\n  const [message, setMessage] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    let unsubsribe = () => {};\r\n    if (props.chatId) unsubsribe = props.subscribeToUserTyping(props.chatId);\r\n    return () => unsubsribe(props.chatId);\r\n  }, [props.chatId]);\r\n\r\n  React.useEffect(() => {\r\n    let unsubsribe = () => {};\r\n    if (props.chatId) unsubsribe = props.subscribeToNewMessage(props.chatId);\r\n    return () => unsubsribe(props.chatId);\r\n  }, [props.chatId]);\r\n\r\n  React.useEffect(() => {\r\n    let unsubsribe = () => {};\r\n    if (props.chatId) unsubsribe = props.subscribeToDeleteMessage(props.chatId);\r\n    return () => unsubsribe(props.chatId);\r\n  }, [props.chatId]);\r\n\r\n  React.useEffect(() => {\r\n    let unsubsribe = () => {};\r\n    if (props.chatId) unsubsribe = props.subscribeToDeleteDirect(props.chatId);\r\n    return () => unsubsribe(props.chatId);\r\n  }, [props.chatId]);\r\n\r\n  React.useEffect(() => {\r\n    let unsubsribe = props.subscribeToNewDirect();\r\n    return () => unsubsribe();\r\n  }, []);\r\n\r\n  const handleSendMessage = () => {\r\n    if (message.trim().length) {\r\n      props.onCreateMessage(message);\r\n    }\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (props.chatId) {\r\n      props.onTyping();\r\n    }\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\" && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  // const handleOnReadMessage = (isVisible) => {\r\n  //   console.log(isVisible, message.text, message);\r\n  //   console.log(isVisible && message.unread);\r\n  //   if (isVisible && message.unread) props.onReadMessage(message.id);\r\n  // };\r\n\r\n  const renderStatus = () => {\r\n    if (props.typingUser) return <Typing variant=\"secondary\" />;\r\n    if (props.recipient.online) return \"online\";\r\n\r\n    return formatDate(props.recipient.lastSeen, \"last seen \");\r\n  };\r\n\r\n  const renderMessages = React.useMemo(\r\n    () =>\r\n      props.messages &&\r\n      props.messages.map((message) => (\r\n        // <VisibilitySenson\r\n        //   offset={{ top: 32, bottom: 32 }}\r\n        //   onChange={handleOnReadMessage}\r\n        // >\r\n        <Message\r\n          key={message.id}\r\n          text={message.text}\r\n          date={message.createdAt}\r\n          isOwner={message.userId === props.user.id}\r\n          menuProps={{\r\n            onDelete: props.onDeleteMessage(message.id),\r\n          }}\r\n        />\r\n        // </VisibilitySenson>\r\n      )),\r\n    [props.messages]\r\n  );\r\n\r\n  return (\r\n    <MainBlock\r\n      show={props.show}\r\n      header={\r\n        props.recipient.username && (\r\n          <ListItem dense className={classes.DirectChat_header}>\r\n            <ListItemText\r\n              primary={props.recipient.username}\r\n              primaryTypographyProps={{ component: \"div\" }}\r\n              secondary={renderStatus()}\r\n              secondaryTypographyProps={{\r\n                variant: \"caption\",\r\n                className: cx({\r\n                  [classes.DirectChat_header_status]: props.recipient.online,\r\n                }),\r\n              }}\r\n            />\r\n            <Avatar\r\n              src={props.recipient.avatar}\r\n              alt={props.recipient.username}\r\n              online={props.recipient.online}\r\n            />\r\n          </ListItem>\r\n        )\r\n      }\r\n    >\r\n      <ChatWindow>\r\n        {!props.messages ? <DirectFallback /> : renderMessages}\r\n      </ChatWindow>\r\n      <ChatInput\r\n        value={message}\r\n        onChange={handleChange}\r\n        onKeyPress={handleKeyPress}\r\n        onClick={handleSendMessage}\r\n      />\r\n    </MainBlock>\r\n  );\r\n};\r\n\r\nexport default DirectChat;\r\n","import React from \"react\";\r\nimport {\r\n  NEW_MESSAGE_SUBSCRIPTION,\r\n  NEW_DIRECT_SUBSCRIPTION,\r\n  DELETE_MESSAGE_SUBSCRIPTION,\r\n  DELETE_DIRECT_SUBSCRIPTION,\r\n  USER_TYPING_SUBSCRIPTION,\r\n} from \"graphql/subscriptions\";\r\nimport { get } from \"lodash-es\";\r\nimport DirectChat from \"components/DirectChat\";\r\nimport { useDirectChatFetch, useTyping } from \"hooks/index\";\r\n\r\nconst DirectChatContainer = ({ userId }) => {\r\n  const {\r\n    queries: { currentUser, currentDirect },\r\n    mutations: {\r\n      createDirect,\r\n      createMessage,\r\n      deleteMessage,\r\n      readMessage,\r\n      userTyping,\r\n    },\r\n  } = useDirectChatFetch({ userId });\r\n\r\n  const direct = get(currentDirect, \"data.currentDirect.direct\", {});\r\n  const recipient = get(currentDirect, \"data.currentDirect.recipient\", {});\r\n\r\n  const [typingUser, onTyping] = useTyping(\r\n    {\r\n      chatId: get(direct, \"id\"),\r\n      username: get(currentUser, \"data.currentUser\", {}).username,\r\n    },\r\n    (variables) => userTyping({ variables })\r\n  );\r\n\r\n  const subscribeToNewMessage = (chatId) => {\r\n    return currentDirect.subscribeToMore({\r\n      document: NEW_MESSAGE_SUBSCRIPTION,\r\n      variables: { chatId },\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n        const { newMessage } = subscriptionData.data;\r\n        console.log(newMessage);\r\n\r\n        return {\r\n          currentDirect: {\r\n            ...prev.currentDirect,\r\n            direct: {\r\n              ...prev.currentDirect.direct,\r\n              messages: [...prev.currentDirect.direct.messages, newMessage],\r\n            },\r\n          },\r\n        };\r\n      },\r\n    });\r\n  };\r\n\r\n  const subscribeToNewDirect = () => {\r\n    return currentDirect.subscribeToMore({\r\n      document: NEW_DIRECT_SUBSCRIPTION,\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n        const { newDirect } = subscriptionData.data;\r\n\r\n        // const messages = [newDirect.lastMessage];\r\n\r\n        return {\r\n          currentDirect: {\r\n            ...prev.currentDirect,\r\n            direct: newDirect,\r\n            // direct: { ...newDirect, messages },\r\n          },\r\n        };\r\n      },\r\n    });\r\n  };\r\n\r\n  const subscribeToDeleteMessage = (chatId) => {\r\n    return currentDirect.subscribeToMore({\r\n      document: DELETE_MESSAGE_SUBSCRIPTION,\r\n      variables: { chatId },\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n        const { deleteMessage } = subscriptionData.data;\r\n\r\n        const messages = prev.currentDirect.direct.messages.filter(\r\n          (message) => message.id !== deleteMessage.id\r\n        );\r\n\r\n        return {\r\n          currentDirect: {\r\n            ...prev.currentDirect,\r\n            direct: { ...prev.currentDirect.direct, messages },\r\n          },\r\n        };\r\n      },\r\n    });\r\n  };\r\n\r\n  const subscribeToDeleteDirect = (chatId) => {\r\n    return currentDirect.subscribeToMore({\r\n      document: DELETE_DIRECT_SUBSCRIPTION,\r\n      variables: { chatId },\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n        const { deleteDirect } = subscriptionData.data;\r\n\r\n        if (deleteDirect.id === chatId) {\r\n          return {\r\n            currentDirect: { ...prev.currentDirect, direct: null },\r\n          };\r\n        }\r\n\r\n        return prev;\r\n      },\r\n    });\r\n  };\r\n\r\n  const subscribeToUserTyping = (chatId) => {\r\n    return currentDirect.subscribeToMore({\r\n      document: USER_TYPING_SUBSCRIPTION,\r\n      variables: { chatId },\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n        const { userTyping } = subscriptionData.data;\r\n        // setTypingUser(userTyping);\r\n        typingUser.setUser(userTyping);\r\n\r\n        // if (deleteDirect.id === chatId) {\r\n        //   return {\r\n        //     currentDirect: { ...prev.currentDirect, direct: null },\r\n        //   };\r\n        // }\r\n\r\n        return prev;\r\n      },\r\n    });\r\n  };\r\n\r\n  const onCreateMessage = async (text) => {\r\n    if (!direct) {\r\n      await createDirect({ variables: { text, userId: recipient.id } });\r\n    } else {\r\n      await createMessage({ variables: { text, chatId: direct.id } });\r\n      await userTyping({\r\n        variables: {\r\n          chatId: get(direct, \"id\"),\r\n          username: \"\",\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const onDeleteMessage = (id) => () => {\r\n    deleteMessage({ variables: { id } });\r\n  };\r\n\r\n  return (\r\n    <DirectChat\r\n      user={get(currentUser, \"data.currentUser\", {})}\r\n      show={!!userId}\r\n      chatId={get(direct, \"id\")}\r\n      recipient={recipient}\r\n      messages={get(direct, \"messages\")}\r\n      typingUser={\r\n        typingUser.user === get(currentUser, \"data.currentUser\", {}).username\r\n          ? \"\"\r\n          : typingUser.user\r\n      }\r\n      onTyping={onTyping}\r\n      onCreateMessage={onCreateMessage}\r\n      onDeleteMessage={onDeleteMessage}\r\n      onReadMessage={(id) => readMessage({ variables: { id } })}\r\n      subscribeToNewDirect={subscribeToNewDirect}\r\n      subscribeToNewMessage={subscribeToNewMessage}\r\n      subscribeToDeleteMessage={subscribeToDeleteMessage}\r\n      subscribeToDeleteDirect={subscribeToDeleteDirect}\r\n      subscribeToUserTyping={subscribeToUserTyping}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DirectChatContainer;\r\n","import React from \"react\";\r\nimport { pasreQuery } from \"utils/index\";\r\nimport DirectChatContainer from \"containers/DirectChatContainer\";\r\n\r\nconst Home = props => {\r\n  const { p } = pasreQuery(props.location);\r\n\r\n  return <DirectChatContainer userId={p} />;\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}