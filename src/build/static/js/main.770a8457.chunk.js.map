{"version":3,"sources":["client.js","hooks/index.js","components/Typing/styles.js","components/Typing/index.js","theme.js","components/Sidebar/styles.js","components/MenuDrawer/styles.js","components/MenuDrawer/index.js","components/UserItem/styles.js","components/UserItem/index.js","components/ChatItem/styles.js","components/ChatItem/index.js","components/DirectItem/DirectItemMenu.js","components/DirectItem/index.js","components/StylesList/styles.js","components/StylesList/index.js","components/Sidebar/index.js","containers/SidebarContainer.js","components/Layout/index.js","App.js","serviceWorker.js","index.js","utils/index.js","graphql/queries.js","graphql/mutations.js","graphql/subscriptions.js","redux/actions/index.js","components/Avatar/styles.js","components/Avatar/index.js","redux/rootReducer.js","redux/store.js"],"names":["httpLink","HttpLink","uri","process","wsLink","WebSocketLink","options","reconnect","connectionParams","authTokens","get","token","refreshToken","console","log","headers","afterwareLink","ApolloLink","operation","forward","map","response","getContext","set","authMiddleware","setContext","httpLinkWithMiddleware","onError","graphQLErrors","networkError","forEach","message","locations","path","extensions","includes","code","store","dispatch","dispatchLogout","concat","link","split","query","definition","getMainDefinition","kind","client","ApolloClient","cache","InMemoryCache","useSibebarFetch","user","useQuery","CURRENT_USER","directs","DIRECTS","searchUsers","useLazyQuery","USERS","useMutation","SET_ONLINE","connect","SET_OFFLINE","disconnect","DELETE_DIRECT","deleteDirect","LOGOUT","onCompleted","a","resetStore","logout","queries","lazyQueries","mutations","useDirectChatFetch","userId","currentUser","currentDirect","CURRENT_DIRECT","variables","chatMessages","CHAT_MESSAGES","fetchPolicy","CREATE_DIRECT","createDirect","CREATE_MESSAGE","createMessage","DELETE_MESSAGE","deleteMessage","READ_MESSAGE","readMessage","USER_TYPING","userTyping","useTyping","data","callback","React","useState","typing","setTyping","setUser","useDebouncedCallback","value","debounce","username","useStyles","makeStyles","theme","Typing","display","justifyContent","alignItems","color","palette","text","secondary","width","height","marginRight","background","borderRadius","animation","Typing_secondary","transform","opacity","props","classes","className","cx","variant","preferColorSchema","window","matchMedia","matches","createMuiTheme","type","primary","sidebar","sidebarMin","ellipsis","overflow","whiteSpace","textOverflow","lighten","darken","Sidebar","position","maxWidth","minWidth","Sidebar_main","action","selected","hover","borderRight","divider","Sidebar_header","padding","spacing","minHeight","Sidebar_searchbar","fontSize","typography","body2","marginLeft","shape","Sidebar_content","maxHeight","overflowY","MenuDrawer","zIndex","tooltip","backgroundImage","default","paper","MenuDrawer_listItem","error","dark","MenuDrawer_backdrop","left","right","menuSchema","title","onToggle","icon","Settings","memo","open","Slide","in","direction","List","ListItem","Avatar","src","avatar","alt","online","ListItemText","email","key","button","to","component","Link","onClick","undefined","Typography","align","onLogout","Backdrop","UserItem_primary","UserItem_secondary","UserItem","dense","ListItemAvatar","primaryTypographyProps","secondaryTypographyProps","ChatItem_badge_root","ChatItem_badge_badge","ChatItem_primary","ChatItem_secondary","ChatItem_primaryText","ChatItem_secondaryText","ChatItem","date","unread","onContextMenu","formatDate","Badge","max","badge","root","badgeContent","DirectItemMenu","anchorEl","onClose","onDelete","anchorOrigin","vertical","horizontal","Boolean","MenuItem","DirectItem","useEffect","unsubscribe","subscribeToUserTyping","direct","id","subscribeToDeleteMessage","subscribeToNewMessage","contextMenu","setContextMenu","lastMessage","createdAt","e","preventDefault","currentTarget","StyledList","StyledList_subheader","lineHeight","subheader","ListSubheader","setOpen","search","setSearch","chatId","subscribeToNewDirect","subscribeToDeleteDirect","subscribeToOnlineUsers","onConnect","addEventListener","onDisconnect","onSearch","handleMenuToggle","IconButton","edge","Menu","InputBase","fullWidth","size","placeholder","onChange","target","length","renderUsers","users","typings","onDeleteDirect","searchUsersData","pasreQuery","location","p","setTypings","sort","sortByLastMessage","directslength","subscribeToMore","document","NEW_DIRECT_SUBSCRIPTION","updateQuery","prev","subscriptionData","newDirect","NEW_MESSAGE_SUBSCRIPTION","newMessage","DELETE_DIRECT_SUBSCRIPTION","directsData","filter","writeQuery","DELETE_MESSAGE_SUBSCRIPTION","DIRECT_LAST_MESSAGE","then","directLastMessage","ONLINE_USER_SUBSCRIPTION","USER_TYPING_SUBSCRIPTION","container","contentShift","withRouter","children","Container","createLoadableComponent","pathResolver","Loadable","loader","loading","privatRoutes","exact","publicRoutes","Redirect","isAuthorized","auth","CssBaseline","route","hostname","match","render","ThemeProvider","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","localStorage","getItem","setItem","remove","removeItem","qs","parse","arrayFormat","skipNull","parseNumbers","decode","exp","Date","now","err","b","diffTime","diff","moment","format","renderDiffTimeLabel","gql","REGISTER","LOGIN","VERIFY_USER","dispatchLogin","createActions","DISPATCH_LOGIN","DISPATCH_LOGOUT","authReducer","handleActions","state","payload","body1","textTransform","common","white","StyledBadge","withStyles","backgroundColor","boxShadow","top","border","content","name","slice","x","join","overlap","invisible","style","combineReducers","createStore","rootReducer","composeWithDevTools","applyMiddleware"],"mappings":"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","file":"static/js/main.770a8457.chunk.js","sourcesContent":["import { ApolloClient } from \"apollo-client\";\r\nimport { HttpLink } from \"apollo-link-http\";\r\nimport { WebSocketLink } from \"apollo-link-ws\";\r\nimport { ApolloLink, split } from \"apollo-link\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { onError } from \"apollo-link-error\";\r\nimport { getMainDefinition } from \"apollo-utilities\";\r\nimport { store } from \"./redux/store\";\r\nimport { dispatchLogout } from \"redux/actions\";\r\nimport { authTokens } from \"utils/index\";\r\n\r\nconst httpLink = new HttpLink({\r\n  uri: `${process.env.REACT_APP_API_URI}/graphql`,\r\n});\r\n\r\nexport const wsLink = new WebSocketLink({\r\n  uri: `${process.env.REACT_APP_SOCKET_URI}/graphql`,\r\n  options: {\r\n    reconnect: true,\r\n    connectionParams: () => {\r\n      const { token, refreshToken } = authTokens.get();\r\n      console.log(\"connectionParams token\", token);\r\n      console.log(\"connectionParams refreshToken\", refreshToken);\r\n      return {\r\n        headers: {\r\n          \"x-token\": token,\r\n          \"x-refresh-token\": refreshToken,\r\n        },\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nconst afterwareLink = new ApolloLink((operation, forward) =>\r\n  forward(operation).map((response) => {\r\n    const context = operation.getContext();\r\n    const {\r\n      response: { headers },\r\n    } = context;\r\n    const token = headers.get(\"x-token\");\r\n    const refreshToken = headers.get(\"x-refresh-token\");\r\n    if (token && refreshToken) {\r\n      authTokens.set({ token, refreshToken });\r\n    }\r\n\r\n    return response;\r\n  })\r\n);\r\n\r\nconst authMiddleware = new ApolloLink((operation, forward) => {\r\n  operation.setContext(({ headers }) => {\r\n    const { token, refreshToken } = authTokens.get();\r\n    return {\r\n      headers: {\r\n        ...headers,\r\n        \"x-token\": token,\r\n        \"x-refresh-token\": refreshToken,\r\n      },\r\n    };\r\n  });\r\n\r\n  return forward(operation);\r\n});\r\n\r\nconst errorMiddleware = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors)\r\n    graphQLErrors.forEach(({ message, locations, path, extensions }) => {\r\n      console.log(\r\n        `[GraphQL error]: \r\n          Message: ${message}, \r\n          Location: ${locations}, \r\n          Path: ${path}`\r\n      );\r\n      if (\r\n        [\"UNAUTHENTICATED\"].includes(extensions.code) // [\"UNAUTHENTICATED\", \"INTERNAL_SERVER_ERROR\"]\r\n      ) {\r\n        store.dispatch(dispatchLogout());\r\n      }\r\n    });\r\n\r\n  if (networkError) {\r\n    console.log(`[Network error]: ${networkError}`);\r\n  }\r\n});\r\n\r\nconst httpLinkWithMiddleware = errorMiddleware.concat(\r\n  afterwareLink.concat(authMiddleware.concat(httpLink))\r\n);\r\n\r\nconst link = split(\r\n  ({ query }) => {\r\n    const definition = getMainDefinition(query);\r\n    return (\r\n      definition.kind === \"OperationDefinition\" &&\r\n      definition.operation === \"subscription\"\r\n    );\r\n  },\r\n  wsLink,\r\n  // errorMiddleware,\r\n  httpLinkWithMiddleware\r\n);\r\n\r\nexport const client = new ApolloClient({\r\n  link,\r\n  cache: new InMemoryCache(),\r\n});\r\n","import React from \"react\";\r\nimport { useQuery, useLazyQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  CURRENT_USER,\r\n  CURRENT_DIRECT,\r\n  USERS,\r\n  DIRECTS,\r\n  CHAT_MESSAGES,\r\n} from \"graphql/queries\";\r\nimport {\r\n  SET_OFFLINE,\r\n  SET_ONLINE,\r\n  CREATE_DIRECT,\r\n  CREATE_MESSAGE,\r\n  DELETE_MESSAGE,\r\n  DELETE_DIRECT,\r\n  READ_MESSAGE,\r\n  USER_TYPING,\r\n  LOGOUT,\r\n} from \"graphql/mutations\";\r\nimport { useDebouncedCallback } from \"use-debounce\";\r\nimport { store } from \"redux/store\";\r\nimport { dispatchLogout } from \"redux/actions\";\r\n\r\nexport const useSibebarFetch = () => {\r\n  const user = useQuery(CURRENT_USER);\r\n  const directs = useQuery(DIRECTS);\r\n\r\n  const searchUsers = useLazyQuery(USERS);\r\n\r\n  const [connect] = useMutation(SET_ONLINE);\r\n  const [disconnect] = useMutation(SET_OFFLINE);\r\n  const [deleteDirect] = useMutation(DELETE_DIRECT);\r\n  const [logout, { client }] = useMutation(LOGOUT, {\r\n    onCompleted: async () => {\r\n      await disconnect();\r\n      // console.log(store.dispatch());\r\n      await store.dispatch(dispatchLogout());\r\n      await client.resetStore();\r\n    },\r\n  });\r\n\r\n  return {\r\n    queries: {\r\n      user,\r\n      directs,\r\n    },\r\n    lazyQueries: {\r\n      searchUsers,\r\n    },\r\n    mutations: {\r\n      logout,\r\n      connect,\r\n      disconnect,\r\n      deleteDirect,\r\n    },\r\n  };\r\n};\r\n\r\nexport const useDirectChatFetch = ({ userId }) => {\r\n  const currentUser = useQuery(CURRENT_USER);\r\n  const currentDirect = useQuery(CURRENT_DIRECT, {\r\n    variables: { userId },\r\n    // fetchPolicy: \"network-only\",\r\n  });\r\n  const chatMessages = useLazyQuery(CHAT_MESSAGES, {\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  const [createDirect] = useMutation(CREATE_DIRECT);\r\n  const [createMessage] = useMutation(CREATE_MESSAGE);\r\n  const [deleteMessage] = useMutation(DELETE_MESSAGE);\r\n  const [readMessage] = useMutation(READ_MESSAGE);\r\n  const [userTyping] = useMutation(USER_TYPING);\r\n\r\n  return {\r\n    queries: {\r\n      currentUser,\r\n      currentDirect,\r\n    },\r\n    lazyQueries: {\r\n      chatMessages,\r\n    },\r\n    mutations: {\r\n      createDirect,\r\n      createMessage,\r\n      deleteMessage,\r\n      readMessage,\r\n      userTyping,\r\n    },\r\n  };\r\n};\r\n\r\nexport const useTyping = (data, callback) => {\r\n  const [typing, setTyping] = React.useState(false);\r\n  const [user, setUser] = React.useState(\"\");\r\n  const [debounce] = useDebouncedCallback(async (value) => {\r\n    setTyping(false);\r\n    await callback(value);\r\n  }, 1000);\r\n\r\n  const onTyping = async () => {\r\n    setTyping(true);\r\n\r\n    if (!typing) await callback(data);\r\n\r\n    debounce({ ...data, username: \"\" });\r\n  };\r\n\r\n  return [{ user, setUser }, onTyping];\r\n};\r\n\r\nexport const usePrev = (values) => {\r\n  const ref = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    ref.current = values;\r\n  }, [values]);\r\n\r\n  return ref.current;\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  Typing: {\r\n    display: \"inline-flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    \"& span\": {\r\n      width: 5,\r\n      height: 5,\r\n      marginRight: 4,\r\n      background: theme.palette.text.secondary,\r\n      borderRadius: \"50%\",\r\n      \"&:nth-child(1)\": {\r\n        animation: \"$animation 1s ease-in-out infinite 0s\",\r\n      },\r\n      \"&:nth-child(2)\": {\r\n        animation: \"$animation 1s ease-in-out infinite 0.2s\",\r\n      },\r\n      \"&:nth-child(3)\": {\r\n        animation: \"$animation 1s ease-in-out infinite 0.4s\",\r\n      },\r\n    },\r\n  },\r\n  Typing_secondary: {\r\n    color: theme.palette.secondary[200],\r\n    \"& span\": {\r\n      background: theme.palette.secondary[200],\r\n    },\r\n  },\r\n  \"@keyframes animation\": {\r\n    \"0%, 100%\": {\r\n      transform: \"scale(1)\",\r\n      opacity: 1,\r\n    },\r\n    \"50%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 0.5,\r\n    },\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport cx from \"classnames\";\r\n\r\nconst Typing = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <span\r\n      className={cx(classes.Typing, {\r\n        [classes.Typing_secondary]: props.variant === \"secondary\",\r\n      })}\r\n    >\r\n      <span />\r\n      <span />\r\n      <span />\r\n      typing\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Typing;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { grey as primary, blue as secondary } from \"@material-ui/core/colors\";\r\nimport { lighten, darken } from \"@material-ui/core/styles/colorManipulator\";\r\n// import defaultTheme from \"@material-ui/core/styles/defaultTheme\";\r\n\r\nconst preferColorSchema = window.matchMedia(\"(prefers-color-scheme: dark)\")\r\n  .matches;\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    type: preferColorSchema ? \"dark\" : \"light\",\r\n    primary,\r\n    secondary,\r\n  },\r\n  props: {\r\n    sidebar: 280,\r\n    sidebarMin: 150,\r\n    classes: {\r\n      ellipsis: {\r\n        overflow: \"hidden\",\r\n        whiteSpace: \"nowrap\",\r\n        textOverflow: \"ellipsis\",\r\n      },\r\n    },\r\n  },\r\n  lighten,\r\n  darken,\r\n});\r\n\r\n// console.log(\"defaultTheme\", defaultTheme);\r\n// console.log(\"customTheme\", theme);\r\n\r\n// background:\r\n// theme.palette.type === \"dark\"\r\n//   ? theme.lighten(theme.palette.background.default, 0.235)\r\n//   : theme.darken(theme.palette.background.default, 0.057),\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  Sidebar: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    maxWidth: theme.props.sidebar,\r\n    minWidth: theme.props.sidebarMin,\r\n    // borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  Sidebar_main: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    overflow: \"hidden\",\r\n    background:\r\n      theme.palette.type === \"dark\"\r\n        ? theme.palette.action.selected\r\n        : theme.palette.action.hover,\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  Sidebar_header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    padding: `${theme.spacing(0.5)}px ${theme.spacing(3)}px`,\r\n    minHeight: 64,\r\n  },\r\n  Sidebar_searchbar: {\r\n    background: theme.palette.action.selected,\r\n    padding: `0 ${theme.spacing(1)}px`,\r\n    fontSize: theme.typography.body2.fontSize,\r\n    minHeight: 32,\r\n    marginLeft: theme.spacing(1),\r\n    borderRadius: theme.shape.borderRadius,\r\n  },\r\n  Sidebar_content: {\r\n    height: \"100%\",\r\n    maxHeight: \"calc(100% - 64px)\",\r\n    overflowY: \"scroll\",\r\n    position: \"relative\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n    // borderTop: `1px solid ${theme.palette.divider}`\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  MenuDrawer: {\r\n    position: \"absolute\",\r\n    width: \"95%\",\r\n    height: \"100%\",\r\n    zIndex: theme.zIndex.tooltip,\r\n    // background: theme.palette.background.paper,\r\n    backgroundImage: `linear-gradient(90deg, ${theme.palette.background.default}, ${theme.palette.background.paper})`,\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  MenuDrawer_listItem: {\r\n    \"& p\": {\r\n      width: \"100%\",\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n    \"&:last-child p\": {\r\n      color: theme.palette.error.dark,\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  MenuDrawer_backdrop: {\r\n    width: \"100%\",\r\n    maxWidth: 960,\r\n    zIndex: 1300,\r\n    left: \"auto\",\r\n    right: \"auto\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Slide,\r\n  Backdrop,\r\n} from \"@material-ui/core\";\r\nimport Avatar from \"components/Avatar\";\r\nimport {\r\n  // Group as GroupIcon,\r\n  Settings as SettingsIcon,\r\n  // TouchApp as TouchAppIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nexport const menuSchema = [\r\n  // {\r\n  //   title: \"New Group\",\r\n  //   link: \"/create_team\",\r\n  //   action: ({ onToggle }) => onToggle,\r\n  //   icon: <GroupIcon />,\r\n  // },\r\n  // {\r\n  //   title: \"New Channel\",\r\n  //   link: \"/create_channel\",\r\n  //   action: ({ onToggle }) => onToggle,\r\n  //   icon: <TouchAppIcon />,\r\n  // },\r\n  {\r\n    title: \"Settings\",\r\n    link: \"/settings\",\r\n    action: ({ onToggle }) => onToggle,\r\n    icon: <SettingsIcon />,\r\n  },\r\n];\r\n\r\nconst MenuDrawer = ({ open, user, ...props }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Slide in={open} direction=\"right\">\r\n        <div className={classes.MenuDrawer}>\r\n          <List>\r\n            <ListItem>\r\n              <Avatar\r\n                src={user.avatar}\r\n                alt={user.username}\r\n                online={user.online}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary={user.username} secondary={user.email} />\r\n            </ListItem>\r\n          </List>\r\n          <List>\r\n            {menuSchema.map(({ title, link, action, icon }) => (\r\n              <ListItem\r\n                key={title}\r\n                button\r\n                to={link}\r\n                className={classes.MenuDrawer_listItem}\r\n                component={link ? Link : \"div\"}\r\n                onClick={action ? action(props) : undefined}\r\n              >\r\n                {icon}\r\n                <Typography variant=\"body2\" align={!!icon ? \"left\" : \"center\"}>\r\n                  {title}\r\n                </Typography>\r\n              </ListItem>\r\n            ))}\r\n            <ListItem\r\n              button\r\n              className={classes.MenuDrawer_listItem}\r\n              component=\"div\"\r\n              onClick={props.onLogout}\r\n            >\r\n              <Typography variant=\"body2\" align=\"center\">\r\n                Log Out\r\n              </Typography>\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n      </Slide>\r\n      <Backdrop\r\n        open={open}\r\n        onClick={props.onToggle}\r\n        className={classes.MenuDrawer_backdrop}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(MenuDrawer);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  UserItem_primary: {\r\n    ...theme.props.classes.ellipsis\r\n  },\r\n  UserItem_secondary: {\r\n    ...theme.props.classes.ellipsis,\r\n    color: theme.palette.secondary[200]\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { ListItem, ListItemAvatar, ListItemText } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"components/Avatar\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst UserItem = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem {...props} dense button to={props.link} component={Link}>\r\n      <ListItemAvatar>\r\n        <Avatar\r\n          src={props.user.avatar}\r\n          alt={props.user.username}\r\n          online={props.user.online}\r\n        />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={props.user.username}\r\n        primaryTypographyProps={{\r\n          component: \"div\",\r\n          className: classes.UserItem_primary,\r\n        }}\r\n        secondary={`@${props.user.username}`}\r\n        secondaryTypographyProps={{\r\n          variant: \"caption\",\r\n          component: \"div\",\r\n          className: classes.UserItem_secondary,\r\n        }}\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  ChatItem_badge_root: {\r\n    height: 15,\r\n  },\r\n  ChatItem_badge_badge: {\r\n    position: \"relative\",\r\n    transform: \"none\",\r\n    height: \"inherit\",\r\n  },\r\n  ChatItem_primary: {\r\n    display: \"flex\",\r\n  },\r\n  ChatItem_secondary: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  ChatItem_primaryText: {\r\n    width: \"100%\",\r\n    ...theme.props.classes.ellipsis,\r\n  },\r\n  ChatItem_secondaryText: {\r\n    width: \"100%\",\r\n    marginRight: theme.spacing(1),\r\n    ...theme.props.classes.ellipsis,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  Badge,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"components/Avatar\";\r\nimport { useStyles } from \"./styles\";\r\nimport { formatDate } from \"utils/index\";\r\nimport Typing from \"components/Typing\";\r\n\r\nconst ChatItem = ({\r\n  link,\r\n  date,\r\n  avatar,\r\n  online,\r\n  unread,\r\n  typing = false,\r\n  selected,\r\n  primary,\r\n  secondary,\r\n\r\n  onContextMenu,\r\n  ...props\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      dense\r\n      button\r\n      // disableRipple\r\n      to={link}\r\n      component={Link}\r\n      selected={selected}\r\n      onContextMenu={onContextMenu}\r\n      {...props}\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar src={avatar} alt={primary} online={online} />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={\r\n          <>\r\n            <Typography\r\n              variant=\"body2\"\r\n              className={classes.ChatItem_primaryText}\r\n            >\r\n              {primary}\r\n            </Typography>\r\n            <Typography variant=\"caption\" color=\"textSecondary\">\r\n              {formatDate(date)}\r\n            </Typography>\r\n          </>\r\n        }\r\n        primaryTypographyProps={{\r\n          className: classes.ChatItem_primary,\r\n          component: \"div\",\r\n        }}\r\n        secondary={\r\n          <>\r\n            <Typography\r\n              variant=\"caption\"\r\n              className={classes.ChatItem_secondaryText}\r\n            >\r\n              {typing ? <Typing /> : secondary}\r\n            </Typography>\r\n            <Badge\r\n              max={50}\r\n              classes={{\r\n                badge: classes.ChatItem_badge_badge,\r\n                root: classes.ChatItem_badge_root,\r\n              }}\r\n              badgeContent={unread}\r\n              color=\"secondary\"\r\n            />\r\n          </>\r\n        }\r\n        secondaryTypographyProps={{\r\n          className: classes.ChatItem_secondary,\r\n          component: \"div\",\r\n        }}\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default ChatItem;\r\n","import React from \"react\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\n\r\nconst DirectItemMenu = ({ anchorEl, onClose, onDelete }) => {\r\n  const handleActions = (callback) => () => {\r\n    callback();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={Boolean(anchorEl)}\r\n      onClose={onClose}\r\n    >\r\n      <MenuItem dense onClick={handleActions(onDelete)}>\r\n        Delete chat\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default DirectItemMenu;\r\n","import React from \"react\";\r\nimport ChatItem from \"components/ChatItem\";\r\nimport DirectItemMenu from \"./DirectItemMenu\";\r\n\r\nconst DirectItem = (props) => {\r\n  React.useEffect(() => {\r\n    const unsubscribe = props.subscribeToUserTyping(props.direct.id);\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = props.subscribeToDeleteMessage(props.direct.id);\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = props.subscribeToNewMessage(props.direct.id);\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const [contextMenu, setContextMenu] = React.useState(null);\r\n\r\n  const handleOpen = (e) => {\r\n    e.preventDefault();\r\n    setContextMenu(e.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => setContextMenu(null);\r\n\r\n  const handleDelete = () => {\r\n    props.onDelete(props.direct.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ChatItem\r\n        link={props.link}\r\n        typing={props.typing}\r\n        selected={props.selected}\r\n        avatar={props.user.avatar}\r\n        online={props.user.online}\r\n        unread={props.direct.unread}\r\n        primary={props.user.username}\r\n        secondary={props.direct.lastMessage.text}\r\n        date={props.direct.lastMessage.createdAt}\r\n        onContextMenu={handleOpen}\r\n      />\r\n      <DirectItemMenu\r\n        anchorEl={contextMenu}\r\n        onClose={handleClose}\r\n        onDelete={handleDelete}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DirectItem;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  StyledList: {},\r\n  StyledList_subheader: {\r\n    background: theme.palette.action.selected,\r\n    // background:\r\n    //   theme.palette.type === \"dark\"\r\n    //     ? theme.lighten(theme.palette.background.default, 0.235)\r\n    //     : theme.darken(theme.palette.background.default, 0.057),\r\n    lineHeight: \"32px\",\r\n    fontSize: theme.typography.body2.fontSize,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { ListSubheader, List } from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst StyledList = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List\r\n      {...props}\r\n      subheader={\r\n        props.subheader ? (\r\n          <ListSubheader\r\n            component=\"div\"\r\n            className={classes.StyledList_subheader}\r\n          >\r\n            {props.subheader}\r\n          </ListSubheader>\r\n        ) : null\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default StyledList;\r\n","import React from \"react\";\r\nimport { IconButton, InputBase } from \"@material-ui/core\";\r\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\r\nimport { useDebouncedCallback } from \"use-debounce\";\r\nimport { useStyles } from \"./styles\";\r\nimport MenuDrawer from \"components/MenuDrawer\";\r\nimport UserItem from \"components/UserItem\";\r\nimport DirectItem from \"components/DirectItem\";\r\nimport StyledList from \"components/StylesList\";\r\n\r\nconst Sidebar = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  const renderUsers = (data) => {\r\n    return data ? (\r\n      <StyledList subheader=\"Global search\">\r\n        {data.map((user) => (\r\n          <UserItem\r\n            key={user.id}\r\n            user={user}\r\n            link={`/?p=${user.id}`}\r\n            onClick={() => setSearch(\"\")}\r\n          />\r\n        ))}\r\n      </StyledList>\r\n    ) : null;\r\n  };\r\n\r\n  const renderDirects = (data) => {\r\n    return data.map((direct) => (\r\n      <DirectItem\r\n        key={direct.id}\r\n        direct={direct}\r\n        user={direct.user}\r\n        typing={\r\n          props.typings[direct.id] === direct.user.username\r\n            ? props.typings[direct.id]\r\n            : \"\"\r\n        }\r\n        link={`/?p=${direct.user.id}`}\r\n        selected={direct.user.id === props.chatId}\r\n        onDelete={props.onDeleteDirect}\r\n        subscribeToUserTyping={props.subscribeToUserTyping}\r\n        subscribeToNewMessage={props.subscribeToNewMessage}\r\n        subscribeToDeleteMessage={props.subscribeToDeleteMessage}\r\n      />\r\n    ));\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setSearch(\"\");\r\n  }, [props.chatId]);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = props.subscribeToNewDirect();\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = props.subscribeToDeleteDirect();\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = props.subscribeToOnlineUsers();\r\n    console.log(\"subscribeToOnlineUsers\");\r\n    return () => unsubscribe();\r\n  }, [props.subscribeToOnlineUsers]);\r\n\r\n  React.useEffect(() => {\r\n    props.onConnect();\r\n\r\n    window.addEventListener(\"beforeunload\", (e) => {\r\n      e.preventDefault();\r\n      return props.onDisconnect();\r\n    });\r\n  }, []);\r\n\r\n  const [debounce] = useDebouncedCallback(\r\n    (value) => props.onSearch(value),\r\n    200\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value);\r\n    debounce(e.target.value);\r\n  };\r\n\r\n  const handleMenuToggle = () => setOpen(!open);\r\n\r\n  return (\r\n    <div className={classes.Sidebar}>\r\n      <MenuDrawer\r\n        open={open}\r\n        user={props.currentUser}\r\n        onLogout={props.onLogout}\r\n        onToggle={handleMenuToggle}\r\n      />\r\n      <div className={classes.Sidebar_main}>\r\n        <div className={classes.Sidebar_header}>\r\n          <IconButton edge=\"start\" color=\"inherit\" onClick={handleMenuToggle}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <InputBase\r\n            fullWidth\r\n            size=\"small\"\r\n            value={search}\r\n            placeholder=\"Search\"\r\n            className={classes.Sidebar_searchbar}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className={classes.Sidebar_content}>\r\n          {!search.length\r\n            ? renderDirects(props.directs)\r\n            : renderUsers(props.users)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { DIRECTS, DIRECT_LAST_MESSAGE } from \"graphql/queries\";\r\nimport {\r\n  NEW_MESSAGE_SUBSCRIPTION,\r\n  NEW_DIRECT_SUBSCRIPTION,\r\n  DELETE_MESSAGE_SUBSCRIPTION,\r\n  DELETE_DIRECT_SUBSCRIPTION,\r\n  ONLINE_USER_SUBSCRIPTION,\r\n  USER_TYPING_SUBSCRIPTION,\r\n} from \"graphql/subscriptions\";\r\nimport { pasreQuery } from \"utils/index\";\r\nimport Sidebar from \"components/Sidebar\";\r\nimport { get } from \"lodash-es\";\r\nimport { sortByLastMessage } from \"utils/index\";\r\nimport { useSibebarFetch } from \"hooks/index\";\r\n\r\nconst SidebarContainer = (props) => {\r\n  const {\r\n    queries: { user, directs },\r\n    lazyQueries: {\r\n      searchUsers: [searchUsers, searchUsersData],\r\n    },\r\n    mutations: { logout, connect, disconnect, deleteDirect },\r\n  } = useSibebarFetch();\r\n\r\n  const chatId = pasreQuery(props.location).p;\r\n\r\n  const [typings, setTypings] = React.useState({});\r\n\r\n  const subscribeToNewMessage = (chatId) =>\r\n    directs.subscribeToMore({\r\n      document: NEW_MESSAGE_SUBSCRIPTION,\r\n      variables: { chatId },\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n\r\n        const { newMessage } = subscriptionData.data;\r\n        const currentUser = get(user, \"data.currentUser\");\r\n        const unread = newMessage.userId !== currentUser.id ? 1 : 0;\r\n\r\n        const directs = prev.directs\r\n          .map((direct) => {\r\n            if (direct.id === chatId) {\r\n              direct = {\r\n                ...direct,\r\n                lastMessage: newMessage,\r\n                unread: direct.unread + unread,\r\n              };\r\n            }\r\n            return direct;\r\n          })\r\n          .sort(sortByLastMessage);\r\n\r\n        return { directs };\r\n      },\r\n    });\r\n\r\n  const subscribeToNewDirect = () => {\r\n    return directs.subscribeToMore({\r\n      document: NEW_DIRECT_SUBSCRIPTION,\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n        const { newDirect } = subscriptionData.data;\r\n        const directs = prev.directs.concat(newDirect).sort(sortByLastMessage);\r\n        return { directs };\r\n      },\r\n    });\r\n  };\r\n\r\n  const subscribeToDeleteMessage = (chatId) => {\r\n    return directs.subscribeToMore({\r\n      document: DELETE_MESSAGE_SUBSCRIPTION,\r\n      variables: { chatId },\r\n      updateQuery: async (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n\r\n        const currentUser = get(user, \"data.currentUser\");\r\n        const { deleteMessage } = subscriptionData.data;\r\n\r\n        return await directs.client\r\n          .query({\r\n            query: DIRECT_LAST_MESSAGE,\r\n            variables: { chatId },\r\n            fetchPolicy: \"no-cache\",\r\n          })\r\n          .then(({ data }) => {\r\n            const directsData = [...prev.directs].map((direct) => {\r\n              const unread = deleteMessage.userId !== currentUser.id ? 1 : 0;\r\n\r\n              if (direct.lastMessage.id === deleteMessage.id) {\r\n                direct = {\r\n                  ...direct,\r\n                  lastMessage: data.directLastMessage,\r\n                  unread: direct.unread - unread,\r\n                };\r\n              }\r\n\r\n              return direct;\r\n            });\r\n\r\n            directs.client.writeQuery({\r\n              query: DIRECTS,\r\n              data: { directs: directsData },\r\n            });\r\n\r\n            return { directs: directsData };\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  const subscribeToDeleteDirect = () => {\r\n    return directs.subscribeToMore({\r\n      document: DELETE_DIRECT_SUBSCRIPTION,\r\n      updateQuery: async (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n        const { deleteDirect } = subscriptionData.data;\r\n\r\n        const directsData = prev.directs.filter(\r\n          (direct) => direct.id !== deleteDirect.id\r\n        );\r\n\r\n        directs.client.writeQuery({\r\n          query: DIRECTS,\r\n          data: { directs: directsData },\r\n        });\r\n\r\n        return { directs: directsData };\r\n      },\r\n    });\r\n  };\r\n\r\n  const subscribeToOnlineUsers = () => {\r\n    return directs.subscribeToMore({\r\n      document: ONLINE_USER_SUBSCRIPTION,\r\n    });\r\n  };\r\n\r\n  const subscribeToUserTyping = (chatId) =>\r\n    directs.subscribeToMore({\r\n      document: USER_TYPING_SUBSCRIPTION,\r\n      variables: { chatId },\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n        const { userTyping } = subscriptionData.data;\r\n        setTypings({ ...typings, [chatId]: userTyping });\r\n        return prev;\r\n      },\r\n    });\r\n\r\n  const onSearch = (username) => searchUsers({ variables: { username } });\r\n\r\n  const onDeleteDirect = (id) => {\r\n    deleteDirect({ variables: { id } });\r\n  };\r\n\r\n  return (\r\n    <Sidebar\r\n      chatId={chatId}\r\n      typings={typings}\r\n      directs={get(directs, \"data.directs\", []).sort(sortByLastMessage)}\r\n      users={get(searchUsersData, \"data.users\")}\r\n      currentUser={get(user, \"data.currentUser\", {})}\r\n      directslength={get(directs, \"data.directs.length\")}\r\n      onLogout={logout}\r\n      onConnect={connect}\r\n      onSearch={onSearch}\r\n      onDisconnect={disconnect}\r\n      onDeleteDirect={onDeleteDirect}\r\n      subscribeToNewDirect={subscribeToNewDirect}\r\n      subscribeToNewMessage={subscribeToNewMessage}\r\n      subscribeToDeleteDirect={subscribeToDeleteDirect}\r\n      subscribeToDeleteMessage={subscribeToDeleteMessage}\r\n      subscribeToOnlineUsers={subscribeToOnlineUsers}\r\n      subscribeToUserTyping={subscribeToUserTyping}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(SidebarContainer);\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SidebarContainer from \"containers/SidebarContainer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    minHeight: \"100vh\",\r\n    maxHeight: \"100vh\",\r\n  },\r\n  contentShift: {\r\n    width: \"100%\",\r\n    background: theme.palette.background.paper,\r\n    minWidth: theme.props.sidebarMin,\r\n  },\r\n}));\r\n\r\nconst Layout = ({ children, ...props }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.container}>\r\n      <SidebarContainer {...props} />\r\n      <div className={classes.contentShift}>{children}</div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport Loadable from \"react-loadable\";\nimport { connect } from \"react-redux\";\nimport Layout from \"components/Layout\";\nimport { isAuthorized } from \"utils/index\";\n\nconst createLoadableComponent = (pathResolver) => {\n  return Loadable({\n    loader: pathResolver,\n    loading: (props) => {\n      if (props.error) console.error(props.error);\n      return null;\n    },\n  });\n};\n\nconst privatRoutes = [\n  {\n    path: \"/\",\n    exact: false,\n    component: createLoadableComponent(() => import(\"./pages/Home\")),\n  },\n  {\n    path: \"/verify\",\n    exact: true,\n    component: createLoadableComponent(() => import(\"./pages/VerifyUser\")),\n  },\n];\n\nconst publicRoutes = [\n  {\n    path: \"/(|registration)\",\n    exact: true,\n    component: createLoadableComponent(() => import(\"./pages/Login\")),\n  },\n  {\n    path: \"/verify\",\n    exact: true,\n    component: createLoadableComponent(() => import(\"./pages/VerifyUser\")),\n  },\n  { path: \"*\", component: Redirect },\n];\n\nconst App = (props) => {\n  return (\n    <>\n      <CssBaseline />\n      <Router>\n        {isAuthorized() ? (\n          <Layout>\n            {privatRoutes.map((route) => (\n              <Route key={route.path} {...route} />\n            ))}\n          </Layout>\n        ) : (\n          <Switch>\n            {publicRoutes.map((route) => (\n              <Route key={route.path} {...route} />\n            ))}\n          </Switch>\n        )}\n      </Router>\n    </>\n  );\n};\n\nexport default connect(({ auth: { isAuthorized } }) => ({ isAuthorized }))(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { client } from \"./client\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { theme } from \"./theme\";\r\nimport { Provider as ReduxProvider } from \"react-redux\";\r\nimport { store } from \"redux/store\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nrender(\r\n  <ApolloProvider client={client}>\r\n    <ReduxProvider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <App />\r\n      </ThemeProvider>\r\n    </ReduxProvider>\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import qs from \"query-string\";\r\nimport moment from \"moment\";\r\nimport decode from \"jwt-decode\";\r\n\r\nexport const stringifyQuery = (location, modifiers = {}) => {\r\n  const settings = {\r\n    arrayFormat: \"comma\",\r\n    skipNull: true,\r\n    parseNumbers: true,\r\n  };\r\n\r\n  let query = {\r\n    ...qs.parse(location.search, settings),\r\n    ...modifiers,\r\n  };\r\n\r\n  return {\r\n    ...location,\r\n    search: qs.stringify(query, settings),\r\n  };\r\n};\r\n\r\nexport const authTokens = {\r\n  get: () => ({\r\n    token: localStorage.getItem(\"token\"),\r\n    refreshToken: localStorage.getItem(\"refreshToken\"),\r\n  }),\r\n  set: ({ token, refreshToken }) => {\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"refreshToken\", refreshToken);\r\n  },\r\n  remove: () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"refreshToken\");\r\n  },\r\n};\r\n\r\nexport const pasreQuery = (location) => {\r\n  const settings = {\r\n    arrayFormat: \"comma\",\r\n    skipNull: true,\r\n    parseNumbers: true,\r\n  };\r\n  return qs.parse(location.search, settings);\r\n};\r\n\r\nexport const isAuthorized = () => {\r\n  const { token, refreshToken } = authTokens.get();\r\n\r\n  try {\r\n    decode(token);\r\n    const { exp } = decode(refreshToken);\r\n    if (Date.now() / 1000 > exp) {\r\n      return false;\r\n    }\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport const sortByLastMessage = (a, b) => {\r\n  return b.lastMessage.createdAt - a.lastMessage.createdAt;\r\n};\r\n\r\nexport const diffTime = (date, diff = \"days\") => {\r\n  return moment().diff(+date, diff);\r\n};\r\n\r\nexport const formatDate = (date, format = \"HH:mm\") => {\r\n  if (date) {\r\n    return moment(+date).format(format);\r\n  }\r\n};\r\n\r\nexport const renderDiffTimeLabel = (date) => {\r\n  const timeDiff = diffTime(+date);\r\n\r\n  switch (timeDiff) {\r\n    case 0:\r\n      return \"Today\";\r\n    case 1:\r\n      return \"Yesterday\";\r\n    default:\r\n      return formatDate(date, \"MMMM D\");\r\n  }\r\n};\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const USERS = gql`\r\n  query users($username: String) {\r\n    users(username: $username) {\r\n      id\r\n      email\r\n      avatar\r\n      online\r\n      username\r\n      lastSeen\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CURRENT_USER = gql`\r\n  query currentUser {\r\n    currentUser {\r\n      id\r\n      email\r\n      avatar\r\n      online\r\n      username\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DIRECTS = gql`\r\n  query directs {\r\n    directs {\r\n      id\r\n      user {\r\n        id\r\n        email\r\n        avatar\r\n        online\r\n        username\r\n        lastSeen\r\n        createdAt\r\n      }\r\n      lastMessage {\r\n        id\r\n        text\r\n        userId\r\n        createdAt\r\n      }\r\n      unread\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CURRENT_DIRECT = gql`\r\n  query currentDirect($userId: Int!) {\r\n    currentDirect(userId: $userId) {\r\n      direct {\r\n        id\r\n      }\r\n      recipient {\r\n        id\r\n        email\r\n        avatar\r\n        online\r\n        username\r\n        lastSeen\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DIRECT_LAST_MESSAGE = gql`\r\n  query directLastMessage($chatId: Int!) {\r\n    directLastMessage(chatId: $chatId) {\r\n      id\r\n      text\r\n      userId\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CHAT_MESSAGES = gql`\r\n  query getChatMessages($chatId: Int!, $offset: Int) {\r\n    messages(chatId: $chatId, offset: $offset) {\r\n      id\r\n      text\r\n      userId\r\n      unread\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const REGISTER = gql`\r\n  mutation register($username: String!, $email: String!, $password: String!) {\r\n    register(username: $username, email: $email, password: $password)\r\n  }\r\n`;\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VERIFY_USER = gql`\r\n  mutation verifyUser($secret: String!) {\r\n    verifyUser(secret: $secret) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_DIRECT = gql`\r\n  mutation createDirect($userId: Int!, $text: String) {\r\n    createDirect(userId: $userId, text: $text) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_MESSAGE = gql`\r\n  mutation createMessage($chatId: Int, $text: String!) {\r\n    createMessage(chatId: $chatId, text: $text)\r\n  }\r\n`;\r\n\r\nexport const DELETE_MESSAGE = gql`\r\n  mutation deleteMessage($id: Int!) {\r\n    deleteMessage(id: $id)\r\n  }\r\n`;\r\n\r\nexport const DELETE_DIRECT = gql`\r\n  mutation deleteDirect($id: Int!) {\r\n    deleteDirect(id: $id)\r\n  }\r\n`;\r\n\r\nexport const READ_MESSAGE = gql`\r\n  mutation readMessage($id: Int!) {\r\n    readMessage(id: $id)\r\n  }\r\n`;\r\n\r\nexport const LOGOUT = gql`\r\n  mutation logout {\r\n    logout\r\n  }\r\n`;\r\n\r\nexport const SET_ONLINE = gql`\r\n  mutation connect {\r\n    connect {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SET_OFFLINE = gql`\r\n  mutation disconnect {\r\n    disconnect {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USER_TYPING = gql`\r\n  mutation userTyping($chatId: Int!, $username: String) {\r\n    userTyping(chatId: $chatId, username: $username)\r\n  }\r\n`;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const NEW_MESSAGE_SUBSCRIPTION = gql`\r\n  subscription newMessage($chatId: Int!) {\r\n    newMessage(chatId: $chatId) {\r\n      id\r\n      text\r\n      userId\r\n      unread\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_MESSAGE_SUBSCRIPTION = gql`\r\n  subscription deleteMessage($chatId: Int!) {\r\n    deleteMessage(chatId: $chatId) {\r\n      id\r\n      userId\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_DIRECT_SUBSCRIPTION = gql`\r\n  subscription deleteDirect {\r\n    deleteDirect {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NEW_DIRECT_SUBSCRIPTION = gql`\r\n  subscription newDirect {\r\n    newDirect {\r\n      id\r\n      user {\r\n        id\r\n        email\r\n        avatar\r\n        online\r\n        username\r\n        lastSeen\r\n        createdAt\r\n      }\r\n      lastMessage {\r\n        id\r\n        text\r\n        userId\r\n        unread\r\n        createdAt\r\n      }\r\n      unread\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ONLINE_USER_SUBSCRIPTION = gql`\r\n  subscription onlineUser {\r\n    onlineUser {\r\n      id\r\n      online\r\n      lastSeen\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USER_TYPING_SUBSCRIPTION = gql`\r\n  subscription userTyping($chatId: Int!) {\r\n    userTyping(chatId: $chatId)\r\n  }\r\n`;\r\n","import { createActions, handleActions } from \"redux-actions\";\r\nimport { authTokens } from \"utils/index\";\r\n\r\nexport const { dispatchLogin } = createActions({\r\n  DISPATCH_LOGIN: ({ token, refreshToken }) => ({ token, refreshToken }),\r\n});\r\n\r\nexport const { dispatchLogout } = createActions({\r\n  DISPATCH_LOGOUT: (isAuthorized = false) => ({ isAuthorized }),\r\n});\r\n\r\nconst defaultState = { isAuthorized: false };\r\n\r\nconst authReducer = handleActions(\r\n  {\r\n    [dispatchLogin]: (state, { payload }) => {\r\n      authTokens.set(payload);\r\n      return { ...state, isAuthorized: true };\r\n    },\r\n    [dispatchLogout]: (state, { payload: { isAuthorized } }) => {\r\n      authTokens.remove();\r\n      return { ...state, isAuthorized };\r\n    },\r\n  },\r\n  defaultState\r\n);\r\n\r\nexport default authReducer;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  Avatar: {\r\n    fontSize: theme.typography.body1.fontSize,\r\n    // width: 44,\r\n    // height: 44,\r\n    textTransform: \"uppercase\",\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { Avatar as MuiAvarat, Badge } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"$ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst Avatar = ({ alt = \"\", src, ...props }) => {\r\n  const classes = useStyles();\r\n  const name = alt\r\n    .split(\" \")\r\n    .slice(0, 2)\r\n    .map((x) => x[0])\r\n    .join(\"\");\r\n\r\n  return (\r\n    <StyledBadge\r\n      overlap=\"circle\"\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n      variant=\"dot\"\r\n      invisible={!props.online}\r\n    >\r\n      <MuiAvarat\r\n        src={src}\r\n        // alt={alt}\r\n        className={classes.Avatar}\r\n        style={{ background: src }}\r\n      >\r\n        {name}\r\n      </MuiAvarat>\r\n    </StyledBadge>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./actions/index\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst INITIAL_STATE = {};\r\nconst MIDDLEWARE = [];\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  INITIAL_STATE,\r\n  composeWithDevTools(applyMiddleware(...MIDDLEWARE))\r\n);\r\n"],"sourceRoot":""}