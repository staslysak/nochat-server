{"version":3,"sources":["client.js","theme.js","redux/reducers/auth.js","redux/reducers/index.js","redux/store.js","components/Sidebar/styles.js","components/MenuDrawer/styles.js","components/MenuDrawer/index.js","components/ChatItem/styles.js","components/ChatItem/ChatItemMenu.js","components/ChatItem/index.js","components/UserItem/styles.js","components/UserItem/index.js","components/Sidebar/index.js","containers/SidebarContainer.js","components/Layout/index.js","App.js","serviceWorker.js","index.js","graphql/queries.js","graphql/mutations.js","components/Avatar/styles.js","components/Avatar/index.js","redux/actions/types.js","graphql/subscriptions.js","utils/index.js","redux/actions/auth.js","redux/actions/index.js","hooks/index.js","components/MainBlock/styles.js","components/MainBlock/index.js"],"names":["httpLink","HttpLink","uri","process","wsLink","WebSocketLink","options","reconnect","connectionParams","headers","localStorage","getItem","afterwareLink","ApolloLink","operation","forward","map","response","getContext","token","get","refreshToken","setItem","authMiddleware","setContext","httpLinkWithMiddleware","onError","graphQLErrors","networkError","forEach","message","locations","path","extensions","console","log","code","concat","link","split","query","definition","getMainDefinition","kind","client","ApolloClient","cache","InMemoryCache","preferColorSchema","window","matchMedia","matches","theme","createMuiTheme","palette","type","primary","secondary","props","sidebar","sidebarMin","classes","ellipsis","overflow","whiteSpace","textOverflow","lighten","darken","INITIAL_STATE","isAuthorized","combineReducers","auth","state","payload","TYPES","LOGIN","authTokens","set","LOGOUT","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","useStyles","makeStyles","Sidebar","position","width","maxWidth","minWidth","Sidebar_header","display","alignItems","justifyContent","Sidebar_menuButton","marginRight","spacing","Sidebar_searchbar","background","default","padding","fontSize","typography","body2","boxSizing","borderRadius","shape","MenuDrawer","height","zIndex","tooltip","paper","borderRight","divider","MenuDrawer_listItem","marginLeft","color","error","dark","body1","fontWeight","fontWeightBold","MenuDrawer_backdrop","left","right","menuSchema","title","action","onToggle","icon","Group","TouchApp","Settings","onLogout","React","memo","connect","dispatchLogout","open","userData","useQuery","CURRENT_USER","useMutation","onCompleted","resetStore","user","Slide","in","direction","className","List","ListItem","Avatar","src","avatar","alt","username","ListItemText","email","key","button","to","component","Link","onClick","undefined","Typography","variant","align","Backdrop","ChatItem_badge_root","ChatItem_badge_badge","transform","ChatItem_primary","ChatItem_secondary","ChatItem_primaryText","ChatItem_secondaryText","ChatItemMenu","callback","anchorEl","onClose","onDelete","anchorOrigin","vertical","horizontal","Boolean","MenuItem","dense","ChatItem","unread","selected","lastMessage","useState","contextMenu","setContextMenu","DELETE_DIRECT","deleteDirect","onContextMenu","e","preventDefault","currentTarget","ListItemAvatar","online","formatDate","createdAt","primaryTypographyProps","text","Badge","max","badge","root","badgeContent","secondaryTypographyProps","variables","id","chat","UserItem_primary","UserItem_secondary","UserItem","setOpen","search","setSearch","useEffect","chatId","subscribeToOnlineUsers","subscribeToNewDirect","subscribeToDeleteDirect","setOnline","addEventListener","setOffline","unsubsribes","directs","subscribeToNewMessage","length","unsubsribe","directslength","subscribeToDeleteMessage","data","useDebouncedCallback","value","onSearch","debounce","handleMenuToggle","MainBlock","header","IconButton","edge","Menu","InputBase","size","placeholder","onChange","target","renderUsers","users","direct","sortByLastMessage","a","b","useSibebarFetch","queries","lazyQueries","searchUsers","searchUsersData","mutations","pasreQuery","location","p","subscribeToMore","document","NEW_MESSAGE_SUBSCRIPTION","updateQuery","prev","subscriptionData","newMessage","currentUser","userId","sort","NEW_DIRECT_SUBSCRIPTION","newDirect","DELETE_MESSAGE_SUBSCRIPTION","deleteMessage","DIRECT_LAST_MESSAGE","fetchPolicy","then","directsData","directLastMessage","writeQuery","DIRECTS","DELETE_DIRECT_SUBSCRIPTION","filter","ONLINE_USER_SUBSCRIPTION","container","maxHeight","contentShift","withRouter","children","Container","createLoadableComponent","pathResolver","Loadable","loader","loading","privatRoutes","exact","publicRoutes","Redirect","CssBaseline","route","hostname","match","render","ThemeProvider","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","USERS","gql","CURRENT_DIRECT","CREATE_USER","VERIFY_USER","CREATE_DIRECT","CREATE_MESSAGE","DELETE_MESSAGE","SET_ONLINE","SET_OFFLINE","textTransform","common","white","StyledBadge","withStyles","backgroundColor","boxShadow","top","animation","border","content","opacity","name","slice","x","join","overlap","invisible","style","qs","parse","arrayFormat","skipNull","parseNumbers","date","prefix","currentDate","moment","format","diff","dispatchLogin","remove","removeItem","useLazyQuery","useDirectChatFetch","currentDirect","createDirect","createMessage","MainBlock_header","MainBlock_content","overflowY","borderTop","show","Toolbar"],"mappings":"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","file":"static/js/main.8849b43f.chunk.js","sourcesContent":["import { ApolloClient } from \"apollo-client\";\r\nimport { HttpLink } from \"apollo-link-http\";\r\nimport { WebSocketLink } from \"apollo-link-ws\";\r\nimport { ApolloLink, split } from \"apollo-link\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { onError } from \"apollo-link-error\";\r\nimport { getMainDefinition } from \"apollo-utilities\";\r\n\r\nconst httpLink = new HttpLink({ uri: process.env.REACT_APP_API_URI });\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri: `ws://localhost:8081/graphql`,\r\n  options: {\r\n    reconnect: false, // true\r\n    connectionParams: () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      const refreshToken = localStorage.getItem(\"refreshToken\");\r\n      return {\r\n        headers: {\r\n          \"x-token\": token,\r\n          \"x-refresh-token\": refreshToken\r\n        }\r\n      };\r\n    }\r\n  }\r\n});\r\n\r\nconst afterwareLink = new ApolloLink((operation, forward) =>\r\n  forward(operation).map(response => {\r\n    const context = operation.getContext();\r\n    const {\r\n      response: { headers }\r\n    } = context;\r\n    const token = headers.get(\"x-token\");\r\n    const refreshToken = headers.get(\"x-refresh-token\");\r\n    if (token && refreshToken) {\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"refreshToken\", refreshToken);\r\n    }\r\n\r\n    return response;\r\n  })\r\n);\r\n\r\nconst authMiddleware = new ApolloLink((operation, forward) => {\r\n  operation.setContext(({ headers }) => ({\r\n    headers: {\r\n      ...headers,\r\n      \"x-token\": localStorage.getItem(\"token\"),\r\n      \"x-refresh-token\": localStorage.getItem(\"refreshToken\")\r\n    }\r\n  }));\r\n\r\n  return forward(operation);\r\n});\r\n\r\nconst errorMiddleware = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors)\r\n    graphQLErrors.forEach(({ message, locations, path, extensions }) => {\r\n      console.log(\r\n        `[GraphQL error]: \r\n          Message: ${message}, \r\n          Location: ${locations}, \r\n          Path: ${path}`\r\n      );\r\n      if (extensions.code === \"UNAUTHENTICATED\") {\r\n        console.log(extensions.code, extensions.code === \"UNAUTHENTICATED\");\r\n        // store.dispatch(dispatchLogout());\r\n      }\r\n    });\r\n\r\n  if (networkError) {\r\n    console.log(`[Network error]: ${networkError}`);\r\n  }\r\n});\r\n\r\nconst httpLinkWithMiddleware = errorMiddleware.concat(\r\n  afterwareLink.concat(authMiddleware.concat(httpLink))\r\n);\r\n\r\nconst link = split(\r\n  ({ query }) => {\r\n    const definition = getMainDefinition(query);\r\n    return (\r\n      definition.kind === \"OperationDefinition\" &&\r\n      definition.operation === \"subscription\"\r\n    );\r\n  },\r\n  wsLink,\r\n  // errorMiddleware,\r\n  httpLinkWithMiddleware\r\n);\r\n\r\nexport const client = new ApolloClient({\r\n  link,\r\n  cache: new InMemoryCache()\r\n});\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { grey as primary, blue as secondary } from \"@material-ui/core/colors\";\r\nimport { lighten, darken } from \"@material-ui/core/styles/colorManipulator\";\r\n// import defaultTheme from \"@material-ui/core/styles/defaultTheme\";\r\n\r\nconst preferColorSchema = window.matchMedia(\"(prefers-color-scheme: dark)\")\r\n  .matches;\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    type: preferColorSchema ? \"dark\" : \"light\",\r\n    primary,\r\n    secondary,\r\n  },\r\n  props: {\r\n    sidebar: 280,\r\n    sidebarMin: 150,\r\n    classes: {\r\n      ellipsis: {\r\n        overflow: \"hidden\",\r\n        whiteSpace: \"nowrap\",\r\n        textOverflow: \"ellipsis\",\r\n      },\r\n    },\r\n  },\r\n  lighten,\r\n  darken,\r\n});\r\n\r\n// console.log(\"defaultTheme\", defaultTheme);\r\n// console.log(\"customTheme\", theme);\r\n// #90caf9 - link color\r\n","import TYPES from \"redux/actions/types\";\r\nimport { authTokens } from \"redux/actions/auth\";\r\n\r\nconst INITIAL_STATE = {\r\n  isAuthorized: !!localStorage.getItem(\"token\"),\r\n};\r\n\r\nexport default (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case TYPES.auth.LOGIN:\r\n      authTokens.set(payload);\r\n      return {\r\n        ...state,\r\n        isAuthorized: true,\r\n      };\r\n    case TYPES.auth.LOGOUT:\r\n      // authTokens.remove();\r\n      return {\r\n        ...state,\r\n        isAuthorized: false,\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\n\r\nexport default combineReducers({\r\n  auth\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"redux/reducers\";\r\n\r\nconst INITIAL_STATE = {};\r\nconst MIDDLEWARE = [];\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  INITIAL_STATE,\r\n  composeWithDevTools(applyMiddleware(...MIDDLEWARE))\r\n);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  Sidebar: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    maxWidth: theme.props.sidebar,\r\n    minWidth: theme.props.sidebarMin\r\n  },\r\n  Sidebar_header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  Sidebar_menuButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  Sidebar_searchbar: {\r\n    background:\r\n      theme.palette.type === \"dark\"\r\n        ? theme.lighten(theme.palette.background.default, 0.235)\r\n        : theme.darken(theme.palette.background.default, 0.057),\r\n    padding: `0 ${theme.spacing(1)}px`,\r\n    fontSize: theme.typography.body2.fontSize,\r\n    boxSizing: \"border-box\",\r\n    borderRadius: theme.shape.borderRadius\r\n  }\r\n}));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  MenuDrawer: {\r\n    position: \"absolute\",\r\n    width: \"95%\",\r\n    height: \"100%\",\r\n    zIndex: theme.zIndex.tooltip,\r\n    background: theme.palette.background.paper,\r\n    borderRight: `1px solid ${theme.palette.divider}`\r\n  },\r\n  MenuDrawer_listItem: {\r\n    \"& p\": {\r\n      width: \"100%\",\r\n      marginLeft: theme.spacing(2)\r\n    },\r\n    \"&:last-child p\": {\r\n      color: theme.palette.error.dark,\r\n      fontSize: theme.typography.body1.fontSize,\r\n      fontWeight: theme.typography.fontWeightBold,\r\n      marginLeft: 0\r\n    }\r\n  },\r\n  MenuDrawer_backdrop: {\r\n    width: \"100%\",\r\n    zIndex: 1300,\r\n    maxWidth: 960,\r\n    left: \"auto\",\r\n    right: \"auto\"\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Slide,\r\n  Backdrop,\r\n} from \"@material-ui/core\";\r\nimport Avatar from \"components/Avatar\";\r\nimport {\r\n  Group as GroupIcon,\r\n  Settings as SettingsIcon,\r\n  TouchApp as TouchAppIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useStyles } from \"./styles\";\r\nimport { CURRENT_USER } from \"graphql/queries\";\r\nimport { LOGOUT } from \"graphql/mutations\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { get } from \"lodash-es\";\r\nimport { connect } from \"react-redux\";\r\nimport { dispatchLogout } from \"redux/actions\";\r\n\r\nexport const menuSchema = [\r\n  {\r\n    title: \"New Group\",\r\n    link: \"/create_team\",\r\n    action: ({ onToggle }) => onToggle,\r\n    icon: <GroupIcon />,\r\n  },\r\n  {\r\n    title: \"New Channel\",\r\n    link: \"/create_channel\",\r\n    action: ({ onToggle }) => onToggle,\r\n    icon: <TouchAppIcon />,\r\n  },\r\n  {\r\n    title: \"Settings\",\r\n    link: \"/settings\",\r\n    action: ({ onToggle }) => onToggle,\r\n    icon: <SettingsIcon />,\r\n  },\r\n  {\r\n    title: \"Log Out\",\r\n    action: ({ onLogout }) => onLogout,\r\n  },\r\n];\r\n\r\nconst MenuDrawer = ({ open, ...props }) => {\r\n  const classes = useStyles();\r\n  const userData = useQuery(CURRENT_USER);\r\n  const [onLogout, { client }] = useMutation(LOGOUT, {\r\n    onCompleted: () => {\r\n      client.resetStore();\r\n      props.dispatchLogout();\r\n    },\r\n  });\r\n\r\n  const user = get(userData, \"data.currentUser\", {});\r\n\r\n  return (\r\n    <>\r\n      <Slide in={open} direction=\"right\">\r\n        <div className={classes.MenuDrawer}>\r\n          <List>\r\n            <ListItem>\r\n              <Avatar src={user.avatar} alt={user.username} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary={user.username} secondary={user.email} />\r\n            </ListItem>\r\n          </List>\r\n          <List>\r\n            {menuSchema.map(({ title, link, action, icon }) => (\r\n              <ListItem\r\n                key={title}\r\n                button\r\n                to={link}\r\n                className={classes.MenuDrawer_listItem}\r\n                component={link ? Link : \"div\"}\r\n                onClick={action ? action({ ...props, onLogout }) : undefined}\r\n              >\r\n                {icon}\r\n                <Typography variant=\"body2\" align={!!icon ? \"left\" : \"center\"}>\r\n                  {title}\r\n                </Typography>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Slide>\r\n      <Backdrop\r\n        open={open}\r\n        onClick={props.onToggle}\r\n        className={classes.MenuDrawer_backdrop}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(\r\n  connect(null, {\r\n    dispatchLogout,\r\n  })(MenuDrawer)\r\n);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  ChatItem_badge_root: {\r\n    height: 15,\r\n  },\r\n  ChatItem_badge_badge: {\r\n    position: \"relative\",\r\n    transform: \"none\",\r\n    height: \"inherit\",\r\n  },\r\n  ChatItem_primary: {\r\n    display: \"flex\",\r\n  },\r\n  ChatItem_secondary: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  ChatItem_primaryText: {\r\n    width: \"100%\",\r\n    ...theme.props.classes.ellipsis,\r\n  },\r\n  ChatItem_secondaryText: {\r\n    width: \"100%\",\r\n    marginRight: theme.spacing(1),\r\n    ...theme.props.classes.ellipsis,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\n\r\nconst ChatItemMenu = ({ anchorEl, onClose, onDelete }) => {\r\n  const handleActions = (callback) => () => {\r\n    callback();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={Boolean(anchorEl)}\r\n      onClose={onClose}\r\n    >\r\n      <MenuItem dense onClick={handleActions(onDelete)}>\r\n        Delete chat\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default ChatItemMenu;\r\n","import React from \"react\";\r\nimport {\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  Badge,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"components/Avatar\";\r\nimport { useStyles } from \"./styles\";\r\nimport { formatDate } from \"utils/index\";\r\nimport ChatItemMenu from \"./ChatItemMenu\";\r\nimport { DELETE_DIRECT } from \"graphql/mutations\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\n\r\nconst ChatItem = ({\r\n  user,\r\n  link,\r\n  unread,\r\n  selected,\r\n  lastMessage = {},\r\n  ...props\r\n}) => {\r\n  const classes = useStyles();\r\n  const [contextMenu, setContextMenu] = React.useState(null);\r\n  const [deleteDirect] = useMutation(DELETE_DIRECT);\r\n\r\n  const handleOpen = (e) => {\r\n    e.preventDefault();\r\n    setContextMenu(e.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => setContextMenu(null);\r\n\r\n  const handleDelete = () => deleteDirect({ variables: { id: props.chat.id } });\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        dense\r\n        button\r\n        // disableRipple\r\n        to={link}\r\n        component={Link}\r\n        selected={selected}\r\n        onContextMenu={handleOpen}\r\n        // {...props}\r\n      >\r\n        <ListItemAvatar>\r\n          <Avatar src={user.avatar} alt={user.username} online={user.online} />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary={\r\n            <>\r\n              <Typography\r\n                variant=\"body2\"\r\n                className={classes.ChatItem_primaryText}\r\n              >\r\n                {user.username}\r\n              </Typography>\r\n              <Typography variant=\"caption\" color=\"textSecondary\">\r\n                {formatDate(lastMessage.createdAt)}\r\n              </Typography>\r\n            </>\r\n          }\r\n          primaryTypographyProps={{\r\n            className: classes.ChatItem_primary,\r\n            component: \"div\",\r\n          }}\r\n          secondary={\r\n            <>\r\n              <Typography\r\n                variant=\"caption\"\r\n                className={classes.ChatItem_secondaryText}\r\n              >\r\n                {lastMessage.text}\r\n              </Typography>\r\n              <Badge\r\n                max={50}\r\n                classes={{\r\n                  badge: classes.ChatItem_badge_badge,\r\n                  root: classes.ChatItem_badge_root,\r\n                }}\r\n                badgeContent={unread}\r\n                color=\"secondary\"\r\n              />\r\n            </>\r\n          }\r\n          secondaryTypographyProps={{\r\n            className: classes.ChatItem_secondary,\r\n            component: \"div\",\r\n          }}\r\n        />\r\n      </ListItem>\r\n      <ChatItemMenu\r\n        anchorEl={contextMenu}\r\n        onClose={handleClose}\r\n        onDelete={handleDelete}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatItem;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  UserItem_primary: {\r\n    ...theme.props.classes.ellipsis\r\n  },\r\n  UserItem_secondary: {\r\n    ...theme.props.classes.ellipsis,\r\n    color: theme.palette.secondary[200]\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { ListItem, ListItemAvatar, ListItemText } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"components/Avatar\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst UserItem = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem dense button to={props.link} component={Link}>\r\n      <ListItemAvatar>\r\n        <Avatar src={props.user.avatar} alt={props.user.username} />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={props.user.username}\r\n        primaryTypographyProps={{\r\n          component: \"div\",\r\n          className: classes.UserItem_primary\r\n        }}\r\n        secondary={`@${props.user.username}`}\r\n        secondaryTypographyProps={{\r\n          variant: \"caption\",\r\n          component: \"div\",\r\n          className: classes.UserItem_secondary\r\n        }}\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\nimport { IconButton, InputBase } from \"@material-ui/core\";\r\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\r\nimport { useDebouncedCallback } from \"use-debounce\";\r\nimport { useStyles } from \"./styles\";\r\nimport MainBlock from \"components/MainBlock\";\r\nimport MenuDrawer from \"components/MenuDrawer\";\r\nimport ChatItem from \"components/ChatItem\";\r\nimport UserItem from \"components/UserItem\";\r\n\r\nconst renderDirects = (data, chatId) => {\r\n  return data\r\n    ? data.map((direct) => (\r\n        <ChatItem\r\n          chat={direct}\r\n          key={direct.id}\r\n          user={direct.user}\r\n          unread={direct.unread}\r\n          link={`/?p=${direct.user.id}`}\r\n          lastMessage={direct.lastMessage}\r\n          selected={direct.user.id === chatId}\r\n        />\r\n      ))\r\n    : null;\r\n};\r\n\r\nconst renderUsers = (data) => {\r\n  return data\r\n    ? data.map((user) => (\r\n        <UserItem key={user.id} user={user} link={`/?p=${user.id}`} />\r\n      ))\r\n    : null;\r\n};\r\n\r\nconst Sidebar = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    setSearch(\"\");\r\n  }, [props.chatId]);\r\n\r\n  React.useEffect(() => {\r\n    props.subscribeToOnlineUsers();\r\n    props.subscribeToNewDirect();\r\n    props.subscribeToDeleteDirect();\r\n\r\n    props.setOnline();\r\n\r\n    window.addEventListener(\"beforeunload\", (e) => {\r\n      e.preventDefault();\r\n      return props.setOffline();\r\n    });\r\n\r\n    return () => props.setOffline();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    let unsubsribes;\r\n    if (props.directs) {\r\n      unsubsribes = props.subscribeToNewMessage();\r\n\r\n      if (unsubsribes.length > 0) {\r\n        unsubsribes.forEach((unsubsribe) => unsubsribe());\r\n      }\r\n\r\n      unsubsribes = props.subscribeToNewMessage();\r\n    }\r\n  }, [props.directslength]);\r\n\r\n  React.useEffect(() => {\r\n    let unsubsribes;\r\n    if (props.directs) {\r\n      unsubsribes = props.subscribeToDeleteMessage();\r\n\r\n      if (unsubsribes.length > 0) {\r\n        unsubsribes.forEach((unsubsribe) => unsubsribe());\r\n      }\r\n\r\n      unsubsribes = props.subscribeToDeleteMessage();\r\n    }\r\n  }, [props.directslength]);\r\n\r\n  const [debounce] = useDebouncedCallback(\r\n    (value) => props.onSearch(value),\r\n    200\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value);\r\n    debounce(e.target.value);\r\n  };\r\n\r\n  const handleMenuToggle = () => setOpen(!open);\r\n\r\n  return (\r\n    <div className={classes.Sidebar}>\r\n      <MenuDrawer open={open} onToggle={handleMenuToggle} />\r\n      <MainBlock\r\n        header={\r\n          <div className={classes.Sidebar_header}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              className={classes.Sidebar_menuButton}\r\n              onClick={handleMenuToggle}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              size=\"small\"\r\n              value={search}\r\n              placeholder=\"Search\"\r\n              className={classes.Sidebar_searchbar}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        }\r\n      >\r\n        {!search.length\r\n          ? renderDirects(props.directs, props.chatId)\r\n          : renderUsers(props.users)}\r\n      </MainBlock>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { DIRECTS, DIRECT_LAST_MESSAGE } from \"graphql/queries\";\r\nimport {\r\n  NEW_MESSAGE_SUBSCRIPTION,\r\n  NEW_DIRECT_SUBSCRIPTION,\r\n  DELETE_MESSAGE_SUBSCRIPTION,\r\n  DELETE_DIRECT_SUBSCRIPTION,\r\n  ONLINE_USER_SUBSCRIPTION,\r\n} from \"graphql/subscriptions\";\r\nimport { pasreQuery } from \"utils/index\";\r\nimport Sidebar from \"components/Sidebar\";\r\nimport { get } from \"lodash-es\";\r\nimport { useSibebarFetch } from \"hooks/index\";\r\n\r\nconst sortByLastMessage = (a, b) =>\r\n  b.lastMessage.createdAt - a.lastMessage.createdAt;\r\n\r\nconst SidebarContainer = (props) => {\r\n  const {\r\n    queries: { user, directs },\r\n    lazyQueries: {\r\n      searchUsers: [searchUsers, searchUsersData],\r\n    },\r\n    mutations: { setOnline, setOffline },\r\n  } = useSibebarFetch();\r\n\r\n  const chatId = pasreQuery(props.location).p;\r\n\r\n  const subscribeToNewMessage = () => {\r\n    return [...directs.data.directs].map(({ id }) => {\r\n      return directs.subscribeToMore({\r\n        document: NEW_MESSAGE_SUBSCRIPTION,\r\n        variables: { chatId: id },\r\n        updateQuery: (prev, { subscriptionData }) => {\r\n          if (!subscriptionData.data) return prev;\r\n\r\n          const { newMessage } = subscriptionData.data;\r\n          const currentUser = get(user, \"data.currentUser\");\r\n          const unread = newMessage.userId !== currentUser.id ? 1 : 0;\r\n\r\n          const directs = prev.directs\r\n            .map((direct) => {\r\n              if (direct.id === id) {\r\n                direct = {\r\n                  ...direct,\r\n                  lastMessage: newMessage,\r\n                  unread: direct.unread + unread,\r\n                };\r\n              }\r\n              return direct;\r\n            })\r\n            .sort(sortByLastMessage);\r\n\r\n          return { directs };\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  const subscribeToNewDirect = () => {\r\n    return directs.subscribeToMore({\r\n      document: NEW_DIRECT_SUBSCRIPTION,\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n        const { newDirect } = subscriptionData.data;\r\n        const directs = prev.directs.concat(newDirect);\r\n        return { directs };\r\n      },\r\n    });\r\n  };\r\n\r\n  const subscribeToDeleteMessage = () => {\r\n    return [...directs.data.directs].map(({ id }) => {\r\n      return directs.subscribeToMore({\r\n        document: DELETE_MESSAGE_SUBSCRIPTION,\r\n        variables: { chatId: id },\r\n        updateQuery: async (prev, { subscriptionData }) => {\r\n          if (!subscriptionData.data) return prev;\r\n\r\n          const currentUser = get(user, \"data.currentUser\");\r\n          const { deleteMessage } = subscriptionData.data;\r\n\r\n          return await directs.client\r\n            .query({\r\n              query: DIRECT_LAST_MESSAGE,\r\n              variables: { chatId: id },\r\n              fetchPolicy: \"no-cache\",\r\n            })\r\n            .then(({ data }) => {\r\n              const directsData = [...prev.directs].map((direct) => {\r\n                const unread = deleteMessage.userId !== currentUser.id ? 1 : 0;\r\n\r\n                if (direct.lastMessage.id === deleteMessage.id) {\r\n                  direct = {\r\n                    ...direct,\r\n                    lastMessage: data.directLastMessage,\r\n                    unread: direct.unread - unread,\r\n                  };\r\n                }\r\n\r\n                return direct;\r\n              });\r\n\r\n              directs.client.writeQuery({\r\n                query: DIRECTS,\r\n                data: { directs: directsData },\r\n              });\r\n\r\n              return { directs: directsData };\r\n            });\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  const subscribeToDeleteDirect = () => {\r\n    return directs.subscribeToMore({\r\n      document: DELETE_DIRECT_SUBSCRIPTION,\r\n      updateQuery: async (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n        const { deleteDirect } = subscriptionData.data;\r\n\r\n        const directsData = prev.directs.filter(\r\n          (direct) => direct.id !== deleteDirect.id\r\n        );\r\n\r\n        directs.client.writeQuery({\r\n          query: DIRECTS,\r\n          data: { directs: directsData },\r\n        });\r\n\r\n        return { directs: directsData };\r\n      },\r\n    });\r\n  };\r\n\r\n  const subscribeToOnlineUsers = () => {\r\n    return directs.subscribeToMore({\r\n      document: ONLINE_USER_SUBSCRIPTION,\r\n    });\r\n  };\r\n\r\n  const onSearch = (username) => searchUsers({ variables: { username } });\r\n\r\n  return (\r\n    <Sidebar\r\n      chatId={chatId}\r\n      onSearch={onSearch}\r\n      users={get(searchUsersData, \"data.users\")}\r\n      directs={get(directs, \"data.directs\")}\r\n      subscribeToNewMessage={subscribeToNewMessage}\r\n      subscribeToNewDirect={subscribeToNewDirect}\r\n      subscribeToDeleteMessage={subscribeToDeleteMessage}\r\n      subscribeToDeleteDirect={subscribeToDeleteDirect}\r\n      subscribeToOnlineUsers={subscribeToOnlineUsers}\r\n      setOnline={setOnline}\r\n      setOffline={setOffline}\r\n      directslength={get(directs, \"data.directs.length\")}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(SidebarContainer);\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SidebarContainer from \"containers/SidebarContainer\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    maxHeight: \"100vh\"\r\n  },\r\n  contentShift: {\r\n    width: \"100%\",\r\n    minWidth: theme.props.sidebarMin\r\n  }\r\n}));\r\n\r\nconst Layout = ({ children, ...props }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.container}>\r\n      <SidebarContainer {...props} />\r\n      <div className={classes.contentShift}>{children}</div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport Loadable from \"react-loadable\";\nimport { connect } from \"react-redux\";\nimport Layout from \"components/Layout\";\n\nconst createLoadableComponent = (pathResolver) => {\n  return Loadable({\n    loader: pathResolver,\n    loading: (props) => {\n      if (props.error) console.error(props.error);\n      return null;\n    },\n  });\n};\n\nconst privatRoutes = [\n  {\n    path: \"/\",\n    exact: false,\n    component: createLoadableComponent(() => import(\"./pages/Home\")),\n  },\n  {\n    path: \"/verify\",\n    exact: true,\n    component: createLoadableComponent(() => import(\"./pages/VerifyUser\")),\n  },\n];\n\nconst publicRoutes = [\n  {\n    path: \"/(|registration)\",\n    exact: true,\n    component: createLoadableComponent(() => import(\"./pages/Login\")),\n  },\n  {\n    path: \"/verify\",\n    exact: true,\n    component: createLoadableComponent(() => import(\"./pages/VerifyUser\")),\n  },\n  { path: \"*\", component: Redirect },\n];\n\nconst App = (props) => {\n  return (\n    <>\n      <CssBaseline />\n      <Router>\n        {props.isAuthorized ? (\n          <Layout>\n            {privatRoutes.map((route) => (\n              <Route key={route.path} {...route} />\n            ))}\n          </Layout>\n        ) : (\n          <Switch>\n            {publicRoutes.map((route) => (\n              <Route key={route.path} {...route} />\n            ))}\n          </Switch>\n        )}\n      </Router>\n    </>\n  );\n};\n\nexport default connect(({ auth }) => ({ isAuthorized: auth.isAuthorized }))(\n  App\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { client } from \"./client\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { theme } from \"./theme\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { store } from \"redux/store\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nrender(\n  <ApolloProvider client={client}>\n    <ReduxProvider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </ReduxProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import gql from \"graphql-tag\";\r\n\r\nexport const USERS = gql`\r\n  query users($username: String) {\r\n    users(username: $username) {\r\n      id\r\n      email\r\n      avatar\r\n      online\r\n      username\r\n      lastSeen\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CURRENT_USER = gql`\r\n  query currentUser {\r\n    currentUser {\r\n      id\r\n      email\r\n      avatar\r\n      username\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DIRECTS = gql`\r\n  query directs {\r\n    directs {\r\n      id\r\n      user {\r\n        id\r\n        email\r\n        avatar\r\n        online\r\n        username\r\n        lastSeen\r\n        createdAt\r\n      }\r\n      lastMessage {\r\n        id\r\n        text\r\n        userId\r\n        createdAt\r\n      }\r\n      unread\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CURRENT_DIRECT = gql`\r\n  query currentDirect($userId: Int!) {\r\n    currentDirect(userId: $userId) {\r\n      direct {\r\n        id\r\n        messages {\r\n          id\r\n          text\r\n          userId\r\n          createdAt\r\n        }\r\n      }\r\n      recipient {\r\n        id\r\n        email\r\n        avatar\r\n        online\r\n        username\r\n        lastSeen\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DIRECT_LAST_MESSAGE = gql`\r\n  query directLastMessage($chatId: Int!) {\r\n    directLastMessage(chatId: $chatId) {\r\n      id\r\n      text\r\n      userId\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ONLINE_USERS = gql`\r\n  query onlineUsers {\r\n    onlineUsers {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const CREATE_USER = gql`\r\n  mutation createUser($username: String!, $email: String!, $password: String!) {\r\n    createUser(username: $username, email: $email, password: $password)\r\n  }\r\n`;\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VERIFY_USER = gql`\r\n  mutation verifyUser($secret: String!) {\r\n    verifyUser(secret: $secret) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_DIRECT = gql`\r\n  mutation createDirect($userId: Int!, $text: String) {\r\n    createDirect(userId: $userId, text: $text) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_MESSAGE = gql`\r\n  mutation createMessage($chatId: Int, $text: String!) {\r\n    createMessage(chatId: $chatId, text: $text)\r\n  }\r\n`;\r\n\r\nexport const DELETE_MESSAGE = gql`\r\n  mutation deleteMessage($id: Int!) {\r\n    deleteMessage(id: $id)\r\n  }\r\n`;\r\n\r\nexport const DELETE_DIRECT = gql`\r\n  mutation deleteDirect($id: Int!) {\r\n    deleteDirect(id: $id)\r\n  }\r\n`;\r\n\r\nexport const LOGOUT = gql`\r\n  mutation logout {\r\n    logout\r\n  }\r\n`;\r\n\r\nexport const SET_ONLINE = gql`\r\n  mutation setOnline {\r\n    setOnline {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SET_OFFLINE = gql`\r\n  mutation setOffline {\r\n    setOffline {\r\n      id\r\n    }\r\n  }\r\n`;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  Avatar: {\r\n    fontSize: theme.typography.body1.fontSize,\r\n    textTransform: \"uppercase\",\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { Avatar as MuiAvarat, Badge } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"$ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst Avatar = ({ alt = \"\", src, ...props }) => {\r\n  const classes = useStyles();\r\n  const name = alt\r\n    .split(\" \")\r\n    .slice(0, 2)\r\n    .map((x) => x[0])\r\n    .join(\"\");\r\n\r\n  return (\r\n    <StyledBadge\r\n      overlap=\"circle\"\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n      variant=\"dot\"\r\n      invisible={!props.online}\r\n    >\r\n      <MuiAvarat\r\n        src={src}\r\n        // alt={alt}\r\n        className={classes.Avatar}\r\n        style={{ background: src }}\r\n      >\r\n        {name}\r\n      </MuiAvarat>\r\n    </StyledBadge>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","export default {\r\n  auth: {\r\n    LOGIN: \"LOGIN\",\r\n    LOGOUT: \"LOGOUT\"\r\n  }\r\n};\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const NEW_MESSAGE_SUBSCRIPTION = gql`\r\n  subscription($chatId: Int!) {\r\n    newMessage(chatId: $chatId) {\r\n      id\r\n      text\r\n      userId\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_MESSAGE_SUBSCRIPTION = gql`\r\n  subscription($chatId: Int!) {\r\n    deleteMessage(chatId: $chatId) {\r\n      id\r\n      userId\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_DIRECT_SUBSCRIPTION = gql`\r\n  subscription deleteDirect {\r\n    deleteDirect {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NEW_DIRECT_SUBSCRIPTION = gql`\r\n  subscription {\r\n    newDirect {\r\n      id\r\n      user {\r\n        id\r\n        email\r\n        avatar\r\n        username\r\n        createdAt\r\n      }\r\n      lastMessage {\r\n        id\r\n        text\r\n        userId\r\n        createdAt\r\n      }\r\n      unread\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ONLINE_USER_SUBSCRIPTION = gql`\r\n  subscription {\r\n    onlineUser {\r\n      id\r\n      online\r\n      lastSeen\r\n    }\r\n  }\r\n`;\r\n","import qs from \"query-string\";\r\nimport React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nexport const stringifyQuery = (location, modifiers = {}) => {\r\n  const settings = {\r\n    arrayFormat: \"comma\",\r\n    skipNull: true,\r\n    parseNumbers: true\r\n  };\r\n\r\n  let query = {\r\n    ...qs.parse(location.search, settings),\r\n    ...modifiers\r\n  };\r\n\r\n  return {\r\n    ...location,\r\n    search: qs.stringify(query, settings)\r\n  };\r\n};\r\n\r\nexport const pasreQuery = location => {\r\n  const settings = {\r\n    arrayFormat: \"comma\",\r\n    skipNull: true,\r\n    parseNumbers: true\r\n  };\r\n  return qs.parse(location.search, settings);\r\n};\r\n\r\nexport const useRefCallback = value => {\r\n  const [bounding, setbounding] = React.useState({});\r\n\r\n  const ref = React.useCallback(node => {\r\n    if (!!node) {\r\n      setbounding(node.getBoundingClientRect());\r\n    }\r\n  }, []);\r\n\r\n  return [ref, bounding];\r\n};\r\n\r\nexport const formatDate = (date, prefix) => {\r\n  if (date) {\r\n    const currentDate = moment();\r\n    const formatDate = moment(+date);\r\n\r\n    const getFormat = diff => {\r\n      if (diff >= 5) {\r\n        return \"DD.MM.YY\";\r\n      } else {\r\n        return \"HH:mm\";\r\n      }\r\n    };\r\n\r\n    const format = getFormat(currentDate.diff(formatDate, \"days\"));\r\n\r\n    if (prefix) {\r\n      return prefix + formatDate.format(format);\r\n    }\r\n    return formatDate.format(format);\r\n  }\r\n};\r\n","import TYPES from \"redux/actions/types\";\r\n\r\nexport const dispatchLogin = (payload) => ({ type: TYPES.auth.LOGIN, payload });\r\n\r\nexport const dispatchLogout = () => ({ type: TYPES.auth.LOGOUT });\r\n\r\nexport const authTokens = {\r\n  set: ({ token, refreshToken }) => {\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"refreshToken\", refreshToken);\r\n  },\r\n  remove: () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"refreshToken\");\r\n  },\r\n};\r\n","export * from \"./auth\";\r\n","import { useQuery, useLazyQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { CURRENT_USER, CURRENT_DIRECT, USERS, DIRECTS } from \"graphql/queries\";\r\nimport {\r\n  SET_OFFLINE,\r\n  SET_ONLINE,\r\n  CREATE_DIRECT,\r\n  CREATE_MESSAGE,\r\n  DELETE_MESSAGE,\r\n} from \"graphql/mutations\";\r\n\r\nexport const useSibebarFetch = () => {\r\n  const user = useQuery(CURRENT_USER);\r\n  const directs = useQuery(DIRECTS);\r\n\r\n  const searchUsers = useLazyQuery(USERS);\r\n\r\n  const [setOnline] = useMutation(SET_ONLINE);\r\n  const [setOffline] = useMutation(SET_OFFLINE);\r\n\r\n  return {\r\n    queries: {\r\n      user,\r\n      directs,\r\n    },\r\n    lazyQueries: {\r\n      searchUsers,\r\n    },\r\n    mutations: {\r\n      setOnline,\r\n      setOffline,\r\n    },\r\n  };\r\n};\r\n\r\nexport const useDirectChatFetch = ({ userId }) => {\r\n  const currentUser = useQuery(CURRENT_USER);\r\n  const currentDirect = useQuery(CURRENT_DIRECT, { variables: { userId } });\r\n\r\n  const [createDirect] = useMutation(CREATE_DIRECT);\r\n  const [createMessage] = useMutation(CREATE_MESSAGE);\r\n  const [deleteMessage] = useMutation(DELETE_MESSAGE);\r\n\r\n  return {\r\n    queries: {\r\n      currentUser,\r\n      currentDirect,\r\n    },\r\n    lazyQueries: {},\r\n    mutations: {\r\n      createDirect,\r\n      createMessage,\r\n      deleteMessage,\r\n    },\r\n  };\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  MainBlock: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    overflow: \"hidden\",\r\n    background: theme.palette.background.paper,\r\n    borderRight: `1px solid ${theme.palette.divider}`\r\n  },\r\n  MainBlock_header: {},\r\n  MainBlock_content: {\r\n    height: \"100%\",\r\n    maxHeight: \"calc(100% - 64px)\",\r\n    overflowY: \"scroll\",\r\n    position: \"relative\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\"\r\n    },\r\n    borderTop: `1px solid ${theme.palette.divider}`\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { Toolbar } from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst MainBlock = ({ header, children, show = true }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.MainBlock}>\r\n      {show && (\r\n        <>\r\n          <Toolbar className={classes.MainBlock_header}>{header}</Toolbar>\r\n          <div className={classes.MainBlock_content}>{children}</div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(MainBlock);\r\n"],"sourceRoot":""}