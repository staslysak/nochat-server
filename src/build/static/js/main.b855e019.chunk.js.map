{"version":3,"sources":["hooks/index.js","components/Typing/styles.js","components/Typing/index.js","components/MainBlock/styles.js","components/MainBlock/index.js","client.js","theme.js","components/Sidebar/styles.js","components/MenuDrawer/styles.js","components/MenuDrawer/index.js","components/UserItem/styles.js","components/UserItem/index.js","components/ChatItem/styles.js","components/ChatItem/index.js","components/DirectItem/DirectItemMenu.js","components/DirectItem/index.js","components/StylesList/styles.js","components/StylesList/index.js","components/Sidebar/index.js","containers/SidebarContainer.js","components/Layout/index.js","App.js","serviceWorker.js","index.js","graphql/mutations.js","graphql/queries.js","utils/index.js","graphql/subscriptions.js","components/Avatar/styles.js","components/Avatar/index.js","redux/reducers/auth.js","redux/reducers/index.js","redux/store.js","redux/actions/types.js","redux/actions/auth.js","redux/actions/index.js"],"names":["useSibebarFetch","user","useQuery","CURRENT_USER","directs","DIRECTS","searchUsers","useLazyQuery","USERS","useMutation","SET_ONLINE","connect","SET_OFFLINE","disconnect","DELETE_DIRECT","deleteDirect","LOGOUT","onCompleted","a","store","dispatch","dispatchLogout","client","resetStore","logout","queries","lazyQueries","mutations","useDirectChatFetch","userId","currentUser","currentDirect","CURRENT_DIRECT","variables","CREATE_DIRECT","createDirect","CREATE_MESSAGE","createMessage","DELETE_MESSAGE","deleteMessage","READ_MESSAGE","readMessage","USER_TYPING","userTyping","useTyping","callback","chatId","username","React","useState","timer","typing","state","setState","typingUser","setUser","useDebouncedCallback","value","debounce","useStyles","makeStyles","theme","Typing","display","justifyContent","alignItems","color","palette","text","secondary","width","height","marginRight","background","borderRadius","animation","Typing_secondary","transform","opacity","props","classes","className","cx","variant","MainBlock","position","overflow","paper","borderRight","divider","MainBlock_header","MainBlock_content","maxHeight","overflowY","borderTop","memo","header","children","show","Toolbar","httpLink","HttpLink","uri","process","wsLink","WebSocketLink","options","reconnect","connectionParams","headers","localStorage","getItem","afterwareLink","ApolloLink","operation","forward","map","response","getContext","token","get","refreshToken","setItem","authMiddleware","setContext","httpLinkWithMiddleware","onError","graphQLErrors","networkError","forEach","message","locations","path","extensions","console","log","code","concat","link","split","query","definition","getMainDefinition","kind","ApolloClient","cache","InMemoryCache","preferColorSchema","window","matchMedia","matches","createMuiTheme","type","primary","sidebar","sidebarMin","ellipsis","whiteSpace","textOverflow","lighten","darken","Sidebar","maxWidth","minWidth","Sidebar_header","Sidebar_menuButton","spacing","Sidebar_searchbar","default","padding","fontSize","typography","body2","minHeight","shape","MenuDrawer","zIndex","tooltip","MenuDrawer_listItem","marginLeft","error","dark","body1","fontWeight","fontWeightBold","MenuDrawer_backdrop","left","right","menuSchema","title","action","onToggle","icon","Settings","onLogout","open","Slide","in","direction","List","ListItem","Avatar","src","avatar","alt","online","ListItemText","email","key","button","to","component","Link","onClick","undefined","Typography","align","Backdrop","UserItem_primary","UserItem_secondary","UserItem","dense","ListItemAvatar","primaryTypographyProps","secondaryTypographyProps","ChatItem_badge_root","ChatItem_badge_badge","ChatItem_primary","ChatItem_secondary","ChatItem_primaryText","ChatItem_secondaryText","ChatItem","date","unread","selected","onContextMenu","formatDate","Badge","max","badge","root","badgeContent","DirectItemMenu","anchorEl","onClose","onDelete","anchorOrigin","vertical","horizontal","Boolean","MenuItem","DirectItem","useEffect","unsubscribe","subscribeToUserTyping","direct","id","subscribeToDeleteMessage","subscribeToNewMessage","contextMenu","setContextMenu","lastMessage","createdAt","e","preventDefault","currentTarget","StyledList","StyledList_subheader","lineHeight","subheader","ListSubheader","setOpen","search","setSearch","subscribeToNewDirect","subscribeToDeleteDirect","subscribeToOnlineUsers","onConnect","addEventListener","onDisconnect","onSearch","handleMenuToggle","IconButton","edge","Menu","InputBase","size","placeholder","onChange","target","length","data","renderUsers","users","typings","onDeleteDirect","searchUsersData","pasreQuery","location","p","setTypings","sort","sortByLastMessage","directslength","subscribeToMore","document","NEW_DIRECT_SUBSCRIPTION","updateQuery","prev","subscriptionData","newDirect","NEW_MESSAGE_SUBSCRIPTION","newMessage","DELETE_DIRECT_SUBSCRIPTION","directsData","filter","writeQuery","DELETE_MESSAGE_SUBSCRIPTION","DIRECT_LAST_MESSAGE","fetchPolicy","then","directLastMessage","ONLINE_USER_SUBSCRIPTION","USER_TYPING_SUBSCRIPTION","container","contentShift","withRouter","Container","createLoadableComponent","pathResolver","Loadable","loader","loading","privatRoutes","exact","publicRoutes","Redirect","isAuthorized","auth","CssBaseline","route","hostname","match","render","ThemeProvider","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","CREATE_USER","gql","LOGIN","VERIFY_USER","qs","parse","arrayFormat","skipNull","parseNumbers","b","prefix","currentDate","moment","format","diff","textTransform","common","white","StyledBadge","withStyles","backgroundColor","boxShadow","top","border","content","name","slice","x","join","overlap","invisible","style","INITIAL_STATE","combineReducers","payload","TYPES","authTokens","set","remove","createStore","rootReducer","composeWithDevTools","applyMiddleware","dispatchLogin","removeItem"],"mappings":"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","file":"static/js/main.b855e019.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useQuery, useLazyQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { CURRENT_USER, CURRENT_DIRECT, USERS, DIRECTS } from \"graphql/queries\";\r\nimport {\r\n  SET_OFFLINE,\r\n  SET_ONLINE,\r\n  CREATE_DIRECT,\r\n  CREATE_MESSAGE,\r\n  DELETE_MESSAGE,\r\n  DELETE_DIRECT,\r\n  READ_MESSAGE,\r\n  USER_TYPING,\r\n  LOGOUT,\r\n} from \"graphql/mutations\";\r\nimport { useDebouncedCallback } from \"use-debounce\";\r\nimport { store } from \"redux/store\";\r\nimport { dispatchLogout } from \"redux/actions\";\r\n\r\nexport const useSibebarFetch = () => {\r\n  const user = useQuery(CURRENT_USER);\r\n  const directs = useQuery(DIRECTS);\r\n\r\n  const searchUsers = useLazyQuery(USERS);\r\n\r\n  const [connect] = useMutation(SET_ONLINE);\r\n  const [disconnect] = useMutation(SET_OFFLINE);\r\n  const [deleteDirect] = useMutation(DELETE_DIRECT);\r\n  const [logout, { client }] = useMutation(LOGOUT, {\r\n    onCompleted: async () => {\r\n      await disconnect();\r\n      await store.dispatch(dispatchLogout());\r\n      await client.resetStore();\r\n    },\r\n  });\r\n\r\n  return {\r\n    queries: {\r\n      user,\r\n      directs,\r\n    },\r\n    lazyQueries: {\r\n      searchUsers,\r\n    },\r\n    mutations: {\r\n      logout,\r\n      connect,\r\n      disconnect,\r\n      deleteDirect,\r\n    },\r\n  };\r\n};\r\n\r\nexport const useDirectChatFetch = ({ userId }) => {\r\n  const currentUser = useQuery(CURRENT_USER);\r\n  const currentDirect = useQuery(CURRENT_DIRECT, { variables: { userId } });\r\n\r\n  const [createDirect] = useMutation(CREATE_DIRECT);\r\n  const [createMessage] = useMutation(CREATE_MESSAGE);\r\n  const [deleteMessage] = useMutation(DELETE_MESSAGE);\r\n  const [readMessage] = useMutation(READ_MESSAGE);\r\n  const [userTyping] = useMutation(USER_TYPING);\r\n\r\n  return {\r\n    queries: {\r\n      currentUser,\r\n      currentDirect,\r\n    },\r\n    lazyQueries: {},\r\n    mutations: {\r\n      createDirect,\r\n      createMessage,\r\n      deleteMessage,\r\n      readMessage,\r\n      userTyping,\r\n    },\r\n  };\r\n};\r\n\r\nexport const useTyping = ({ chatId, userId, username }, callback) => {\r\n  const [state, setState] = React.useState({ timer: null, typing: false });\r\n  const [user, setUser] = React.useState(\"\");\r\n  const typingUser = { user, setUser };\r\n  const [debounce] = useDebouncedCallback(async (value) => {\r\n    setState({ ...state, typing: false });\r\n    await callback(value);\r\n  }, 1500);\r\n\r\n  const onTyping = async () => {\r\n    setState({ ...state, typing: true });\r\n\r\n    // const changeUsername = async () => {\r\n    //   setState({ ...state, typing: false });\r\n    //   await callback({ chatId, userId, username: \"\" });\r\n    // };\r\n\r\n    if (!state.typing) {\r\n      await callback({ chatId, userId, username });\r\n    }\r\n\r\n    debounce({ chatId, userId, username: \"\" });\r\n    // clearTimeout(state.timer);\r\n    // setState({ ...state, timer: setTimeout(changeUsername, 1500) });\r\n  };\r\n\r\n  return [typingUser, onTyping];\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  Typing: {\r\n    display: \"inline-flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    \"& span\": {\r\n      width: 5,\r\n      height: 5,\r\n      marginRight: 4,\r\n      background: theme.palette.text.secondary,\r\n      borderRadius: \"50%\",\r\n      \"&:nth-child(1)\": {\r\n        animation: \"$animation 1s ease-in-out infinite 0s\",\r\n      },\r\n      \"&:nth-child(2)\": {\r\n        animation: \"$animation 1s ease-in-out infinite 0.2s\",\r\n      },\r\n      \"&:nth-child(3)\": {\r\n        animation: \"$animation 1s ease-in-out infinite 0.4s\",\r\n      },\r\n    },\r\n  },\r\n  Typing_secondary: {\r\n    color: theme.palette.secondary[200],\r\n    \"& span\": {\r\n      background: theme.palette.secondary[200],\r\n    },\r\n  },\r\n  \"@keyframes animation\": {\r\n    \"0%, 100%\": {\r\n      transform: \"scale(1)\",\r\n      opacity: 1,\r\n    },\r\n    \"50%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 0.5,\r\n    },\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport cx from \"classnames\";\r\n\r\nconst Typing = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <span\r\n      className={cx(classes.Typing, {\r\n        [classes.Typing_secondary]: props.variant === \"secondary\",\r\n      })}\r\n    >\r\n      <span />\r\n      <span />\r\n      <span />\r\n      typing\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Typing;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  MainBlock: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    height: \"100vh\",\r\n    overflow: \"hidden\",\r\n    background: theme.palette.background.paper,\r\n    borderRight: `1px solid ${theme.palette.divider}`\r\n  },\r\n  MainBlock_header: {},\r\n  MainBlock_content: {\r\n    height: \"100%\",\r\n    maxHeight: \"calc(100% - 64px)\",\r\n    overflowY: \"scroll\",\r\n    position: \"relative\",\r\n    \"&::-webkit-scrollbar\": {\r\n      display: \"none\"\r\n    },\r\n    borderTop: `1px solid ${theme.palette.divider}`\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { Toolbar } from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst MainBlock = ({ header, children, show = true }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.MainBlock}>\r\n      {show && (\r\n        <>\r\n          <Toolbar className={classes.MainBlock_header}>{header}</Toolbar>\r\n          <div className={classes.MainBlock_content}>{children}</div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(MainBlock);\r\n","import { ApolloClient } from \"apollo-client\";\r\nimport { HttpLink } from \"apollo-link-http\";\r\nimport { WebSocketLink } from \"apollo-link-ws\";\r\nimport { ApolloLink, split } from \"apollo-link\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { onError } from \"apollo-link-error\";\r\nimport { getMainDefinition } from \"apollo-utilities\";\r\nimport { store } from \"./redux/store\";\r\nimport { dispatchLogout } from \"redux/actions\";\r\n\r\nconst httpLink = new HttpLink({ uri: process.env.REACT_APP_API_URI });\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri: process.env.REACT_APP_SOCKET_URI,\r\n  options: {\r\n    reconnect: true,\r\n    connectionParams: () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      const refreshToken = localStorage.getItem(\"refreshToken\");\r\n      return {\r\n        headers: {\r\n          \"x-token\": token,\r\n          \"x-refresh-token\": refreshToken,\r\n        },\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nconst afterwareLink = new ApolloLink((operation, forward) =>\r\n  forward(operation).map((response) => {\r\n    const context = operation.getContext();\r\n    const {\r\n      response: { headers },\r\n    } = context;\r\n    const token = headers.get(\"x-token\");\r\n    const refreshToken = headers.get(\"x-refresh-token\");\r\n    if (token && refreshToken) {\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"refreshToken\", refreshToken);\r\n    }\r\n\r\n    return response;\r\n  })\r\n);\r\n\r\nconst authMiddleware = new ApolloLink((operation, forward) => {\r\n  operation.setContext(({ headers }) => ({\r\n    headers: {\r\n      ...headers,\r\n      \"x-token\": localStorage.getItem(\"token\"),\r\n      \"x-refresh-token\": localStorage.getItem(\"refreshToken\"),\r\n    },\r\n  }));\r\n\r\n  return forward(operation);\r\n});\r\n\r\nconst errorMiddleware = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors)\r\n    graphQLErrors.forEach(({ message, locations, path, extensions }) => {\r\n      console.log(\r\n        `[GraphQL error]: \r\n          Message: ${message}, \r\n          Location: ${locations}, \r\n          Path: ${path}`\r\n      );\r\n      if (extensions.code === \"UNAUTHENTICATED\") {\r\n        console.log(extensions.code, extensions.code === \"UNAUTHENTICATED\");\r\n        store.dispatch(dispatchLogout());\r\n      }\r\n    });\r\n\r\n  if (networkError) {\r\n    console.log(`[Network error]: ${networkError}`);\r\n  }\r\n});\r\n\r\nconst httpLinkWithMiddleware = errorMiddleware.concat(\r\n  afterwareLink.concat(authMiddleware.concat(httpLink))\r\n);\r\n\r\nconst link = split(\r\n  ({ query }) => {\r\n    const definition = getMainDefinition(query);\r\n    return (\r\n      definition.kind === \"OperationDefinition\" &&\r\n      definition.operation === \"subscription\"\r\n    );\r\n  },\r\n  wsLink,\r\n  // errorMiddleware,\r\n  httpLinkWithMiddleware\r\n);\r\n\r\nexport const client = new ApolloClient({\r\n  link,\r\n  cache: new InMemoryCache(),\r\n});\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { grey as primary, blue as secondary } from \"@material-ui/core/colors\";\r\nimport { lighten, darken } from \"@material-ui/core/styles/colorManipulator\";\r\n// import defaultTheme from \"@material-ui/core/styles/defaultTheme\";\r\n\r\nconst preferColorSchema = window.matchMedia(\"(prefers-color-scheme: dark)\")\r\n  .matches;\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    type: preferColorSchema ? \"dark\" : \"light\",\r\n    primary,\r\n    secondary,\r\n  },\r\n  props: {\r\n    sidebar: 280,\r\n    sidebarMin: 150,\r\n    classes: {\r\n      ellipsis: {\r\n        overflow: \"hidden\",\r\n        whiteSpace: \"nowrap\",\r\n        textOverflow: \"ellipsis\",\r\n      },\r\n    },\r\n  },\r\n  lighten,\r\n  darken,\r\n});\r\n\r\n// console.log(\"defaultTheme\", defaultTheme);\r\n// console.log(\"customTheme\", theme);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  Sidebar: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    maxWidth: theme.props.sidebar,\r\n    minWidth: theme.props.sidebarMin,\r\n  },\r\n  Sidebar_header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  Sidebar_menuButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  Sidebar_searchbar: {\r\n    background:\r\n      theme.palette.type === \"dark\"\r\n        ? theme.lighten(theme.palette.background.default, 0.235)\r\n        : theme.darken(theme.palette.background.default, 0.057),\r\n    padding: `0 ${theme.spacing(1)}px`,\r\n    fontSize: theme.typography.body2.fontSize,\r\n    minHeight: 32,\r\n    borderRadius: theme.shape.borderRadius,\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  MenuDrawer: {\r\n    position: \"absolute\",\r\n    width: \"95%\",\r\n    height: \"100%\",\r\n    zIndex: theme.zIndex.tooltip,\r\n    background: theme.palette.background.paper,\r\n    borderRight: `1px solid ${theme.palette.divider}`\r\n  },\r\n  MenuDrawer_listItem: {\r\n    \"& p\": {\r\n      width: \"100%\",\r\n      marginLeft: theme.spacing(2)\r\n    },\r\n    \"&:last-child p\": {\r\n      color: theme.palette.error.dark,\r\n      fontSize: theme.typography.body1.fontSize,\r\n      fontWeight: theme.typography.fontWeightBold,\r\n      marginLeft: 0\r\n    }\r\n  },\r\n  MenuDrawer_backdrop: {\r\n    width: \"100%\",\r\n    zIndex: 1300,\r\n    maxWidth: 960,\r\n    left: \"auto\",\r\n    right: \"auto\"\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Slide,\r\n  Backdrop,\r\n} from \"@material-ui/core\";\r\nimport Avatar from \"components/Avatar\";\r\nimport {\r\n  // Group as GroupIcon,\r\n  Settings as SettingsIcon,\r\n  // TouchApp as TouchAppIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nexport const menuSchema = [\r\n  // {\r\n  //   title: \"New Group\",\r\n  //   link: \"/create_team\",\r\n  //   action: ({ onToggle }) => onToggle,\r\n  //   icon: <GroupIcon />,\r\n  // },\r\n  // {\r\n  //   title: \"New Channel\",\r\n  //   link: \"/create_channel\",\r\n  //   action: ({ onToggle }) => onToggle,\r\n  //   icon: <TouchAppIcon />,\r\n  // },\r\n  {\r\n    title: \"Settings\",\r\n    link: \"/settings\",\r\n    action: ({ onToggle }) => onToggle,\r\n    icon: <SettingsIcon />,\r\n  },\r\n  {\r\n    title: \"Log Out\",\r\n    action: ({ onLogout }) => onLogout,\r\n  },\r\n];\r\n\r\nconst MenuDrawer = ({ open, user, onLogout, ...props }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Slide in={open} direction=\"right\">\r\n        <div className={classes.MenuDrawer}>\r\n          <List>\r\n            <ListItem>\r\n              <Avatar\r\n                src={user.avatar}\r\n                alt={user.username}\r\n                online={user.online}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary={user.username} secondary={user.email} />\r\n            </ListItem>\r\n          </List>\r\n          <List>\r\n            {menuSchema.map(({ title, link, action, icon }) => (\r\n              <ListItem\r\n                key={title}\r\n                button\r\n                to={link}\r\n                className={classes.MenuDrawer_listItem}\r\n                component={link ? Link : \"div\"}\r\n                onClick={action ? action({ ...props, onLogout }) : undefined}\r\n              >\r\n                {icon}\r\n                <Typography variant=\"body2\" align={!!icon ? \"left\" : \"center\"}>\r\n                  {title}\r\n                </Typography>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Slide>\r\n      <Backdrop\r\n        open={open}\r\n        onClick={props.onToggle}\r\n        className={classes.MenuDrawer_backdrop}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(MenuDrawer);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  UserItem_primary: {\r\n    ...theme.props.classes.ellipsis\r\n  },\r\n  UserItem_secondary: {\r\n    ...theme.props.classes.ellipsis,\r\n    color: theme.palette.secondary[200]\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { ListItem, ListItemAvatar, ListItemText } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"components/Avatar\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst UserItem = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem {...props} dense button to={props.link} component={Link}>\r\n      <ListItemAvatar>\r\n        <Avatar\r\n          src={props.user.avatar}\r\n          alt={props.user.username}\r\n          online={props.user.online}\r\n        />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={props.user.username}\r\n        primaryTypographyProps={{\r\n          component: \"div\",\r\n          className: classes.UserItem_primary,\r\n        }}\r\n        secondary={`@${props.user.username}`}\r\n        secondaryTypographyProps={{\r\n          variant: \"caption\",\r\n          component: \"div\",\r\n          className: classes.UserItem_secondary,\r\n        }}\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  ChatItem_badge_root: {\r\n    height: 15,\r\n  },\r\n  ChatItem_badge_badge: {\r\n    position: \"relative\",\r\n    transform: \"none\",\r\n    height: \"inherit\",\r\n  },\r\n  ChatItem_primary: {\r\n    display: \"flex\",\r\n  },\r\n  ChatItem_secondary: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  ChatItem_primaryText: {\r\n    width: \"100%\",\r\n    ...theme.props.classes.ellipsis,\r\n  },\r\n  ChatItem_secondaryText: {\r\n    width: \"100%\",\r\n    marginRight: theme.spacing(1),\r\n    ...theme.props.classes.ellipsis,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport {\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Typography,\r\n  Badge,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"components/Avatar\";\r\nimport { useStyles } from \"./styles\";\r\nimport { formatDate } from \"utils/index\";\r\nimport Typing from \"components/Typing\";\r\n\r\nconst ChatItem = ({\r\n  link,\r\n  date,\r\n  avatar,\r\n  online,\r\n  unread,\r\n  typing = false,\r\n  selected,\r\n  primary,\r\n  secondary,\r\n\r\n  onContextMenu,\r\n  ...props\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      dense\r\n      button\r\n      // disableRipple\r\n      to={link}\r\n      component={Link}\r\n      selected={selected}\r\n      onContextMenu={onContextMenu}\r\n      {...props}\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar src={avatar} alt={primary} online={online} />\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={\r\n          <>\r\n            <Typography\r\n              variant=\"body2\"\r\n              className={classes.ChatItem_primaryText}\r\n            >\r\n              {primary}\r\n            </Typography>\r\n            <Typography variant=\"caption\" color=\"textSecondary\">\r\n              {formatDate(date)}\r\n            </Typography>\r\n          </>\r\n        }\r\n        primaryTypographyProps={{\r\n          className: classes.ChatItem_primary,\r\n          component: \"div\",\r\n        }}\r\n        secondary={\r\n          <>\r\n            <Typography\r\n              variant=\"caption\"\r\n              className={classes.ChatItem_secondaryText}\r\n            >\r\n              {typing ? <Typing /> : secondary}\r\n            </Typography>\r\n            <Badge\r\n              max={50}\r\n              classes={{\r\n                badge: classes.ChatItem_badge_badge,\r\n                root: classes.ChatItem_badge_root,\r\n              }}\r\n              badgeContent={unread}\r\n              color=\"secondary\"\r\n            />\r\n          </>\r\n        }\r\n        secondaryTypographyProps={{\r\n          className: classes.ChatItem_secondary,\r\n          component: \"div\",\r\n        }}\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default ChatItem;\r\n","import React from \"react\";\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\n\r\nconst DirectItemMenu = ({ anchorEl, onClose, onDelete }) => {\r\n  const handleActions = (callback) => () => {\r\n    callback();\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={Boolean(anchorEl)}\r\n      onClose={onClose}\r\n    >\r\n      <MenuItem dense onClick={handleActions(onDelete)}>\r\n        Delete chat\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default DirectItemMenu;\r\n","import React from \"react\";\r\nimport ChatItem from \"components/ChatItem\";\r\nimport DirectItemMenu from \"./DirectItemMenu\";\r\n\r\nconst DirectItem = (props) => {\r\n  React.useEffect(() => {\r\n    const unsubscribe = props.subscribeToUserTyping(props.direct.id);\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = props.subscribeToDeleteMessage(props.direct.id);\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = props.subscribeToNewMessage(props.direct.id);\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const [contextMenu, setContextMenu] = React.useState(null);\r\n\r\n  const handleOpen = (e) => {\r\n    e.preventDefault();\r\n    setContextMenu(e.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => setContextMenu(null);\r\n\r\n  const handleDelete = () => {\r\n    props.onDelete(props.direct.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ChatItem\r\n        link={props.link}\r\n        typing={props.typing}\r\n        selected={props.selected}\r\n        avatar={props.user.avatar}\r\n        online={props.user.online}\r\n        unread={props.direct.unread}\r\n        primary={props.user.username}\r\n        secondary={props.direct.lastMessage.text}\r\n        date={props.direct.lastMessage.createdAt}\r\n        onContextMenu={handleOpen}\r\n      />\r\n      <DirectItemMenu\r\n        anchorEl={contextMenu}\r\n        onClose={handleClose}\r\n        onDelete={handleDelete}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DirectItem;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  StyledList: {},\r\n  StyledList_subheader: {\r\n    background:\r\n      theme.palette.type === \"dark\"\r\n        ? theme.lighten(theme.palette.background.default, 0.235)\r\n        : theme.darken(theme.palette.background.default, 0.057),\r\n    lineHeight: \"32px\",\r\n    fontSize: theme.typography.body2.fontSize,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { ListSubheader, List } from \"@material-ui/core\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst StyledList = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List\r\n      {...props}\r\n      subheader={\r\n        props.subheader ? (\r\n          <ListSubheader\r\n            component=\"div\"\r\n            className={classes.StyledList_subheader}\r\n          >\r\n            {props.subheader}\r\n          </ListSubheader>\r\n        ) : null\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default StyledList;\r\n","import React from \"react\";\r\nimport { IconButton, InputBase, ListSubheader, List } from \"@material-ui/core\";\r\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\r\nimport { useDebouncedCallback } from \"use-debounce\";\r\nimport { useStyles } from \"./styles\";\r\nimport MainBlock from \"components/MainBlock\";\r\nimport MenuDrawer from \"components/MenuDrawer\";\r\nimport UserItem from \"components/UserItem\";\r\nimport DirectItem from \"components/DirectItem\";\r\nimport StyledList from \"components/StylesList\";\r\n\r\nconst Sidebar = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  const renderUsers = (data) => {\r\n    return data ? (\r\n      <StyledList subheader=\"Global search\">\r\n        {data.map((user) => (\r\n          <UserItem\r\n            key={user.id}\r\n            user={user}\r\n            link={`/?p=${user.id}`}\r\n            onClick={() => setSearch(\"\")}\r\n          />\r\n        ))}\r\n      </StyledList>\r\n    ) : null;\r\n  };\r\n\r\n  const renderDirects = (data) => {\r\n    return data.map((direct) => (\r\n      <DirectItem\r\n        key={direct.id}\r\n        direct={direct}\r\n        user={direct.user}\r\n        typing={\r\n          props.typings[direct.id] === direct.user.username\r\n            ? props.typings[direct.id]\r\n            : \"\"\r\n        }\r\n        link={`/?p=${direct.user.id}`}\r\n        selected={direct.user.id === props.chatId}\r\n        onDelete={props.onDeleteDirect}\r\n        subscribeToUserTyping={props.subscribeToUserTyping}\r\n        subscribeToNewMessage={props.subscribeToNewMessage}\r\n        subscribeToDeleteMessage={props.subscribeToDeleteMessage}\r\n      />\r\n    ));\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setSearch(\"\");\r\n  }, [props.chatId]);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = props.subscribeToNewDirect();\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = props.subscribeToDeleteDirect();\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = props.subscribeToOnlineUsers();\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    props.onConnect();\r\n\r\n    window.addEventListener(\"beforeunload\", (e) => {\r\n      e.preventDefault();\r\n      return props.onDisconnect();\r\n    });\r\n  }, []);\r\n\r\n  const [debounce] = useDebouncedCallback(\r\n    (value) => props.onSearch(value),\r\n    200\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value);\r\n    debounce(e.target.value);\r\n  };\r\n\r\n  const handleMenuToggle = () => setOpen(!open);\r\n\r\n  return (\r\n    <div className={classes.Sidebar}>\r\n      <MenuDrawer\r\n        open={open}\r\n        user={props.currentUser}\r\n        onLogout={props.onLogout}\r\n        onToggle={handleMenuToggle}\r\n      />\r\n      <MainBlock\r\n        header={\r\n          <div className={classes.Sidebar_header}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              className={classes.Sidebar_menuButton}\r\n              onClick={handleMenuToggle}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <InputBase\r\n              size=\"small\"\r\n              value={search}\r\n              placeholder=\"Search\"\r\n              className={classes.Sidebar_searchbar}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        }\r\n      >\r\n        {!search.length\r\n          ? renderDirects(props.directs)\r\n          : renderUsers(props.users)}\r\n      </MainBlock>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { DIRECTS, DIRECT_LAST_MESSAGE } from \"graphql/queries\";\r\nimport {\r\n  NEW_MESSAGE_SUBSCRIPTION,\r\n  NEW_DIRECT_SUBSCRIPTION,\r\n  DELETE_MESSAGE_SUBSCRIPTION,\r\n  DELETE_DIRECT_SUBSCRIPTION,\r\n  ONLINE_USER_SUBSCRIPTION,\r\n  USER_TYPING_SUBSCRIPTION,\r\n} from \"graphql/subscriptions\";\r\nimport { pasreQuery } from \"utils/index\";\r\nimport Sidebar from \"components/Sidebar\";\r\nimport { get } from \"lodash-es\";\r\nimport { sortByLastMessage } from \"utils/index\";\r\nimport { useSibebarFetch } from \"hooks/index\";\r\n\r\nconst SidebarContainer = (props) => {\r\n  const {\r\n    queries: { user, directs },\r\n    lazyQueries: {\r\n      searchUsers: [searchUsers, searchUsersData],\r\n    },\r\n    mutations: { logout, connect, disconnect, deleteDirect },\r\n  } = useSibebarFetch();\r\n\r\n  const chatId = pasreQuery(props.location).p;\r\n\r\n  const [typings, setTypings] = React.useState({});\r\n\r\n  const subscribeToNewMessage = (chatId) =>\r\n    directs.subscribeToMore({\r\n      document: NEW_MESSAGE_SUBSCRIPTION,\r\n      variables: { chatId },\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n\r\n        const { newMessage } = subscriptionData.data;\r\n        const currentUser = get(user, \"data.currentUser\");\r\n        const unread = newMessage.userId !== currentUser.id ? 1 : 0;\r\n\r\n        const directs = prev.directs\r\n          .map((direct) => {\r\n            if (direct.id === chatId) {\r\n              direct = {\r\n                ...direct,\r\n                lastMessage: newMessage,\r\n                unread: direct.unread + unread,\r\n              };\r\n            }\r\n            return direct;\r\n          })\r\n          .sort(sortByLastMessage);\r\n\r\n        return { directs };\r\n      },\r\n    });\r\n\r\n  const subscribeToNewDirect = () => {\r\n    return directs.subscribeToMore({\r\n      document: NEW_DIRECT_SUBSCRIPTION,\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n        const { newDirect } = subscriptionData.data;\r\n        const directs = prev.directs.concat(newDirect).sort(sortByLastMessage);\r\n        return { directs };\r\n      },\r\n    });\r\n  };\r\n\r\n  const subscribeToDeleteMessage = (chatId) => {\r\n    return directs.subscribeToMore({\r\n      document: DELETE_MESSAGE_SUBSCRIPTION,\r\n      variables: { chatId },\r\n      updateQuery: async (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n\r\n        const currentUser = get(user, \"data.currentUser\");\r\n        const { deleteMessage } = subscriptionData.data;\r\n\r\n        return await directs.client\r\n          .query({\r\n            query: DIRECT_LAST_MESSAGE,\r\n            variables: { chatId },\r\n            fetchPolicy: \"no-cache\",\r\n          })\r\n          .then(({ data }) => {\r\n            const directsData = [...prev.directs].map((direct) => {\r\n              const unread = deleteMessage.userId !== currentUser.id ? 1 : 0;\r\n\r\n              if (direct.lastMessage.id === deleteMessage.id) {\r\n                direct = {\r\n                  ...direct,\r\n                  lastMessage: data.directLastMessage,\r\n                  unread: direct.unread - unread,\r\n                };\r\n              }\r\n\r\n              return direct;\r\n            });\r\n\r\n            directs.client.writeQuery({\r\n              query: DIRECTS,\r\n              data: { directs: directsData },\r\n            });\r\n\r\n            return { directs: directsData };\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  const subscribeToDeleteDirect = () => {\r\n    return directs.subscribeToMore({\r\n      document: DELETE_DIRECT_SUBSCRIPTION,\r\n      updateQuery: async (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n        const { deleteDirect } = subscriptionData.data;\r\n\r\n        const directsData = prev.directs.filter(\r\n          (direct) => direct.id !== deleteDirect.id\r\n        );\r\n\r\n        directs.client.writeQuery({\r\n          query: DIRECTS,\r\n          data: { directs: directsData },\r\n        });\r\n\r\n        return { directs: directsData };\r\n      },\r\n    });\r\n  };\r\n\r\n  const subscribeToOnlineUsers = () => {\r\n    return directs.subscribeToMore({\r\n      document: ONLINE_USER_SUBSCRIPTION,\r\n    });\r\n  };\r\n\r\n  const subscribeToUserTyping = (chatId) =>\r\n    directs.subscribeToMore({\r\n      document: USER_TYPING_SUBSCRIPTION,\r\n      variables: { chatId },\r\n      updateQuery: (prev, { subscriptionData }) => {\r\n        if (!subscriptionData.data) return prev;\r\n        const { userTyping } = subscriptionData.data;\r\n        setTypings({ ...typings, [chatId]: userTyping });\r\n        return prev;\r\n      },\r\n    });\r\n\r\n  const onSearch = (username) => searchUsers({ variables: { username } });\r\n\r\n  const onDeleteDirect = (id) => {\r\n    deleteDirect({ variables: { id } });\r\n  };\r\n\r\n  return (\r\n    <Sidebar\r\n      chatId={chatId}\r\n      typings={typings}\r\n      directs={get(directs, \"data.directs\", []).sort(sortByLastMessage)}\r\n      users={get(searchUsersData, \"data.users\")}\r\n      currentUser={get(user, \"data.currentUser\", {})}\r\n      directslength={get(directs, \"data.directs.length\")}\r\n      onLogout={logout}\r\n      onConnect={connect}\r\n      onSearch={onSearch}\r\n      onDisconnect={disconnect}\r\n      onDeleteDirect={onDeleteDirect}\r\n      subscribeToNewDirect={subscribeToNewDirect}\r\n      subscribeToNewMessage={subscribeToNewMessage}\r\n      subscribeToDeleteDirect={subscribeToDeleteDirect}\r\n      subscribeToDeleteMessage={subscribeToDeleteMessage}\r\n      subscribeToOnlineUsers={subscribeToOnlineUsers}\r\n      subscribeToUserTyping={subscribeToUserTyping}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(SidebarContainer);\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport SidebarContainer from \"containers/SidebarContainer\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    maxHeight: \"100vh\"\r\n  },\r\n  contentShift: {\r\n    width: \"100%\",\r\n    minWidth: theme.props.sidebarMin\r\n  }\r\n}));\r\n\r\nconst Layout = ({ children, ...props }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.container}>\r\n      <SidebarContainer {...props} />\r\n      <div className={classes.contentShift}>{children}</div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport Loadable from \"react-loadable\";\nimport { connect } from \"react-redux\";\nimport Layout from \"components/Layout\";\n\nconst createLoadableComponent = (pathResolver) => {\n  return Loadable({\n    loader: pathResolver,\n    loading: (props) => {\n      if (props.error) console.error(props.error);\n      return null;\n    },\n  });\n};\n\nconst privatRoutes = [\n  {\n    path: \"/\",\n    exact: false,\n    component: createLoadableComponent(() => import(\"./pages/Home\")),\n  },\n  {\n    path: \"/verify\",\n    exact: true,\n    component: createLoadableComponent(() => import(\"./pages/VerifyUser\")),\n  },\n];\n\nconst publicRoutes = [\n  {\n    path: \"/(|registration)\",\n    exact: true,\n    component: createLoadableComponent(() => import(\"./pages/Login\")),\n  },\n  {\n    path: \"/verify\",\n    exact: true,\n    component: createLoadableComponent(() => import(\"./pages/VerifyUser\")),\n  },\n  { path: \"*\", component: Redirect },\n];\n\nconst App = (props) => {\n  return (\n    <>\n      <CssBaseline />\n      <Router>\n        {props.isAuthorized ? (\n          <Layout>\n            {privatRoutes.map((route) => (\n              <Route key={route.path} {...route} />\n            ))}\n          </Layout>\n        ) : (\n          <Switch>\n            {publicRoutes.map((route) => (\n              <Route key={route.path} {...route} />\n            ))}\n          </Switch>\n        )}\n      </Router>\n    </>\n  );\n};\n\nexport default connect(({ auth }) => ({ isAuthorized: auth.isAuthorized }))(\n  App\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { client } from \"./client\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { theme } from \"./theme\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { store } from \"redux/store\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nrender(\n  <ApolloProvider client={client}>\n    <ReduxProvider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </ReduxProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import gql from \"graphql-tag\";\r\n\r\nexport const CREATE_USER = gql`\r\n  mutation createUser($username: String!, $email: String!, $password: String!) {\r\n    createUser(username: $username, email: $email, password: $password)\r\n  }\r\n`;\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const VERIFY_USER = gql`\r\n  mutation verifyUser($secret: String!) {\r\n    verifyUser(secret: $secret) {\r\n      token\r\n      refreshToken\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_DIRECT = gql`\r\n  mutation createDirect($userId: Int!, $text: String) {\r\n    createDirect(userId: $userId, text: $text) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_MESSAGE = gql`\r\n  mutation createMessage($chatId: Int, $text: String!) {\r\n    createMessage(chatId: $chatId, text: $text)\r\n  }\r\n`;\r\n\r\nexport const DELETE_MESSAGE = gql`\r\n  mutation deleteMessage($id: Int!) {\r\n    deleteMessage(id: $id)\r\n  }\r\n`;\r\n\r\nexport const DELETE_DIRECT = gql`\r\n  mutation deleteDirect($id: Int!) {\r\n    deleteDirect(id: $id)\r\n  }\r\n`;\r\n\r\nexport const READ_MESSAGE = gql`\r\n  mutation readMessage($id: Int!) {\r\n    readMessage(id: $id)\r\n  }\r\n`;\r\n\r\nexport const LOGOUT = gql`\r\n  mutation logout {\r\n    logout\r\n  }\r\n`;\r\n\r\nexport const SET_ONLINE = gql`\r\n  mutation connect {\r\n    connect {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SET_OFFLINE = gql`\r\n  mutation disconnect {\r\n    disconnect {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USER_TYPING = gql`\r\n  mutation userTyping($chatId: Int!, $username: String) {\r\n    userTyping(chatId: $chatId, username: $username)\r\n  }\r\n`;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const USERS = gql`\r\n  query users($username: String) {\r\n    users(username: $username) {\r\n      id\r\n      email\r\n      avatar\r\n      online\r\n      username\r\n      lastSeen\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CURRENT_USER = gql`\r\n  query currentUser {\r\n    currentUser {\r\n      id\r\n      email\r\n      avatar\r\n      online\r\n      username\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DIRECTS = gql`\r\n  query directs {\r\n    directs {\r\n      id\r\n      user {\r\n        id\r\n        email\r\n        avatar\r\n        online\r\n        username\r\n        lastSeen\r\n        createdAt\r\n      }\r\n      lastMessage {\r\n        id\r\n        text\r\n        userId\r\n        createdAt\r\n      }\r\n      unread\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CURRENT_DIRECT = gql`\r\n  query currentDirect($userId: Int!) {\r\n    currentDirect(userId: $userId) {\r\n      direct {\r\n        id\r\n        messages {\r\n          id\r\n          text\r\n          userId\r\n          unread\r\n          createdAt\r\n        }\r\n      }\r\n      recipient {\r\n        id\r\n        email\r\n        avatar\r\n        online\r\n        username\r\n        lastSeen\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DIRECT_LAST_MESSAGE = gql`\r\n  query directLastMessage($chatId: Int!) {\r\n    directLastMessage(chatId: $chatId) {\r\n      id\r\n      text\r\n      userId\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n","import qs from \"query-string\";\r\nimport React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nexport const stringifyQuery = (location, modifiers = {}) => {\r\n  const settings = {\r\n    arrayFormat: \"comma\",\r\n    skipNull: true,\r\n    parseNumbers: true,\r\n  };\r\n\r\n  let query = {\r\n    ...qs.parse(location.search, settings),\r\n    ...modifiers,\r\n  };\r\n\r\n  return {\r\n    ...location,\r\n    search: qs.stringify(query, settings),\r\n  };\r\n};\r\n\r\nexport const pasreQuery = (location) => {\r\n  const settings = {\r\n    arrayFormat: \"comma\",\r\n    skipNull: true,\r\n    parseNumbers: true,\r\n  };\r\n  return qs.parse(location.search, settings);\r\n};\r\n\r\nexport const useRefCallback = (value) => {\r\n  const [bounding, setbounding] = React.useState({});\r\n\r\n  const ref = React.useCallback((node) => {\r\n    if (!!node) {\r\n      setbounding(node.getBoundingClientRect());\r\n    }\r\n  }, []);\r\n\r\n  return [ref, bounding];\r\n};\r\n\r\nexport const sortByLastMessage = (a, b) => {\r\n  return b.lastMessage.createdAt - a.lastMessage.createdAt;\r\n};\r\n\r\nexport const formatDate = (date, prefix) => {\r\n  if (date) {\r\n    const currentDate = moment();\r\n    const formatDate = moment(+date);\r\n\r\n    const getFormat = (diff) => {\r\n      if (diff >= 5) {\r\n        return \"DD.MM.YY\";\r\n      } else {\r\n        return \"HH:mm\";\r\n      }\r\n    };\r\n\r\n    const format = getFormat(currentDate.diff(formatDate, \"days\"));\r\n\r\n    if (prefix) {\r\n      return prefix + formatDate.format(format);\r\n    }\r\n    return formatDate.format(format);\r\n  }\r\n};\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const NEW_MESSAGE_SUBSCRIPTION = gql`\r\n  subscription newMessage($chatId: Int!) {\r\n    newMessage(chatId: $chatId) {\r\n      id\r\n      text\r\n      userId\r\n      unread\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_MESSAGE_SUBSCRIPTION = gql`\r\n  subscription deleteMessage($chatId: Int!) {\r\n    deleteMessage(chatId: $chatId) {\r\n      id\r\n      userId\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_DIRECT_SUBSCRIPTION = gql`\r\n  subscription deleteDirect {\r\n    deleteDirect {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NEW_DIRECT_SUBSCRIPTION = gql`\r\n  subscription newDirect {\r\n    newDirect {\r\n      id\r\n      user {\r\n        id\r\n        email\r\n        avatar\r\n        username\r\n        createdAt\r\n      }\r\n      lastMessage {\r\n        id\r\n        text\r\n        userId\r\n        unread\r\n        createdAt\r\n      }\r\n      messages {\r\n        id\r\n        text\r\n        userId\r\n        unread\r\n        createdAt\r\n      }\r\n      unread\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ONLINE_USER_SUBSCRIPTION = gql`\r\n  subscription onlineUser {\r\n    onlineUser {\r\n      id\r\n      online\r\n      lastSeen\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USER_TYPING_SUBSCRIPTION = gql`\r\n  subscription userTyping($chatId: Int!) {\r\n    userTyping(chatId: $chatId)\r\n  }\r\n`;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  Avatar: {\r\n    fontSize: theme.typography.body1.fontSize,\r\n    textTransform: \"uppercase\",\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n","import React from \"react\";\r\nimport { Avatar as MuiAvarat, Badge } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: \"#44b700\",\r\n    color: \"#44b700\",\r\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    \"&::after\": {\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: \"50%\",\r\n      animation: \"$ripple 1.2s infinite ease-in-out\",\r\n      border: \"1px solid currentColor\",\r\n      content: '\"\"',\r\n    },\r\n  },\r\n  \"@keyframes ripple\": {\r\n    \"0%\": {\r\n      transform: \"scale(.8)\",\r\n      opacity: 1,\r\n    },\r\n    \"100%\": {\r\n      transform: \"scale(2.4)\",\r\n      opacity: 0,\r\n    },\r\n  },\r\n}))(Badge);\r\n\r\nconst Avatar = ({ alt = \"\", src, ...props }) => {\r\n  const classes = useStyles();\r\n  const name = alt\r\n    .split(\" \")\r\n    .slice(0, 2)\r\n    .map((x) => x[0])\r\n    .join(\"\");\r\n\r\n  return (\r\n    <StyledBadge\r\n      overlap=\"circle\"\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n      variant=\"dot\"\r\n      invisible={!props.online}\r\n    >\r\n      <MuiAvarat\r\n        src={src}\r\n        // alt={alt}\r\n        className={classes.Avatar}\r\n        style={{ background: src }}\r\n      >\r\n        {name}\r\n      </MuiAvarat>\r\n    </StyledBadge>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import TYPES from \"redux/actions/types\";\r\nimport { authTokens } from \"redux/actions/auth\";\r\n\r\nconst INITIAL_STATE = {\r\n  isAuthorized: !!localStorage.getItem(\"token\"),\r\n};\r\n\r\nexport default (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case TYPES.auth.LOGIN:\r\n      authTokens.set(payload);\r\n      return {\r\n        ...state,\r\n        isAuthorized: true,\r\n      };\r\n    case TYPES.auth.LOGOUT:\r\n      authTokens.remove();\r\n      return {\r\n        ...state,\r\n        isAuthorized: false,\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\n\r\nexport default combineReducers({\r\n  auth\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"redux/reducers\";\r\n\r\nconst INITIAL_STATE = {};\r\nconst MIDDLEWARE = [];\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  INITIAL_STATE,\r\n  composeWithDevTools(applyMiddleware(...MIDDLEWARE))\r\n);\r\n","export default {\r\n  auth: {\r\n    LOGIN: \"LOGIN\",\r\n    LOGOUT: \"LOGOUT\"\r\n  }\r\n};\r\n","import TYPES from \"redux/actions/types\";\r\n\r\nexport const dispatchLogin = (payload) => ({ type: TYPES.auth.LOGIN, payload });\r\n\r\nexport const dispatchLogout = () => ({ type: TYPES.auth.LOGOUT });\r\n\r\nexport const authTokens = {\r\n  set: ({ token, refreshToken }) => {\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"refreshToken\", refreshToken);\r\n  },\r\n  remove: () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"refreshToken\");\r\n  },\r\n};\r\n","export * from \"./auth\";\r\n"],"sourceRoot":""}